//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {

	using System;
	using Qyoto;

	/// <remarks>
	///  This class provides a means for applications to obtain information at
	///  runtime about processor support for certain architecture extensions,
	///  such as MMX, SSE, 3DNow and AltiVec.
	///  </remarks>		<short>    This class provides a means for applications to obtain information at  runtime about processor support for certain architecture extensions,  such as MMX, SSE, 3DNow and AltiVec.</short>

	[SmokeClass("KCPUInfo")]
	public class KCPUInfo : Object {
		protected SmokeInvocation interceptor = null;
		private static SmokeInvocation staticInterceptor = null;
		static KCPUInfo() {
			staticInterceptor = new SmokeInvocation(typeof(KCPUInfo), null);
		}
		/// <remarks>
		///  This enum contains the list of architecture extensions you
		///  can query.
		///      </remarks>		<short>    This enum contains the list of architecture extensions you  can query.</short>
		public enum Extensions {
			IntelMMX = 1<<0,
			IntelSSE = 1<<1,
			IntelSSE2 = 1<<2,
			AMD3DNOW = 1<<3,
			AltiVec = 1<<4,
		}
		/// <remarks>
		///  Returns true if the processor supports <code>extension</code>,
		///  and false otherwise.
		/// <param> name="extension" the feature to query.
		/// </param></remarks>		<return> If true, the processor supports <code>extension.</code>
		/// </return>
		/// 		<short>    Returns true if the processor supports <code>extension</code>,  and false otherwise.</short>
		/// 		<see> Extensions</see>
		public static bool HaveExtension(uint extension) {
			return (bool) staticInterceptor.Invoke("haveExtension$", "haveExtension(unsigned int)", typeof(bool), typeof(uint), extension);
		}
	}
}
