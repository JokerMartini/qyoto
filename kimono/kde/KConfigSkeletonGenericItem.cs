//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {

	using System;
	using Qyoto;


	[SmokeClass("KConfigSkeletonGenericItem")]
	public class KConfigSkeletonGenericItem : KConfigSkeletonItem, IDisposable {
 		protected KConfigSkeletonGenericItem(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(KConfigSkeletonGenericItem), this);
		}
		/// <remarks>
		///       Set the value for this item to the default value
		///      </remarks>		<short>         Set the value for this item to the default value      </short>
		[SmokeMethod("setDefault()")]
		public override void SetDefault() {
			interceptor.Invoke("setDefault", "setDefault()", typeof(void));
		}
		/// <remarks> @copydoc KConfigSkeletonItem.WriteConfig(KConfig ) </remarks>		<short>   @copydoc KConfigSkeletonItem.WriteConfig(KConfig  ) </short>
		[SmokeMethod("writeConfig(KConfig*)")]
		public override void WriteConfig(KConfig config) {
			interceptor.Invoke("writeConfig#", "writeConfig(KConfig*)", typeof(void), typeof(KConfig), config);
		}
		/// <remarks> @copydoc KConfigSkeletonItem.ReadDefault(KConfig) </remarks>		<short>   @copydoc KConfigSkeletonItem.ReadDefault(KConfig ) </short>
		[SmokeMethod("readDefault(KConfig*)")]
		public override void ReadDefault(KConfig config) {
			interceptor.Invoke("readDefault#", "readDefault(KConfig*)", typeof(void), typeof(KConfig), config);
		}
		/// <remarks> @copydoc KConfigSkeletonItem.SwapDefault() </remarks>		<short>   @copydoc KConfigSkeletonItem.SwapDefault() </short>
		[SmokeMethod("swapDefault()")]
		public override void SwapDefault() {
			interceptor.Invoke("swapDefault", "swapDefault()", typeof(void));
		}
		public KConfigSkeletonGenericItem() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KConfigSkeletonGenericItem", "KConfigSkeletonGenericItem()", typeof(void));
		}
		~KConfigSkeletonGenericItem() {
			interceptor.Invoke("~KConfigSkeletonGenericItem", "~KConfigSkeletonGenericItem()", typeof(void));
		}
		public void Dispose() {
			interceptor.Invoke("~KConfigSkeletonGenericItem", "~KConfigSkeletonGenericItem()", typeof(void));
		}
	}
}
