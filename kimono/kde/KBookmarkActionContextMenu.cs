//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {

	using System;
	using Qyoto;


	[SmokeClass("KBookmarkActionContextMenu")]
	public class KBookmarkActionContextMenu : QObject, IDisposable {
 		protected KBookmarkActionContextMenu(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(KBookmarkActionContextMenu), this);
		}
		private static SmokeInvocation staticInterceptor = null;
		static KBookmarkActionContextMenu() {
			staticInterceptor = new SmokeInvocation(typeof(KBookmarkActionContextMenu), null);
		}
		// void contextMenu(const QPoint& arg1,const QString& arg2,KBookmarkManager* arg3,KBookmarkOwner* arg4); >>>> NOT CONVERTED
		public KBookmark AtAddress(string address) {
			return (KBookmark) interceptor.Invoke("atAddress$", "atAddress(const QString&)", typeof(KBookmark), typeof(string), address);
		}
		public KBookmarkActionContextMenu() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KBookmarkActionContextMenu", "KBookmarkActionContextMenu()", typeof(void));
		}
		[Q_SLOT("void slotEditAt()")]
		public void SlotEditAt() {
			interceptor.Invoke("slotEditAt", "slotEditAt()", typeof(void));
		}
		[Q_SLOT("void slotProperties()")]
		public void SlotProperties() {
			interceptor.Invoke("slotProperties", "slotProperties()", typeof(void));
		}
		[Q_SLOT("void slotInsert()")]
		public void SlotInsert() {
			interceptor.Invoke("slotInsert", "slotInsert()", typeof(void));
		}
		[Q_SLOT("void slotRemove()")]
		public void SlotRemove() {
			interceptor.Invoke("slotRemove", "slotRemove()", typeof(void));
		}
		[Q_SLOT("void slotCopyLocation()")]
		public void SlotCopyLocation() {
			interceptor.Invoke("slotCopyLocation", "slotCopyLocation()", typeof(void));
		}
		protected void AddBookmark() {
			interceptor.Invoke("addBookmark", "addBookmark()", typeof(void));
		}
		protected void AddFolderActions() {
			interceptor.Invoke("addFolderActions", "addFolderActions()", typeof(void));
		}
		protected void AddProperties() {
			interceptor.Invoke("addProperties", "addProperties()", typeof(void));
		}
		protected void AddBookmarkActions() {
			interceptor.Invoke("addBookmarkActions", "addBookmarkActions()", typeof(void));
		}
		~KBookmarkActionContextMenu() {
			interceptor.Invoke("~KBookmarkActionContextMenu", "~KBookmarkActionContextMenu()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~KBookmarkActionContextMenu", "~KBookmarkActionContextMenu()", typeof(void));
		}
		public static KBookmarkActionContextMenu Self() {
			return (KBookmarkActionContextMenu) staticInterceptor.Invoke("self", "self()", typeof(KBookmarkActionContextMenu));
		}
		protected new IKBookmarkActionContextMenuSignals Emit {
			get { return (IKBookmarkActionContextMenuSignals) Q_EMIT; }
		}
	}

	public interface IKBookmarkActionContextMenuSignals : IQObjectSignals {
	}
}
