//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {

	using System;
	using Qyoto;

	/// <remarks>
	///  A KFileFilter is a simple base class for file filters. Just
	///  reimplement passesFilter().
	/// </remarks>		<short> Base class for file filters.  </short>

	[SmokeClass("KFileFilter")]
	public abstract class KFileFilter : Object {
		protected SmokeInvocation interceptor = null;
		private IntPtr smokeObject;
		protected KFileFilter(Type dummy) {}
		protected void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(KFileFilter), this);
		}
		/// <remarks>
		///  Checks the given <code>item.</code>
		/// <param> name="item" the item to filter
		/// </param></remarks>		<return> true if the <code>item</code> passes the filter, false otherwise
		///      </return>
		/// 		<short>    Checks the given <code>item.</code></short>
		[SmokeMethod("passesFilter(const KFileItem*) const")]
		public abstract bool PassesFilter(KFileItem item);
		public KFileFilter() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KFileFilter", "KFileFilter()", typeof(void));
		}
	}
}
