//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {

	using System;
	using Qyoto;

	/// <remarks> See <see cref="IKPrintActionSignals"></see> for signals emitted by KPrintAction
	/// </remarks>

	[SmokeClass("KPrintAction")]
	public class KPrintAction : KActionMenu, IDisposable {
 		protected KPrintAction(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(KPrintAction), this);
		}
		private static SmokeInvocation staticInterceptor = null;
		static KPrintAction() {
			staticInterceptor = new SmokeInvocation(typeof(KPrintAction), null);
		}
		public enum PrinterType {
			All = 0,
			Regular = 1,
			Specials = 2,
		}
		public KPrintAction(string text, KPrintAction.PrinterType type, QWidget parentWidget) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KPrintAction$$#", "KPrintAction(const QString&, KPrintAction::PrinterType, QWidget*)", typeof(void), typeof(string), text, typeof(KPrintAction.PrinterType), type, typeof(QWidget), parentWidget);
		}
		public KPrintAction(string text, KPrintAction.PrinterType type) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KPrintAction$$", "KPrintAction(const QString&, KPrintAction::PrinterType)", typeof(void), typeof(string), text, typeof(KPrintAction.PrinterType), type);
		}
		public KPrintAction(string text) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KPrintAction$", "KPrintAction(const QString&)", typeof(void), typeof(string), text);
		}
		public KPrintAction(KIcon icon, string text, KPrintAction.PrinterType type, QWidget parentWidget) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KPrintAction#$$#", "KPrintAction(const KIcon&, const QString&, KPrintAction::PrinterType, QWidget*)", typeof(void), typeof(KIcon), icon, typeof(string), text, typeof(KPrintAction.PrinterType), type, typeof(QWidget), parentWidget);
		}
		public KPrintAction(KIcon icon, string text, KPrintAction.PrinterType type) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KPrintAction#$$", "KPrintAction(const KIcon&, const QString&, KPrintAction::PrinterType)", typeof(void), typeof(KIcon), icon, typeof(string), text, typeof(KPrintAction.PrinterType), type);
		}
		public KPrintAction(KIcon icon, string text) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("KPrintAction#$", "KPrintAction(const KIcon&, const QString&)", typeof(void), typeof(KIcon), icon, typeof(string), text);
		}
		protected void Initialize(KPrintAction.PrinterType type, QWidget parentWidget) {
			interceptor.Invoke("initialize$#", "initialize(KPrintAction::PrinterType, QWidget*)", typeof(void), typeof(KPrintAction.PrinterType), type, typeof(QWidget), parentWidget);
		}
		[Q_SLOT("void slotAboutToShow()")]
		protected void SlotAboutToShow() {
			interceptor.Invoke("slotAboutToShow", "slotAboutToShow()", typeof(void));
		}
		[Q_SLOT("void slotActivated(QAction*)")]
		protected void SlotActivated(QAction arg1) {
			interceptor.Invoke("slotActivated#", "slotActivated(QAction*)", typeof(void), typeof(QAction), arg1);
		}
		~KPrintAction() {
			interceptor.Invoke("~KPrintAction", "~KPrintAction()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~KPrintAction", "~KPrintAction()", typeof(void));
		}
		public static KPrintAction ExportAll(QWidget parentWidget, KActionCollection parent, string name) {
			return (KPrintAction) staticInterceptor.Invoke("exportAll##$", "exportAll(QWidget*, KActionCollection*, const char*)", typeof(KPrintAction), typeof(QWidget), parentWidget, typeof(KActionCollection), parent, typeof(string), name);
		}
		public static KPrintAction ExportAll(QWidget parentWidget, KActionCollection parent) {
			return (KPrintAction) staticInterceptor.Invoke("exportAll##", "exportAll(QWidget*, KActionCollection*)", typeof(KPrintAction), typeof(QWidget), parentWidget, typeof(KActionCollection), parent);
		}
		public static KPrintAction ExportAll(QWidget parentWidget) {
			return (KPrintAction) staticInterceptor.Invoke("exportAll#", "exportAll(QWidget*)", typeof(KPrintAction), typeof(QWidget), parentWidget);
		}
		public static KPrintAction ExportAll() {
			return (KPrintAction) staticInterceptor.Invoke("exportAll", "exportAll()", typeof(KPrintAction));
		}
		public static KPrintAction ExportRegular(QWidget parentWidget, KActionCollection parent, string name) {
			return (KPrintAction) staticInterceptor.Invoke("exportRegular##$", "exportRegular(QWidget*, KActionCollection*, const char*)", typeof(KPrintAction), typeof(QWidget), parentWidget, typeof(KActionCollection), parent, typeof(string), name);
		}
		public static KPrintAction ExportRegular(QWidget parentWidget, KActionCollection parent) {
			return (KPrintAction) staticInterceptor.Invoke("exportRegular##", "exportRegular(QWidget*, KActionCollection*)", typeof(KPrintAction), typeof(QWidget), parentWidget, typeof(KActionCollection), parent);
		}
		public static KPrintAction ExportRegular(QWidget parentWidget) {
			return (KPrintAction) staticInterceptor.Invoke("exportRegular#", "exportRegular(QWidget*)", typeof(KPrintAction), typeof(QWidget), parentWidget);
		}
		public static KPrintAction ExportRegular() {
			return (KPrintAction) staticInterceptor.Invoke("exportRegular", "exportRegular()", typeof(KPrintAction));
		}
		public static KPrintAction ExportSpecial(QWidget parentWidget, KActionCollection parent, string name) {
			return (KPrintAction) staticInterceptor.Invoke("exportSpecial##$", "exportSpecial(QWidget*, KActionCollection*, const char*)", typeof(KPrintAction), typeof(QWidget), parentWidget, typeof(KActionCollection), parent, typeof(string), name);
		}
		public static KPrintAction ExportSpecial(QWidget parentWidget, KActionCollection parent) {
			return (KPrintAction) staticInterceptor.Invoke("exportSpecial##", "exportSpecial(QWidget*, KActionCollection*)", typeof(KPrintAction), typeof(QWidget), parentWidget, typeof(KActionCollection), parent);
		}
		public static KPrintAction ExportSpecial(QWidget parentWidget) {
			return (KPrintAction) staticInterceptor.Invoke("exportSpecial#", "exportSpecial(QWidget*)", typeof(KPrintAction), typeof(QWidget), parentWidget);
		}
		public static KPrintAction ExportSpecial() {
			return (KPrintAction) staticInterceptor.Invoke("exportSpecial", "exportSpecial()", typeof(KPrintAction));
		}
		protected new IKPrintActionSignals Emit {
			get { return (IKPrintActionSignals) Q_EMIT; }
		}
	}

	public interface IKPrintActionSignals : IKActionMenuSignals {
		[Q_SIGNAL("void print(KPrinter*)")]
		void Print(KPrinter arg1);
	}
}
