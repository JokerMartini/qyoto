//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {

	namespace DOM {

	using System;
	using Qyoto;

	/// <remarks>
	///  Introduced in DOM Level 2:
	///  Event operations may throw an EventException as specified in their method
	///  descriptions.
	///  </remarks>		<short>    Introduced in DOM Level 2: </short>

	[SmokeClass("DOM::EventException")]
	public class EventException : Object, IDisposable {
		protected SmokeInvocation interceptor = null;
		private IntPtr smokeObject;
		protected EventException(Type dummy) {}
		protected void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(EventException), this);
		}
		public EventException(ushort _code) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("EventException$", "EventException(unsigned short)", typeof(void), typeof(ushort), _code);
		}
		public EventException(DOM.EventException other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("EventException#", "EventException(const DOM::EventException&)", typeof(void), typeof(DOM.EventException), other);
		}
		~EventException() {
			interceptor.Invoke("~EventException", "~EventException()", typeof(void));
		}
		public void Dispose() {
			interceptor.Invoke("~EventException", "~EventException()", typeof(void));
		}
	}
	}
}
