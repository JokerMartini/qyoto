//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {

	namespace KIO {

	using System;
	using Qyoto;


	[SmokeClass("KIO::Task")]
	public class Task : Object, IDisposable {
		protected SmokeInvocation interceptor = null;
		private IntPtr smokeObject;
		protected Task(Type dummy) {}
		protected void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(Task), this);
		}
		public Task() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("Task", "Task()", typeof(void));
		}
		~Task() {
			interceptor.Invoke("~Task", "~Task()", typeof(void));
		}
		public void Dispose() {
			interceptor.Invoke("~Task", "~Task()", typeof(void));
		}
	}
	}
}
