2007-16-01  Richard Dale  <rdale@foton.es>

	* Added missing QX11EmbedContainer and QX11EmbedWidget classes

2007-15-01  Richard Dale  <rdale@foton.es>

	* Change the names of the methods that setup callbacks from
	  AddFoobar() to InstallFoobar(), where Foobar() is the callback
	  being setup.

2007-14-01  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* Ported most of the .NET 1.1 code to .NET 2.0
	
2007-13-01  Richard Dale  <rdale@foton.es>

	* Added a generically typed QVariant.Value() method
	* QDBusReply uses QVariant.Value()
	* Added a couple of methods using QDBusReply to QDBusConnectionInterface

2007-12-01  Richard Dale  <rdale@foton.es>

	* Change the cmake build to use gmcs rather than mcs
	* Added a QDBusReply class using a generic type
	* Added some missing methods to QDBusConnectionInterface

2006-12-07  Richard Dale  <rdale@foton.es>

	* Use QDate, QDateTime and QTime for dates and times, not the C#
	  DateTime class
	* Added missing QAccessible* and QFileSystemWatcher classes

2006-12-06  Richard Dale  <rdale@foton.es>

	* Regenerate the Qyoto classes against the Qt 4.2.2 headers
	* Split the classes into core, qdbus, gui, network, opengl, sql, svg
      and xml directories corresponding to the Qt modules.
	* Changed the CMakeLists.txt build file to match the new structure

2006-12-04  Arno Rehn  <arno@arnorehn.de>

	* Added marshallers for QMaps

2006-12-02  Arno Rehn  <arno@arnorehn.de>

	* Added marshalling function for QList<int>

2006-11-26  Arno Rehn  <arno@arnorehn.de>

	* Added marshall_ItemList and all DEF_LIST_MARSHALLER and
	  DEF_VALUELIST_MARSHALLER from qtruby.
	* Added a CMake file for compilation with CMake. Still keeping
	  the old makefile in case for some reason we need it again.

2006-10-23  Arno Rehn  <arno@arnorehn.de>

	* Marshalling ItemLists should now fully work. But we still need
	  many of the DEF_VALUELIST_MARSHALLER things.

2006-10-23  Arno Rehn  <arno@arnorehn.de>

	* Added more code for marshalling QLists. QList<T> return types
	  should now work for all QLists where T is not a primitive type.

2006-10-23  Richard Dale  <rdale@foton.es>

	* When a QMetaObject was constructed, the parent was wrongly being
	  set to the superclass of the superclass, rather than just the
	  superclass
	* If no Emit() method is found for a class, assume it doesn't have
	  any signals and don't include any in the QMetaObject for it.
	* Only look for methods marked Q_SLOT in the current class, and not
	  the superclasses when constructing a QMetaObject.

2006-10-22  Arno Rehn  <arno@arnorehn.de>

	* Currect return value for QyotoSmokeBinding::callMethod() where
	  it would return 'true' if metaObject() was overriden
	  (fixes QDockWidget bug)
	* Fixed some internal class names

2006-10-20  Richard Dale  <rdale@foton.es>

	* Added alloc_smokeqyoto_object() and free_smokeqyoto_object() f'ns

2006-10-19  Arno Rehn  <arno@arnorehn.de>

	* Fixed marshalling of QStringLists

2006-10-19  Arno Rehn  <arno@arnorehn.de>

	* Added support for marshalling C++-QStringLists to C#-ArrayLists
	  (not tested yet)

2006-10-19  Richard Dale  <rdale@foton.es>

	* Removed Qt3 Qyoto sources
	* Moved Qyoto.cs to the top directory, so that only autogenerated
	  classes are in the qyoto directory.
	* Added some non-working list marshalling code for QStringLists and 
	  QList<QVector> so that they can be used for getting QDBus to work
	* Removed assignment to the qApp global variable in the QCoreApplication
	  constructor as C# doesn't support downcasting.

2006-10-18  Richard Dale  <rdale@foton.es>

	* Enum return types were failing with an invalid cast error.
	  They are now created correctly with a Enum.ToObject() call.
	* Regenerated the QDBus* classes from the Qt 4.2 headers

2006-10-18  Arno Rehn  <arno@arnorehn.de>

	* Implemented a very ugly hack to construct a QMainWindow in C++ and set
	  the resulting smokeqyoto_object to the C#-instance. This fixes the
	  QDockWidgets not being movable.
	  Needs improvement!

2006-10-18  Arno Rehn  <arno@arnorehn.de>

	* Added a methodCache, so if a methodId has already been looked up it can
	  be retrieved from the methodCache.

2006-10-15  Richard Dale  <rdale@foton.es>

	* When there was more than one possible candidate for a method in the
	  Smoke library, the SmokeInvocation code was just choosing the first one
	  it found. Added some code to select the one that matched the SmokeMethod()
	  type signature annotation. Fixes problem reported by Arno Rehn.

2006-10-06  Arno Rehn  <arno@arnorehn.de>

	* Fixed some problems with enums in uics.
	* Fixed problem where SetupUi() and RetranslateUi() weren't accessible
	  due to a missing 'public'

2006-10-06  Arno Rehn  <arno@arnorehn.de>

	* Copied over some fixes from QtRuby:
		* Fixed a bug in slot return values where they were only
		  working when a signal was emitted in Ruby, and not when
		  a C++ signal was emitted. The zeroth element in the array
		  of 'void*'s passed to qt_metacall() was being overwritten
		  by a pointer to the result of the slot invocation. Instead
		  the pointer in the zeroth element is now correctly deref'd,
		  and the result put where it points to.

2006-10-06  Arno Rehn  <arno@arnorehn.de>

	* Implemented Q_CLASSINFO and Q_SCRIPTABLE attributes.
	* Fixed an error in the automatic signature generation when return type was
	  void.

2006-10-04  Arno Rehn  <arno@arnorehn.de>

	* Now slot return values should work, but didn't test it.

2006-10-03  Arno Rehn  <arno@arnorehn.de>

	* Fixed crash when constructing a QSpacerItem (may need improvement)
	* Fixed crash when GetSmokeObject() was called without a proper InstanceHandle

2006-09-23  Richard Dale  <rdale@foton.es>

	* Fixed crash when a class didn't have any signals defined

2006-09-23  Arno Rehn  <arno@arnorehn.de>

	* The signatures for slots and signals are now autogenerated, so it's not necessary
	  anymore to specify them by hand. It's still possible, though.
	* The signal signatures are now stored in a Hashtable, too.

2006-09-22  Arno Rehn  <arno@arnorehn.de>

	* The return type of a slot is now being added to the definition in the QMetaObject
	* Added a struct which holds the MethodInfo, the signature and the return type of a slot.
	  This struct is now the 'Value' in the Slot-Hashtable

2006-09-17  Richard Dale  <rdale@foton.es>

	* Applied patches from Arno Rehn:
		* Added the code from QtRuby to marshall slot return types
		* TODO: add code to parse the return type in a Q_SLOT() attribute, and add it
		  to the slot's definition in the QMetaObject

2006-09-11  Richard Dale  <rdale@foton.es>

	* Applied patches from Arno Rehn:
		* Fixed a bug in emitting signals where the arguments were being
		  wrongly copied from the C# argument array to the smoke stack
		  with an 'off by one' error.
		* A Qt.dll is now built by the makefile instead of all the sources
		  always all being compiled.

2006-08-24  Richard Dale  <rdale@foton.es>

	* Applied patches from Arno Rehn:
		* Prevent crash when a custom slot was defined with no arguments
		* Fix crash when on application exit by deleting the qApp
		  QApplication instance

2006-07-16  Richard Dale  <rdale@foton.es>

	* Regenerated the C# sources from the Qt 4.2 headers

2006-06-08  Richard Dale  <rdale@foton.es>

	* Add SmokeMethod() attribute to destructors
	* More list arguments are now C# ArrayLists

2006-06-09  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* Added example t10.

2006-06-09  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* Added example t9.

2006-06-09  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* Added example t8. It almost works.
	* Fixed resolve_classname.
	* Added IDisposable to QObject's parents.
	* Fixed off-by-one error when handling arguments in
	  SmokeInvocation.InvokeMethod.

2006-06-08  Richard Dale  <rdale@foton.es>

	* Example t7 now works, which means that both custom slots
	  slots and signals work.
	* At present an Emit() method and signals interface is
	  needed for classes which don't have any custom signals
	* The example wasn't working because the slots and signals
	  had return types of 'void', and slot/signal return values
	  haven't been implemented yet.

2006-06-08  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* The overriden MetaObject is now called in place
	  of the qt version.
	* make_metaObject didn't create the parent meta object
	  correctly. Modified it so that it calls the parent version
	  of metaObject().
	* Slot arguments are now handled correctly.
	* Added static IsSmokeClass method to Qyoto.

2006-06-08  Richard Dale  <rdale@foton.es>

	* Added the QtDBus classes

2006-06-07  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* Changed all occurences of Qt namespace to Qyoto in qyoto.cpp
	* Restored the _smokeObject field in QObject.

2006-06-06  Richard Dale  <rdale@foton.es>

	* Added a Q_SCRIPTABLE attribute for dbus support
	* The Qt class needs to be a MarshallByRefObject instance for
	  transparent proxies to work with its subclasses
	* Added a Q_CLASSINFO attribute for dbus support

2006-06-05  Richard Dale  <rdale@foton.es>

	* QObject is now a subclass of Qt, as suggested in the previous
	  commit.
	* The Qyoto classes are now in a namespace called 'Qyoto' rather
	  than 'Qt'. It would probably be best to make QObject.cs a sub
	  class of Qt, to avoid needed to prefix SLOT() and SIGNAL() with
	  'Qt.' in QObject subclasses.
	* Added QObject.MetaObject() as specified by Paolo for custom slots
	  and signals.
	* Fixed the 'Hello.cs' example to work with the new namespace

2006-06-02  Richard Dale  <rdale@foton.es>

	* Invocations of signals via the qt_metacall() C function
	  are now special cased, and QMetaObject::activate() is used
	  to call them. C# slots are still invoked via the InvokeSlot
	  class.
	* Fixed bug when emitting signals for pointer arg types
	* setMocType() now works with reference types when there
	  in no corresponding value type in the Smoke lib.

2006-05-31  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* Avoided some useless method calls to handle qt_metacall
	  (removed InvokeMetaCallMethod and QyotoMetaCall)
	* Fixed QMetaObject creation
		* data and stringdata are now copied in C++ code to prevent 
		  garbage collection.
		* Changed data in QMetaObject to an array of uint instead of int.
	* Removed the void** marshaller since it was unneeded.
	* Partially implemented custom slot invocation.
	* Added tutorial 7 (doesn't work yet).

2006-05-31  Richard Dale  <rdale@foton.es>

	* Moved the tutorial examples to examples/tutorial

2006-05-31  Paolo Capriotti  <paolo.capriotti@gmail.com>

	* Added a void** marshaller in handler.cpp (needed for qt_metacall).
	* Decommented InvokeSlot and ported to qt4 (invokeSlot() method still empty).
	* Added some code to intercept a qt_metacall and invoke the corresponding slot (doesn't work yet).
	* Rewritten Hello.cs to test custom slot invocation.

2006-05-30  Richard Dale  <rdale@foton.es>

	* Applied patch from Arno Rehn for bringing the Qt3 version of Qyoto
	  up to date with the Qt4 one wrt Paulo's changes

2006-05-29  Richard Dale  <rdale@foton.es>

	* More fixes from Paulo:
	* To avoid virtual method dispatch resulting in infinite loop, the
	  meta object instance is now created in c++ code using smoke (just as
	  in qtruby).
	* Qyoto.GetMetaObject now works for Qt types as well
	* Decommented code in set_obj_info. This function is used by the
	  return value marshaller for non-primitive types and by
	  make_metaObject.

	* Added patch from Paulo Capriotti to create a QMetaObject at runtime
	  for a Qyoto class with custom slots and/or signals

2006-05-26  Richard Dale  <rdale@foton.es>

	* Added code from Arno Rehn to access obtain the return value of
	  a classes Emit() method as an interface and obtain the C++ signal 
	  type signatures and set them up in HashTables with a top level
	  table with the classes as keys, containing sub tables with the
	  C++ signatures as keys which map onto the correponding C# 
	  MethodInfo as a value
	* Some fixes from Paolo Capriotti:
		* Added fix for a crash in SmokeInvocation.cs when a class with
		  virtual methods wasn't a subclass of Qt
		* The code for emitting signals now works with Qt4
		* The code in QObject.cs to set up the transparent proxy Q_EMIT 
		  for an instance's signal interfaces now works.

2006-05-26  Richard Dale  <rdale@foton.es>

	* The Hash table to get a marshaller given a type name wasn't working.
	  Thanks to Paolo Capriotti for the fix.

2006-04-21  sedwards

	* C# bindings roughly converted from Qt3 to Qt4. (doesn't work yet).

2006-05-01  Richard Dale  <Richard_Dale@tipitina.demon.co.uk>

	* Regenerated the Qt4 *.cs sources

2006-02-14  Richard Dale  <Richard_Dale@tipitina.demon.co.uk>

	* Added a TODO list, and this ChangeLog to the project

