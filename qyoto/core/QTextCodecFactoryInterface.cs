//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QTextCodecFactoryInterface")]
	public abstract class QTextCodecFactoryInterface : QFactoryInterface {
 		protected QTextCodecFactoryInterface(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextCodecFactoryInterface), this);
			interceptor = (QTextCodecFactoryInterface) realProxy.GetTransparentProxy();
		}
		[SmokeMethod("create", "(const QString&)", "$")]
		public abstract QTextCodec Create(string key);
		public QTextCodecFactoryInterface() : this((Type) null) {
			CreateProxy();
			NewQTextCodecFactoryInterface();
		}
		[SmokeMethod("QTextCodecFactoryInterface", "()", "")]
		private void NewQTextCodecFactoryInterface() {
			((QTextCodecFactoryInterface) interceptor).NewQTextCodecFactoryInterface();
		}
	}
}
