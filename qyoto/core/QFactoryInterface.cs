//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;
	using System.Collections.Generic;

	[SmokeClass("QFactoryInterface")]
	public abstract class QFactoryInterface : MarshalByRefObject {
		protected QFactoryInterface interceptor = null;
		private IntPtr smokeObject;
		protected QFactoryInterface(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QFactoryInterface), this);
			interceptor = (QFactoryInterface) realProxy.GetTransparentProxy();
		}
		[SmokeMethod("keys", "() const", "")]
		public abstract List<string> Keys();
		public QFactoryInterface() : this((Type) null) {
			CreateProxy();
			NewQFactoryInterface();
		}
		[SmokeMethod("QFactoryInterface", "()", "")]
		private void NewQFactoryInterface() {
			((QFactoryInterface) interceptor).NewQFactoryInterface();
		}
	}
}
