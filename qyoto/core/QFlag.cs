//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QFlag")]
	public class QFlag : MarshalByRefObject, IDisposable {
		protected QFlag interceptor = null;
		private IntPtr smokeObject;
		protected QFlag(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QFlag), this);
			interceptor = (QFlag) realProxy.GetTransparentProxy();
		}
		//  operator int(); >>>> NOT CONVERTED
		public QFlag(int i) : this((Type) null) {
			CreateProxy();
			NewQFlag(i);
		}
		[SmokeMethod("QFlag", "(int)", "$")]
		private void NewQFlag(int i) {
			((QFlag) interceptor).NewQFlag(i);
		}
		~QFlag() {
			DisposeQFlag();
		}
		public void Dispose() {
			DisposeQFlag();
		}
		[SmokeMethod("~QFlag", "()", "")]
		private void DisposeQFlag() {
			((QFlag) interceptor).DisposeQFlag();
		}
	}
}
