//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QLibrary : QObject, IDisposable {
 		protected QLibrary(Type dummy) : base((Type) null) {}
		interface IQLibraryProxy {
			string Tr(string s, string c);
			string Tr(string s);
			bool IsLibrary(string fileName);
		}

		protected void CreateQLibraryProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QLibrary), this);
			_interceptor = (QLibrary) realProxy.GetTransparentProxy();
		}
		private QLibrary ProxyQLibrary() {
			return (QLibrary) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QLibrary() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQLibraryProxy), null);
			_staticInterceptor = (IQLibraryProxy) realProxy.GetTransparentProxy();
		}
		private static IQLibraryProxy StaticQLibrary() {
			return (IQLibraryProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQLibrary().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QLibrary(QObject parent) : this((Type) null) {
			CreateQLibraryProxy();
			NewQLibrary(parent);
		}
		private void NewQLibrary(QObject parent) {
			ProxyQLibrary().NewQLibrary(parent);
		}
		public QLibrary() : this((Type) null) {
			CreateQLibraryProxy();
			NewQLibrary();
		}
		private void NewQLibrary() {
			ProxyQLibrary().NewQLibrary();
		}
		public QLibrary(string fileName, QObject parent) : this((Type) null) {
			CreateQLibraryProxy();
			NewQLibrary(fileName,parent);
		}
		private void NewQLibrary(string fileName, QObject parent) {
			ProxyQLibrary().NewQLibrary(fileName,parent);
		}
		public QLibrary(string fileName) : this((Type) null) {
			CreateQLibraryProxy();
			NewQLibrary(fileName);
		}
		private void NewQLibrary(string fileName) {
			ProxyQLibrary().NewQLibrary(fileName);
		}
		// void* resolve(const char* arg1); >>>> NOT CONVERTED
		public bool Load() {
			return ProxyQLibrary().Load();
		}
		public bool Unload() {
			return ProxyQLibrary().Unload();
		}
		public bool IsLoaded() {
			return ProxyQLibrary().IsLoaded();
		}
		public void SetFileName(string fileName) {
			ProxyQLibrary().SetFileName(fileName);
		}
		public string FileName() {
			return ProxyQLibrary().FileName();
		}
		public static new string Tr(string s, string c) {
			return StaticQLibrary().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQLibrary().Tr(s);
		}
		// void* resolve(const QString& arg1,const char* arg2); >>>> NOT CONVERTED
		public static bool IsLibrary(string fileName) {
			return StaticQLibrary().IsLibrary(fileName);
		}
		~QLibrary() {
			ProxyQLibrary().Dispose();
		}
		public new void Dispose() {
			ProxyQLibrary().Dispose();
		}
	}
}
