//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQMenuBarSignals"></see> for signals emitted by QMenuBar
	public class QMenuBar : QWidget, IDisposable {
 		protected QMenuBar(Type dummy) : base((Type) null) {}
		interface IQMenuBarProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQMenuBarProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QMenuBar), this);
			_interceptor = (QMenuBar) realProxy.GetTransparentProxy();
		}
		private QMenuBar ProxyQMenuBar() {
			return (QMenuBar) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QMenuBar() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQMenuBarProxy), null);
			_staticInterceptor = (IQMenuBarProxy) realProxy.GetTransparentProxy();
		}
		private static IQMenuBarProxy StaticQMenuBar() {
			return (IQMenuBarProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQMenuBar().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QMenuBar(QWidget parent) : this((Type) null) {
			CreateQMenuBarProxy();
			NewQMenuBar(parent);
		}
		private void NewQMenuBar(QWidget parent) {
			ProxyQMenuBar().NewQMenuBar(parent);
		}
		public QMenuBar() : this((Type) null) {
			CreateQMenuBarProxy();
			NewQMenuBar();
		}
		private void NewQMenuBar() {
			ProxyQMenuBar().NewQMenuBar();
		}
		public new void AddAction(QAction action) {
			ProxyQMenuBar().AddAction(action);
		}
		public new QAction AddAction(string text) {
			return ProxyQMenuBar().AddAction(text);
		}
		public new QAction AddAction(string text, QObject receiver, string member) {
			return ProxyQMenuBar().AddAction(text,receiver,member);
		}
		public QAction AddMenu(QMenu menu) {
			return ProxyQMenuBar().AddMenu(menu);
		}
		public QMenu AddMenu(string title) {
			return ProxyQMenuBar().AddMenu(title);
		}
		public QMenu AddMenu(QIcon icon, string title) {
			return ProxyQMenuBar().AddMenu(icon,title);
		}
		public QAction AddSeparator() {
			return ProxyQMenuBar().AddSeparator();
		}
		public QAction InsertMenu(QAction before, QMenu menu) {
			return ProxyQMenuBar().InsertMenu(before,menu);
		}
		public void Clear() {
			ProxyQMenuBar().Clear();
		}
		public QAction ActiveAction() {
			return ProxyQMenuBar().ActiveAction();
		}
		public void SetDefaultUp(bool arg1) {
			ProxyQMenuBar().SetDefaultUp(arg1);
		}
		public bool IsDefaultUp() {
			return ProxyQMenuBar().IsDefaultUp();
		}
		public new QSize SizeHint() {
			return ProxyQMenuBar().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQMenuBar().MinimumSizeHint();
		}
		public new int HeightForWidth(int arg1) {
			return ProxyQMenuBar().HeightForWidth(arg1);
		}
		public QRect ActionGeometry(QAction arg1) {
			return ProxyQMenuBar().ActionGeometry(arg1);
		}
		public QAction ActionAt(QPoint arg1) {
			return ProxyQMenuBar().ActionAt(arg1);
		}
		public void SetCornerWidget(QWidget w, int corner) {
			ProxyQMenuBar().SetCornerWidget(w,corner);
		}
		public void SetCornerWidget(QWidget w) {
			ProxyQMenuBar().SetCornerWidget(w);
		}
		public QWidget CornerWidget(int corner) {
			return ProxyQMenuBar().CornerWidget(corner);
		}
		public QWidget CornerWidget() {
			return ProxyQMenuBar().CornerWidget();
		}
		public static new string Tr(string s, string c) {
			return StaticQMenuBar().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQMenuBar().Tr(s);
		}
		protected new void ChangeEvent(QEvent arg1) {
			ProxyQMenuBar().ChangeEvent(arg1);
		}
		protected new void KeyPressEvent(QKeyEvent arg1) {
			ProxyQMenuBar().KeyPressEvent(arg1);
		}
		protected new void MouseReleaseEvent(QMouseEvent arg1) {
			ProxyQMenuBar().MouseReleaseEvent(arg1);
		}
		protected new void MousePressEvent(QMouseEvent arg1) {
			ProxyQMenuBar().MousePressEvent(arg1);
		}
		protected new void MouseMoveEvent(QMouseEvent arg1) {
			ProxyQMenuBar().MouseMoveEvent(arg1);
		}
		protected new void LeaveEvent(QEvent arg1) {
			ProxyQMenuBar().LeaveEvent(arg1);
		}
		protected new void PaintEvent(QPaintEvent arg1) {
			ProxyQMenuBar().PaintEvent(arg1);
		}
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQMenuBar().ResizeEvent(arg1);
		}
		protected new void ActionEvent(QActionEvent arg1) {
			ProxyQMenuBar().ActionEvent(arg1);
		}
		protected new void FocusOutEvent(QFocusEvent arg1) {
			ProxyQMenuBar().FocusOutEvent(arg1);
		}
		protected new void FocusInEvent(QFocusEvent arg1) {
			ProxyQMenuBar().FocusInEvent(arg1);
		}
		public new bool EventFilter(QObject arg1, QEvent arg2) {
			return ProxyQMenuBar().EventFilter(arg1,arg2);
		}
		public new bool Event(QEvent arg1) {
			return ProxyQMenuBar().Event(arg1);
		}
		~QMenuBar() {
			ProxyQMenuBar().Dispose();
		}
		public new void Dispose() {
			ProxyQMenuBar().Dispose();
		}
	}

	public interface IQMenuBarSignals {
		void Triggered(QAction action);
		void Hovered(QAction action);
	}
}
