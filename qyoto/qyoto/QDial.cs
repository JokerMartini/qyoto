//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QDial : QAbstractSlider, IDisposable {
 		protected QDial(Type dummy) : base((Type) null) {}
		interface IQDialProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQDialProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDial), this);
			_interceptor = (QDial) realProxy.GetTransparentProxy();
		}
		private QDial ProxyQDial() {
			return (QDial) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDial() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDialProxy), null);
			_staticInterceptor = (IQDialProxy) realProxy.GetTransparentProxy();
		}
		private static IQDialProxy StaticQDial() {
			return (IQDialProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQDial().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QDial(QWidget parent) : this((Type) null) {
			CreateQDialProxy();
			NewQDial(parent);
		}
		private void NewQDial(QWidget parent) {
			ProxyQDial().NewQDial(parent);
		}
		public QDial() : this((Type) null) {
			CreateQDialProxy();
			NewQDial();
		}
		private void NewQDial() {
			ProxyQDial().NewQDial();
		}
		public bool Wrapping() {
			return ProxyQDial().Wrapping();
		}
		public int NotchSize() {
			return ProxyQDial().NotchSize();
		}
		public void SetNotchTarget(double target) {
			ProxyQDial().SetNotchTarget(target);
		}
		// qreal notchTarget(); >>>> NOT CONVERTED
		public bool NotchesVisible() {
			return ProxyQDial().NotchesVisible();
		}
		public new QSize SizeHint() {
			return ProxyQDial().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQDial().MinimumSizeHint();
		}
		public void SetNotchesVisible(bool visible) {
			ProxyQDial().SetNotchesVisible(visible);
		}
		public void SetWrapping(bool on) {
			ProxyQDial().SetWrapping(on);
		}
		public static new string Tr(string s, string c) {
			return StaticQDial().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQDial().Tr(s);
		}
		protected new void ResizeEvent(QResizeEvent re) {
			ProxyQDial().ResizeEvent(re);
		}
		protected new void PaintEvent(QPaintEvent pe) {
			ProxyQDial().PaintEvent(pe);
		}
		protected new void MousePressEvent(QMouseEvent me) {
			ProxyQDial().MousePressEvent(me);
		}
		protected new void MouseReleaseEvent(QMouseEvent me) {
			ProxyQDial().MouseReleaseEvent(me);
		}
		protected new void MouseMoveEvent(QMouseEvent me) {
			ProxyQDial().MouseMoveEvent(me);
		}
		protected new void SliderChange(int change) {
			ProxyQDial().SliderChange(change);
		}
		~QDial() {
			ProxyQDial().Dispose();
		}
		public new void Dispose() {
			ProxyQDial().Dispose();
		}
	}
}
