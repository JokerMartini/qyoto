//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QPrintEngine : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QPrintEngine(Type dummy) {}
		interface IQPrintEngineProxy {
		}

		protected void CreateQPrintEngineProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QPrintEngine), this);
			_interceptor = (QPrintEngine) realProxy.GetTransparentProxy();
		}
		private QPrintEngine ProxyQPrintEngine() {
			return (QPrintEngine) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QPrintEngine() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQPrintEngineProxy), null);
			_staticInterceptor = (IQPrintEngineProxy) realProxy.GetTransparentProxy();
		}
		private static IQPrintEngineProxy StaticQPrintEngine() {
			return (IQPrintEngineProxy) _staticInterceptor;
		}

		enum PrintEnginePropertyKey {
			PPK_CollateCopies = 0,
			PPK_ColorMode = 1,
			PPK_Creator = 2,
			PPK_DocumentName = 3,
			PPK_FullPage = 4,
			PPK_NumberOfCopies = 5,
			PPK_Orientation = 6,
			PPK_OutputFileName = 7,
			PPK_PageOrder = 8,
			PPK_PageRect = 9,
			PPK_PageSize = 10,
			PPK_PaperRect = 11,
			PPK_PaperSource = 12,
			PPK_PrinterName = 13,
			PPK_PrinterProgram = 14,
			PPK_Resolution = 15,
			PPK_SelectionOption = 16,
			PPK_SupportedResolutions = 17,
			PPK_WindowsPageSize = 18,
			PPK_CustomBase = 0xff00,
		}
		public virtual void SetProperty(int key, QVariant value) {
			ProxyQPrintEngine().SetProperty(key,value);
		}
		public virtual QVariant Property(int key) {
			return ProxyQPrintEngine().Property(key);
		}
		public virtual bool NewPage() {
			return ProxyQPrintEngine().NewPage();
		}
		public virtual bool Abort() {
			return ProxyQPrintEngine().Abort();
		}
		public virtual int Metric(IQPaintDevice arg1) {
			return ProxyQPrintEngine().Metric(arg1);
		}
		public virtual int PrinterState() {
			return ProxyQPrintEngine().PrinterState();
		}
	}
}
