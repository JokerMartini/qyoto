//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QGenericArgument : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QGenericArgument(Type dummy) {}
		interface IQGenericArgumentProxy {
		}

		protected void CreateQGenericArgumentProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QGenericArgument), this);
			_interceptor = (QGenericArgument) realProxy.GetTransparentProxy();
		}
		private QGenericArgument ProxyQGenericArgument() {
			return (QGenericArgument) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QGenericArgument() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQGenericArgumentProxy), null);
			_staticInterceptor = (IQGenericArgumentProxy) realProxy.GetTransparentProxy();
		}
		private static IQGenericArgumentProxy StaticQGenericArgument() {
			return (IQGenericArgumentProxy) _staticInterceptor;
		}

		// QGenericArgument* QGenericArgument(const char* arg1,const void* arg2); >>>> NOT CONVERTED
		public QGenericArgument(string aName) : this((Type) null) {
			CreateQGenericArgumentProxy();
			NewQGenericArgument(aName);
		}
		private void NewQGenericArgument(string aName) {
			ProxyQGenericArgument().NewQGenericArgument(aName);
		}
		public QGenericArgument() : this((Type) null) {
			CreateQGenericArgumentProxy();
			NewQGenericArgument();
		}
		private void NewQGenericArgument() {
			ProxyQGenericArgument().NewQGenericArgument();
		}
		// void* data(); >>>> NOT CONVERTED
		public string Name() {
			return ProxyQGenericArgument().Name();
		}
		~QGenericArgument() {
			ProxyQGenericArgument().Dispose();
		}
		public void Dispose() {
			ProxyQGenericArgument().Dispose();
		}
	}
}
