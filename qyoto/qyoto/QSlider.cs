//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QSlider : QAbstractSlider, IDisposable {
 		protected QSlider(Type dummy) : base((Type) null) {}
		interface IQSliderProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQSliderProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QSlider), this);
			_interceptor = (QSlider) realProxy.GetTransparentProxy();
		}
		private QSlider ProxyQSlider() {
			return (QSlider) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QSlider() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQSliderProxy), null);
			_staticInterceptor = (IQSliderProxy) realProxy.GetTransparentProxy();
		}
		private static IQSliderProxy StaticQSlider() {
			return (IQSliderProxy) _staticInterceptor;
		}

		enum E_TickPosition {
			NoTicks = 0,
			TicksAbove = 1,
			TicksLeft = TicksAbove,
			TicksBelow = 2,
			TicksRight = TicksBelow,
			TicksBothSides = 3,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQSlider().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QSlider(QWidget parent) : this((Type) null) {
			CreateQSliderProxy();
			NewQSlider(parent);
		}
		private void NewQSlider(QWidget parent) {
			ProxyQSlider().NewQSlider(parent);
		}
		public QSlider() : this((Type) null) {
			CreateQSliderProxy();
			NewQSlider();
		}
		private void NewQSlider() {
			ProxyQSlider().NewQSlider();
		}
		public QSlider(int orientation, QWidget parent) : this((Type) null) {
			CreateQSliderProxy();
			NewQSlider(orientation,parent);
		}
		private void NewQSlider(int orientation, QWidget parent) {
			ProxyQSlider().NewQSlider(orientation,parent);
		}
		public QSlider(int orientation) : this((Type) null) {
			CreateQSliderProxy();
			NewQSlider(orientation);
		}
		private void NewQSlider(int orientation) {
			ProxyQSlider().NewQSlider(orientation);
		}
		public new QSize SizeHint() {
			return ProxyQSlider().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQSlider().MinimumSizeHint();
		}
		public void SetTickPosition(int position) {
			ProxyQSlider().SetTickPosition(position);
		}
		public int TickPosition() {
			return ProxyQSlider().TickPosition();
		}
		public void SetTickInterval(int ti) {
			ProxyQSlider().SetTickInterval(ti);
		}
		public int TickInterval() {
			return ProxyQSlider().TickInterval();
		}
		public new bool Event(QEvent arg1) {
			return ProxyQSlider().Event(arg1);
		}
		public static new string Tr(string s, string c) {
			return StaticQSlider().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQSlider().Tr(s);
		}
		protected new void PaintEvent(QPaintEvent ev) {
			ProxyQSlider().PaintEvent(ev);
		}
		protected new void MousePressEvent(QMouseEvent ev) {
			ProxyQSlider().MousePressEvent(ev);
		}
		protected new void MouseReleaseEvent(QMouseEvent ev) {
			ProxyQSlider().MouseReleaseEvent(ev);
		}
		protected new void MouseMoveEvent(QMouseEvent ev) {
			ProxyQSlider().MouseMoveEvent(ev);
		}
		~QSlider() {
			ProxyQSlider().Dispose();
		}
		public new void Dispose() {
			ProxyQSlider().Dispose();
		}
	}
}
