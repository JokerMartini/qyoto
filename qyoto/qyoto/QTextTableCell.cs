//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QTextTableCell : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QTextTableCell(Type dummy) {}
		interface IQTextTableCellProxy {
			bool op_equals(QTextTableCell lhs, QTextTableCell other);
		}

		protected void CreateQTextTableCellProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextTableCell), this);
			_interceptor = (QTextTableCell) realProxy.GetTransparentProxy();
		}
		private QTextTableCell ProxyQTextTableCell() {
			return (QTextTableCell) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTextTableCell() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTextTableCellProxy), null);
			_staticInterceptor = (IQTextTableCellProxy) realProxy.GetTransparentProxy();
		}
		private static IQTextTableCellProxy StaticQTextTableCell() {
			return (IQTextTableCellProxy) _staticInterceptor;
		}

		public QTextTableCell() : this((Type) null) {
			CreateQTextTableCellProxy();
			NewQTextTableCell();
		}
		private void NewQTextTableCell() {
			ProxyQTextTableCell().NewQTextTableCell();
		}
		public QTextTableCell(QTextTableCell o) : this((Type) null) {
			CreateQTextTableCellProxy();
			NewQTextTableCell(o);
		}
		private void NewQTextTableCell(QTextTableCell o) {
			ProxyQTextTableCell().NewQTextTableCell(o);
		}
		public QTextCharFormat Format() {
			return ProxyQTextTableCell().Format();
		}
		public int Row() {
			return ProxyQTextTableCell().Row();
		}
		public int Column() {
			return ProxyQTextTableCell().Column();
		}
		public int RowSpan() {
			return ProxyQTextTableCell().RowSpan();
		}
		public int ColumnSpan() {
			return ProxyQTextTableCell().ColumnSpan();
		}
		public bool IsValid() {
			return ProxyQTextTableCell().IsValid();
		}
		// QTextCursor firstCursorPosition(); >>>> NOT CONVERTED
		// QTextCursor lastCursorPosition(); >>>> NOT CONVERTED
		public int FirstPosition() {
			return ProxyQTextTableCell().FirstPosition();
		}
		public int LastPosition() {
			return ProxyQTextTableCell().LastPosition();
		}
		public static bool operator==(QTextTableCell lhs, QTextTableCell other) {
			return StaticQTextTableCell().op_equals(lhs,other);
		}
		public static bool operator!=(QTextTableCell lhs, QTextTableCell other) {
			return !StaticQTextTableCell().op_equals(lhs,other);
		}
		public override bool Equals(object o) {
			if (!(o is QTextTableCell)) { return false; }
			return this == (QTextTableCell) o;
		}
		public override int GetHashCode() {
			return ProxyQTextTableCell().GetHashCode();
		}
		~QTextTableCell() {
			ProxyQTextTableCell().Dispose();
		}
		public void Dispose() {
			ProxyQTextTableCell().Dispose();
		}
	}
}
