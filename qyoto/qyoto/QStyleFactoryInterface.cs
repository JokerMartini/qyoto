//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QStyleFactoryInterface : QFactoryInterface {
 		protected QStyleFactoryInterface(Type dummy) : base((Type) null) {}
		interface IQStyleFactoryInterfaceProxy {
		}

		protected void CreateQStyleFactoryInterfaceProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleFactoryInterface), this);
			_interceptor = (QStyleFactoryInterface) realProxy.GetTransparentProxy();
		}
		private QStyleFactoryInterface ProxyQStyleFactoryInterface() {
			return (QStyleFactoryInterface) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleFactoryInterface() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleFactoryInterfaceProxy), null);
			_staticInterceptor = (IQStyleFactoryInterfaceProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleFactoryInterfaceProxy StaticQStyleFactoryInterface() {
			return (IQStyleFactoryInterfaceProxy) _staticInterceptor;
		}

		public virtual QStyle Create(string key) {
			return ProxyQStyleFactoryInterface().Create(key);
		}
	}
}
