//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public interface IQXmlContentHandler {
			void SetDocumentLocator(QXmlLocator locator);
			bool StartDocument();
			bool EndDocument();
			bool StartPrefixMapping(string prefix, string uri);
			bool EndPrefixMapping(string prefix);
			bool StartElement(string namespaceURI, string localName, string qName, QXmlAttributes atts);
			bool EndElement(string namespaceURI, string localName, string qName);
			bool Characters(string ch);
			bool IgnorableWhitespace(string ch);
			bool ProcessingInstruction(string target, string data);
			bool SkippedEntity(string name);
			string ErrorString();
	}

	public class QXmlContentHandler : MarshalByRefObject, IQXmlContentHandler {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QXmlContentHandler(Type dummy) {}
		interface IQXmlContentHandlerProxy {
		}

		protected void CreateQXmlContentHandlerProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QXmlContentHandler), this);
			_interceptor = (QXmlContentHandler) realProxy.GetTransparentProxy();
		}
		private QXmlContentHandler ProxyQXmlContentHandler() {
			return (QXmlContentHandler) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QXmlContentHandler() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQXmlContentHandlerProxy), null);
			_staticInterceptor = (IQXmlContentHandlerProxy) realProxy.GetTransparentProxy();
		}
		private static IQXmlContentHandlerProxy StaticQXmlContentHandler() {
			return (IQXmlContentHandlerProxy) _staticInterceptor;
		}

		public virtual void SetDocumentLocator(QXmlLocator locator) {
			ProxyQXmlContentHandler().SetDocumentLocator(locator);
		}
		public virtual bool StartDocument() {
			return ProxyQXmlContentHandler().StartDocument();
		}
		public virtual bool EndDocument() {
			return ProxyQXmlContentHandler().EndDocument();
		}
		public virtual bool StartPrefixMapping(string prefix, string uri) {
			return ProxyQXmlContentHandler().StartPrefixMapping(prefix,uri);
		}
		public virtual bool EndPrefixMapping(string prefix) {
			return ProxyQXmlContentHandler().EndPrefixMapping(prefix);
		}
		public virtual bool StartElement(string namespaceURI, string localName, string qName, QXmlAttributes atts) {
			return ProxyQXmlContentHandler().StartElement(namespaceURI,localName,qName,atts);
		}
		public virtual bool EndElement(string namespaceURI, string localName, string qName) {
			return ProxyQXmlContentHandler().EndElement(namespaceURI,localName,qName);
		}
		public virtual bool Characters(string ch) {
			return ProxyQXmlContentHandler().Characters(ch);
		}
		public virtual bool IgnorableWhitespace(string ch) {
			return ProxyQXmlContentHandler().IgnorableWhitespace(ch);
		}
		public virtual bool ProcessingInstruction(string target, string data) {
			return ProxyQXmlContentHandler().ProcessingInstruction(target,data);
		}
		public virtual bool SkippedEntity(string name) {
			return ProxyQXmlContentHandler().SkippedEntity(name);
		}
		public virtual string ErrorString() {
			return ProxyQXmlContentHandler().ErrorString();
		}
	}
}
