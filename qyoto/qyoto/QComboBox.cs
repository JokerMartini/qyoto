//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQComboBoxSignals"></see> for signals emitted by QComboBox
	public class QComboBox : QWidget, IDisposable {
 		protected QComboBox(Type dummy) : base((Type) null) {}
		interface IQComboBoxProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQComboBoxProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QComboBox), this);
			_interceptor = (QComboBox) realProxy.GetTransparentProxy();
		}
		private QComboBox ProxyQComboBox() {
			return (QComboBox) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QComboBox() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQComboBoxProxy), null);
			_staticInterceptor = (IQComboBoxProxy) realProxy.GetTransparentProxy();
		}
		private static IQComboBoxProxy StaticQComboBox() {
			return (IQComboBoxProxy) _staticInterceptor;
		}

		enum E_InsertPolicy {
			NoInsert = 0,
			InsertAtTop = 1,
			InsertAtCurrent = 2,
			InsertAtBottom = 3,
			InsertAfterCurrent = 4,
			InsertBeforeCurrent = 5,
		}
		enum E_SizeAdjustPolicy {
			AdjustToContents = 0,
			AdjustToContentsOnFirstShow = 1,
			AdjustToMinimumContentsLength = 2,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQComboBox().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QComboBox(QWidget parent) : this((Type) null) {
			CreateQComboBoxProxy();
			NewQComboBox(parent);
		}
		private void NewQComboBox(QWidget parent) {
			ProxyQComboBox().NewQComboBox(parent);
		}
		public QComboBox() : this((Type) null) {
			CreateQComboBoxProxy();
			NewQComboBox();
		}
		private void NewQComboBox() {
			ProxyQComboBox().NewQComboBox();
		}
		public int MaxVisibleItems() {
			return ProxyQComboBox().MaxVisibleItems();
		}
		public void SetMaxVisibleItems(int maxItems) {
			ProxyQComboBox().SetMaxVisibleItems(maxItems);
		}
		public int Count() {
			return ProxyQComboBox().Count();
		}
		public void SetMaxCount(int max) {
			ProxyQComboBox().SetMaxCount(max);
		}
		public int MaxCount() {
			return ProxyQComboBox().MaxCount();
		}
		public bool AutoCompletion() {
			return ProxyQComboBox().AutoCompletion();
		}
		public void SetAutoCompletion(bool enable) {
			ProxyQComboBox().SetAutoCompletion(enable);
		}
		public bool DuplicatesEnabled() {
			return ProxyQComboBox().DuplicatesEnabled();
		}
		public void SetDuplicatesEnabled(bool enable) {
			ProxyQComboBox().SetDuplicatesEnabled(enable);
		}
		public void SetFrame(bool arg1) {
			ProxyQComboBox().SetFrame(arg1);
		}
		public bool HasFrame() {
			return ProxyQComboBox().HasFrame();
		}
		public int FindText(string text, int flags) {
			return ProxyQComboBox().FindText(text,flags);
		}
		public int FindText(string text) {
			return ProxyQComboBox().FindText(text);
		}
		public int FindData(QVariant data, int role, int flags) {
			return ProxyQComboBox().FindData(data,role,flags);
		}
		public int FindData(QVariant data, int role) {
			return ProxyQComboBox().FindData(data,role);
		}
		public int FindData(QVariant data) {
			return ProxyQComboBox().FindData(data);
		}
		public int InsertPolicy() {
			return ProxyQComboBox().InsertPolicy();
		}
		public void SetInsertPolicy(int policy) {
			ProxyQComboBox().SetInsertPolicy(policy);
		}
		public int SizeAdjustPolicy() {
			return ProxyQComboBox().SizeAdjustPolicy();
		}
		public void SetSizeAdjustPolicy(int policy) {
			ProxyQComboBox().SetSizeAdjustPolicy(policy);
		}
		public int MinimumContentsLength() {
			return ProxyQComboBox().MinimumContentsLength();
		}
		public void SetMinimumContentsLength(int characters) {
			ProxyQComboBox().SetMinimumContentsLength(characters);
		}
		public QSize IconSize() {
			return ProxyQComboBox().IconSize();
		}
		public void SetIconSize(QSize size) {
			ProxyQComboBox().SetIconSize(size);
		}
		public bool IsEditable() {
			return ProxyQComboBox().IsEditable();
		}
		public void SetEditable(bool editable) {
			ProxyQComboBox().SetEditable(editable);
		}
		public void SetLineEdit(QLineEdit edit) {
			ProxyQComboBox().SetLineEdit(edit);
		}
		public QLineEdit LineEdit() {
			return ProxyQComboBox().LineEdit();
		}
		public void SetValidator(QValidator v) {
			ProxyQComboBox().SetValidator(v);
		}
		public QValidator Validator() {
			return ProxyQComboBox().Validator();
		}
		public QAbstractItemDelegate ItemDelegate() {
			return ProxyQComboBox().ItemDelegate();
		}
		public void SetItemDelegate(QAbstractItemDelegate arg1) {
			ProxyQComboBox().SetItemDelegate(arg1);
		}
		public QAbstractItemModel Model() {
			return ProxyQComboBox().Model();
		}
		public void SetModel(QAbstractItemModel model) {
			ProxyQComboBox().SetModel(model);
		}
		public QModelIndex RootModelIndex() {
			return ProxyQComboBox().RootModelIndex();
		}
		public void SetRootModelIndex(QModelIndex index) {
			ProxyQComboBox().SetRootModelIndex(index);
		}
		public int ModelColumn() {
			return ProxyQComboBox().ModelColumn();
		}
		public void SetModelColumn(int visibleColumn) {
			ProxyQComboBox().SetModelColumn(visibleColumn);
		}
		public int CurrentIndex() {
			return ProxyQComboBox().CurrentIndex();
		}
		public void SetCurrentIndex(int index) {
			ProxyQComboBox().SetCurrentIndex(index);
		}
		public string CurrentText() {
			return ProxyQComboBox().CurrentText();
		}
		public string ItemText(int index) {
			return ProxyQComboBox().ItemText(index);
		}
		public QIcon ItemIcon(int index) {
			return ProxyQComboBox().ItemIcon(index);
		}
		public QVariant ItemData(int index, int role) {
			return ProxyQComboBox().ItemData(index,role);
		}
		public QVariant ItemData(int index) {
			return ProxyQComboBox().ItemData(index);
		}
		public void AddItem(string text, QVariant userData) {
			ProxyQComboBox().AddItem(text,userData);
		}
		public void AddItem(string text) {
			ProxyQComboBox().AddItem(text);
		}
		public void AddItem(QIcon icon, string text, QVariant userData) {
			ProxyQComboBox().AddItem(icon,text,userData);
		}
		public void AddItem(QIcon icon, string text) {
			ProxyQComboBox().AddItem(icon,text);
		}
		public void AddItems(string[] texts) {
			ProxyQComboBox().AddItems(texts);
		}
		public void InsertItem(int index, string text, QVariant userData) {
			ProxyQComboBox().InsertItem(index,text,userData);
		}
		public void InsertItem(int index, string text) {
			ProxyQComboBox().InsertItem(index,text);
		}
		public void InsertItem(int index, QIcon icon, string text, QVariant userData) {
			ProxyQComboBox().InsertItem(index,icon,text,userData);
		}
		public void InsertItem(int index, QIcon icon, string text) {
			ProxyQComboBox().InsertItem(index,icon,text);
		}
		public void InsertItems(int index, string[] texts) {
			ProxyQComboBox().InsertItems(index,texts);
		}
		public void RemoveItem(int index) {
			ProxyQComboBox().RemoveItem(index);
		}
		public void SetItemText(int index, string text) {
			ProxyQComboBox().SetItemText(index,text);
		}
		public void SetItemIcon(int index, QIcon icon) {
			ProxyQComboBox().SetItemIcon(index,icon);
		}
		public void SetItemData(int index, QVariant value, int role) {
			ProxyQComboBox().SetItemData(index,value,role);
		}
		public void SetItemData(int index, QVariant value) {
			ProxyQComboBox().SetItemData(index,value);
		}
		public QAbstractItemView View() {
			return ProxyQComboBox().View();
		}
		public void SetView(QAbstractItemView itemView) {
			ProxyQComboBox().SetView(itemView);
		}
		public new QSize SizeHint() {
			return ProxyQComboBox().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQComboBox().MinimumSizeHint();
		}
		public virtual void ShowPopup() {
			ProxyQComboBox().ShowPopup();
		}
		public virtual void HidePopup() {
			ProxyQComboBox().HidePopup();
		}
		public new bool Event(QEvent arg1) {
			return ProxyQComboBox().Event(arg1);
		}
		public void Clear() {
			ProxyQComboBox().Clear();
		}
		public void ClearEditText() {
			ProxyQComboBox().ClearEditText();
		}
		public void SetEditText(string text) {
			ProxyQComboBox().SetEditText(text);
		}
		public static new string Tr(string s, string c) {
			return StaticQComboBox().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQComboBox().Tr(s);
		}
		protected new void FocusInEvent(QFocusEvent e) {
			ProxyQComboBox().FocusInEvent(e);
		}
		protected new void FocusOutEvent(QFocusEvent e) {
			ProxyQComboBox().FocusOutEvent(e);
		}
		protected new void ChangeEvent(QEvent e) {
			ProxyQComboBox().ChangeEvent(e);
		}
		protected new void ResizeEvent(QResizeEvent e) {
			ProxyQComboBox().ResizeEvent(e);
		}
		protected new void PaintEvent(QPaintEvent e) {
			ProxyQComboBox().PaintEvent(e);
		}
		public new void ShowEvent(QShowEvent e) {
			ProxyQComboBox().ShowEvent(e);
		}
		protected new void HideEvent(QHideEvent e) {
			ProxyQComboBox().HideEvent(e);
		}
		protected new void MousePressEvent(QMouseEvent e) {
			ProxyQComboBox().MousePressEvent(e);
		}
		protected new void MouseReleaseEvent(QMouseEvent e) {
			ProxyQComboBox().MouseReleaseEvent(e);
		}
		protected new void KeyPressEvent(QKeyEvent e) {
			ProxyQComboBox().KeyPressEvent(e);
		}
		protected new void KeyReleaseEvent(QKeyEvent e) {
			ProxyQComboBox().KeyReleaseEvent(e);
		}
		protected new void WheelEvent(QWheelEvent e) {
			ProxyQComboBox().WheelEvent(e);
		}
		protected new void InputMethodEvent(QInputMethodEvent arg1) {
			ProxyQComboBox().InputMethodEvent(arg1);
		}
		protected new QVariant InputMethodQuery(int arg1) {
			return ProxyQComboBox().InputMethodQuery(arg1);
		}
		~QComboBox() {
			ProxyQComboBox().Dispose();
		}
		public new void Dispose() {
			ProxyQComboBox().Dispose();
		}
	}

	public interface IQComboBoxSignals {
		void EditTextChanged(string arg1);
		void Activated(int index);
		void Activated(string arg1);
		void Highlighted(int index);
		void Highlighted(string arg1);
	}
}
