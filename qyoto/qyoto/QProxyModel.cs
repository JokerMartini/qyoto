//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Collections;
	using System.Text;

	public class QProxyModel : QAbstractItemModel, IDisposable {
 		protected QProxyModel(Type dummy) : base((Type) null) {}
		interface IQProxyModelProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQProxyModelProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QProxyModel), this);
			_interceptor = (QProxyModel) realProxy.GetTransparentProxy();
		}
		private QProxyModel ProxyQProxyModel() {
			return (QProxyModel) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QProxyModel() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQProxyModelProxy), null);
			_staticInterceptor = (IQProxyModelProxy) realProxy.GetTransparentProxy();
		}
		private static IQProxyModelProxy StaticQProxyModel() {
			return (IQProxyModelProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQProxyModel().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QProxyModel(QObject parent) : this((Type) null) {
			CreateQProxyModelProxy();
			NewQProxyModel(parent);
		}
		private void NewQProxyModel(QObject parent) {
			ProxyQProxyModel().NewQProxyModel(parent);
		}
		public QProxyModel() : this((Type) null) {
			CreateQProxyModelProxy();
			NewQProxyModel();
		}
		private void NewQProxyModel() {
			ProxyQProxyModel().NewQProxyModel();
		}
		public virtual void SetModel(QAbstractItemModel model) {
			ProxyQProxyModel().SetModel(model);
		}
		public QAbstractItemModel Model() {
			return ProxyQProxyModel().Model();
		}
		public new QModelIndex Index(int row, int column, QModelIndex parent) {
			return ProxyQProxyModel().Index(row,column,parent);
		}
		public new QModelIndex Parent(QModelIndex child) {
			return ProxyQProxyModel().Parent(child);
		}
		public new int RowCount(QModelIndex parent) {
			return ProxyQProxyModel().RowCount(parent);
		}
		public new int ColumnCount(QModelIndex parent) {
			return ProxyQProxyModel().ColumnCount(parent);
		}
		public new bool HasChildren(QModelIndex parent) {
			return ProxyQProxyModel().HasChildren(parent);
		}
		public new QVariant Data(QModelIndex index, int role) {
			return ProxyQProxyModel().Data(index,role);
		}
		public new bool SetData(QModelIndex index, QVariant value, int role) {
			return ProxyQProxyModel().SetData(index,value,role);
		}
		public new QVariant HeaderData(int section, int orientation, int role) {
			return ProxyQProxyModel().HeaderData(section,orientation,role);
		}
		public new bool SetHeaderData(int section, int orientation, QVariant value, int role) {
			return ProxyQProxyModel().SetHeaderData(section,orientation,value,role);
		}
		public new ArrayList MimeTypes() {
			return ProxyQProxyModel().MimeTypes();
		}
		// QMimeData* mimeData(const QModelIndexList& arg1); >>>> NOT CONVERTED
		public new bool DropMimeData(QMimeData data, int action, int row, int column, QModelIndex parent) {
			return ProxyQProxyModel().DropMimeData(data,action,row,column,parent);
		}
		public new int SupportedDropActions() {
			return ProxyQProxyModel().SupportedDropActions();
		}
		public new bool InsertRows(int row, int count, QModelIndex parent) {
			return ProxyQProxyModel().InsertRows(row,count,parent);
		}
		public new bool InsertColumns(int column, int count, QModelIndex parent) {
			return ProxyQProxyModel().InsertColumns(column,count,parent);
		}
		public new void FetchMore(QModelIndex parent) {
			ProxyQProxyModel().FetchMore(parent);
		}
		public new int Flags(QModelIndex index) {
			return ProxyQProxyModel().Flags(index);
		}
		public new void Sort(int column, int order) {
			ProxyQProxyModel().Sort(column,order);
		}
		// QModelIndexList match(const QModelIndex& arg1,int arg2,const QVariant& arg3,int arg4,Qt::MatchFlags arg5); >>>> NOT CONVERTED
		public new QSize Span(QModelIndex index) {
			return ProxyQProxyModel().Span(index);
		}
		public new bool Submit() {
			return ProxyQProxyModel().Submit();
		}
		public new void Revert() {
			ProxyQProxyModel().Revert();
		}
		public static new string Tr(string s, string c) {
			return StaticQProxyModel().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQProxyModel().Tr(s);
		}
		~QProxyModel() {
			ProxyQProxyModel().Dispose();
		}
		public new void Dispose() {
			ProxyQProxyModel().Dispose();
		}
	}
}
