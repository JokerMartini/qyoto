//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QConicalGradient : QGradient, IDisposable {
 		protected QConicalGradient(Type dummy) : base((Type) null) {}
		interface IQConicalGradientProxy {
		}

		protected void CreateQConicalGradientProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QConicalGradient), this);
			_interceptor = (QConicalGradient) realProxy.GetTransparentProxy();
		}
		private QConicalGradient ProxyQConicalGradient() {
			return (QConicalGradient) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QConicalGradient() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQConicalGradientProxy), null);
			_staticInterceptor = (IQConicalGradientProxy) realProxy.GetTransparentProxy();
		}
		private static IQConicalGradientProxy StaticQConicalGradient() {
			return (IQConicalGradientProxy) _staticInterceptor;
		}

		public QConicalGradient(QPointF center, double startAngle) : this((Type) null) {
			CreateQConicalGradientProxy();
			NewQConicalGradient(center,startAngle);
		}
		private void NewQConicalGradient(QPointF center, double startAngle) {
			ProxyQConicalGradient().NewQConicalGradient(center,startAngle);
		}
		public QConicalGradient(double cx, double cy, double startAngle) : this((Type) null) {
			CreateQConicalGradientProxy();
			NewQConicalGradient(cx,cy,startAngle);
		}
		private void NewQConicalGradient(double cx, double cy, double startAngle) {
			ProxyQConicalGradient().NewQConicalGradient(cx,cy,startAngle);
		}
		public QPointF Center() {
			return ProxyQConicalGradient().Center();
		}
		public double Angle() {
			return ProxyQConicalGradient().Angle();
		}
		~QConicalGradient() {
			ProxyQConicalGradient().Dispose();
		}
		public void Dispose() {
			ProxyQConicalGradient().Dispose();
		}
	}
}
