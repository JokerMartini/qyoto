//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QTextCodecFactoryInterface : QFactoryInterface {
 		protected QTextCodecFactoryInterface(Type dummy) : base((Type) null) {}
		interface IQTextCodecFactoryInterfaceProxy {
		}

		protected void CreateQTextCodecFactoryInterfaceProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextCodecFactoryInterface), this);
			_interceptor = (QTextCodecFactoryInterface) realProxy.GetTransparentProxy();
		}
		private QTextCodecFactoryInterface ProxyQTextCodecFactoryInterface() {
			return (QTextCodecFactoryInterface) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTextCodecFactoryInterface() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTextCodecFactoryInterfaceProxy), null);
			_staticInterceptor = (IQTextCodecFactoryInterfaceProxy) realProxy.GetTransparentProxy();
		}
		private static IQTextCodecFactoryInterfaceProxy StaticQTextCodecFactoryInterface() {
			return (IQTextCodecFactoryInterfaceProxy) _staticInterceptor;
		}

		public virtual QTextCodec Create(string key) {
			return ProxyQTextCodecFactoryInterface().Create(key);
		}
	}
}
