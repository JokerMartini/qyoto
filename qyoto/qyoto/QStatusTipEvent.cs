//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QStatusTipEvent : QEvent, IDisposable {
 		protected QStatusTipEvent(Type dummy) : base((Type) null) {}
		interface IQStatusTipEventProxy {
		}

		protected void CreateQStatusTipEventProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStatusTipEvent), this);
			_interceptor = (QStatusTipEvent) realProxy.GetTransparentProxy();
		}
		private QStatusTipEvent ProxyQStatusTipEvent() {
			return (QStatusTipEvent) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStatusTipEvent() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStatusTipEventProxy), null);
			_staticInterceptor = (IQStatusTipEventProxy) realProxy.GetTransparentProxy();
		}
		private static IQStatusTipEventProxy StaticQStatusTipEvent() {
			return (IQStatusTipEventProxy) _staticInterceptor;
		}

		public QStatusTipEvent(string tip) : this((Type) null) {
			CreateQStatusTipEventProxy();
			NewQStatusTipEvent(tip);
		}
		private void NewQStatusTipEvent(string tip) {
			ProxyQStatusTipEvent().NewQStatusTipEvent(tip);
		}
		public string Tip() {
			return ProxyQStatusTipEvent().Tip();
		}
		~QStatusTipEvent() {
			ProxyQStatusTipEvent().Dispose();
		}
		public new void Dispose() {
			ProxyQStatusTipEvent().Dispose();
		}
	}
}
