//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Collections;
	using System.Text;

	public class QInputContextFactoryInterface : QFactoryInterface {
 		protected QInputContextFactoryInterface(Type dummy) : base((Type) null) {}
		interface IQInputContextFactoryInterfaceProxy {
		}

		protected void CreateQInputContextFactoryInterfaceProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QInputContextFactoryInterface), this);
			_interceptor = (QInputContextFactoryInterface) realProxy.GetTransparentProxy();
		}
		private QInputContextFactoryInterface ProxyQInputContextFactoryInterface() {
			return (QInputContextFactoryInterface) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QInputContextFactoryInterface() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQInputContextFactoryInterfaceProxy), null);
			_staticInterceptor = (IQInputContextFactoryInterfaceProxy) realProxy.GetTransparentProxy();
		}
		private static IQInputContextFactoryInterfaceProxy StaticQInputContextFactoryInterface() {
			return (IQInputContextFactoryInterfaceProxy) _staticInterceptor;
		}

		public virtual QInputContext Create(string key) {
			return ProxyQInputContextFactoryInterface().Create(key);
		}
		public virtual ArrayList Languages(string key) {
			return ProxyQInputContextFactoryInterface().Languages(key);
		}
		public virtual string DisplayName(string key) {
			return ProxyQInputContextFactoryInterface().DisplayName(key);
		}
		public virtual string Description(string key) {
			return ProxyQInputContextFactoryInterface().Description(key);
		}
	}
}
