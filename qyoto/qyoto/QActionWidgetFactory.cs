//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QActionWidgetFactory")]
	public class QActionWidgetFactory : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
		protected QActionWidgetFactory(Type dummy) {}
		interface IQActionWidgetFactoryProxy {
		}

		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QActionWidgetFactory), this);
			_interceptor = (QActionWidgetFactory) realProxy.GetTransparentProxy();
		}
		private QActionWidgetFactory ProxyQActionWidgetFactory() {
			return (QActionWidgetFactory) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QActionWidgetFactory() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQActionWidgetFactoryProxy), null);
			_staticInterceptor = (IQActionWidgetFactoryProxy) realProxy.GetTransparentProxy();
		}
		private static IQActionWidgetFactoryProxy StaticQActionWidgetFactory() {
			return (IQActionWidgetFactoryProxy) _staticInterceptor;
		}

		public QActionWidgetFactory() : this((Type) null) {
			CreateProxy();
			NewQActionWidgetFactory();
		}
		[SmokeMethod("QActionWidgetFactory()")]
		private void NewQActionWidgetFactory() {
			ProxyQActionWidgetFactory().NewQActionWidgetFactory();
		}
		[SmokeMethod("createToolBarWidget(QToolBar*)")]
		public virtual QWidget CreateToolBarWidget(QToolBar parent) {
			return ProxyQActionWidgetFactory().CreateToolBarWidget(parent);
		}
		[SmokeMethod("destroyToolBarWidget(QWidget*)")]
		public virtual void DestroyToolBarWidget(QWidget widget) {
			ProxyQActionWidgetFactory().DestroyToolBarWidget(widget);
		}
		~QActionWidgetFactory() {
			DisposeQActionWidgetFactory();
		}
		public void Dispose() {
			DisposeQActionWidgetFactory();
		}
		[SmokeMethod("~QActionWidgetFactory()")]
		private void DisposeQActionWidgetFactory() {
			ProxyQActionWidgetFactory().DisposeQActionWidgetFactory();
		}
	}
}
