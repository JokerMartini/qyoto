//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQDoubleSpinBoxSignals"></see> for signals emitted by QDoubleSpinBox
	public class QDoubleSpinBox : QAbstractSpinBox, IDisposable {
 		protected QDoubleSpinBox(Type dummy) : base((Type) null) {}
		interface IQDoubleSpinBoxProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQDoubleSpinBoxProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDoubleSpinBox), this);
			_interceptor = (QDoubleSpinBox) realProxy.GetTransparentProxy();
		}
		private QDoubleSpinBox ProxyQDoubleSpinBox() {
			return (QDoubleSpinBox) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDoubleSpinBox() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDoubleSpinBoxProxy), null);
			_staticInterceptor = (IQDoubleSpinBoxProxy) realProxy.GetTransparentProxy();
		}
		private static IQDoubleSpinBoxProxy StaticQDoubleSpinBox() {
			return (IQDoubleSpinBoxProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQDoubleSpinBox().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QDoubleSpinBox(QWidget parent) : this((Type) null) {
			CreateQDoubleSpinBoxProxy();
			NewQDoubleSpinBox(parent);
		}
		private void NewQDoubleSpinBox(QWidget parent) {
			ProxyQDoubleSpinBox().NewQDoubleSpinBox(parent);
		}
		public QDoubleSpinBox() : this((Type) null) {
			CreateQDoubleSpinBoxProxy();
			NewQDoubleSpinBox();
		}
		private void NewQDoubleSpinBox() {
			ProxyQDoubleSpinBox().NewQDoubleSpinBox();
		}
		public double Value() {
			return ProxyQDoubleSpinBox().Value();
		}
		public string Prefix() {
			return ProxyQDoubleSpinBox().Prefix();
		}
		public void SetPrefix(string p) {
			ProxyQDoubleSpinBox().SetPrefix(p);
		}
		public string Suffix() {
			return ProxyQDoubleSpinBox().Suffix();
		}
		public void SetSuffix(string s) {
			ProxyQDoubleSpinBox().SetSuffix(s);
		}
		public string CleanText() {
			return ProxyQDoubleSpinBox().CleanText();
		}
		public double SingleStep() {
			return ProxyQDoubleSpinBox().SingleStep();
		}
		public void SetSingleStep(double val) {
			ProxyQDoubleSpinBox().SetSingleStep(val);
		}
		public double Minimum() {
			return ProxyQDoubleSpinBox().Minimum();
		}
		public void SetMinimum(double min) {
			ProxyQDoubleSpinBox().SetMinimum(min);
		}
		public double Maximum() {
			return ProxyQDoubleSpinBox().Maximum();
		}
		public void SetMaximum(double max) {
			ProxyQDoubleSpinBox().SetMaximum(max);
		}
		public void SetRange(double min, double max) {
			ProxyQDoubleSpinBox().SetRange(min,max);
		}
		public int Decimals() {
			return ProxyQDoubleSpinBox().Decimals();
		}
		public void SetDecimals(int prec) {
			ProxyQDoubleSpinBox().SetDecimals(prec);
		}
		public new virtual int Validate(StringBuilder input, out int pos) {
			return ProxyQDoubleSpinBox().Validate(input,out pos);
		}
		public virtual double ValueFromText(string text) {
			return ProxyQDoubleSpinBox().ValueFromText(text);
		}
		public virtual string TextFromValue(double v) {
			return ProxyQDoubleSpinBox().TextFromValue(v);
		}
		public new virtual void Fixup(StringBuilder str) {
			ProxyQDoubleSpinBox().Fixup(str);
		}
		public void SetValue(double val) {
			ProxyQDoubleSpinBox().SetValue(val);
		}
		public static new string Tr(string s, string c) {
			return StaticQDoubleSpinBox().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQDoubleSpinBox().Tr(s);
		}
		~QDoubleSpinBox() {
			ProxyQDoubleSpinBox().Dispose();
		}
		public new void Dispose() {
			ProxyQDoubleSpinBox().Dispose();
		}
	}

	public interface IQDoubleSpinBoxSignals {
		void ValueChanged(double arg1);
		void ValueChanged(string arg1);
	}
}
