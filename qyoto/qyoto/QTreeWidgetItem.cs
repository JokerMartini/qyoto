//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QTreeWidgetItem : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QTreeWidgetItem(Type dummy) {}
		interface IQTreeWidgetItemProxy {
			bool op_lt(QTreeWidgetItem lhs, QTreeWidgetItem other);
			bool op_gt(QTreeWidgetItem lhs, QTreeWidgetItem other);
		}

		protected void CreateQTreeWidgetItemProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTreeWidgetItem), this);
			_interceptor = (QTreeWidgetItem) realProxy.GetTransparentProxy();
		}
		private QTreeWidgetItem ProxyQTreeWidgetItem() {
			return (QTreeWidgetItem) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTreeWidgetItem() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTreeWidgetItemProxy), null);
			_staticInterceptor = (IQTreeWidgetItemProxy) realProxy.GetTransparentProxy();
		}
		private static IQTreeWidgetItemProxy StaticQTreeWidgetItem() {
			return (IQTreeWidgetItemProxy) _staticInterceptor;
		}

		public const int Type = 0;
		public const int UserType = 1000;

		public QTreeWidgetItem(int type) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(type);
		}
		private void NewQTreeWidgetItem(int type) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(type);
		}
		public QTreeWidgetItem() : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem();
		}
		private void NewQTreeWidgetItem() {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem();
		}
		public QTreeWidgetItem(QTreeWidget view, int type) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(view,type);
		}
		private void NewQTreeWidgetItem(QTreeWidget view, int type) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(view,type);
		}
		public QTreeWidgetItem(QTreeWidget view) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(view);
		}
		private void NewQTreeWidgetItem(QTreeWidget view) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(view);
		}
		public QTreeWidgetItem(QTreeWidget view, QTreeWidgetItem after, int type) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(view,after,type);
		}
		private void NewQTreeWidgetItem(QTreeWidget view, QTreeWidgetItem after, int type) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(view,after,type);
		}
		public QTreeWidgetItem(QTreeWidget view, QTreeWidgetItem after) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(view,after);
		}
		private void NewQTreeWidgetItem(QTreeWidget view, QTreeWidgetItem after) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(view,after);
		}
		public QTreeWidgetItem(QTreeWidgetItem parent, int type) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(parent,type);
		}
		private void NewQTreeWidgetItem(QTreeWidgetItem parent, int type) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(parent,type);
		}
		public QTreeWidgetItem(QTreeWidgetItem parent) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(parent);
		}
		private void NewQTreeWidgetItem(QTreeWidgetItem parent) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(parent);
		}
		public QTreeWidgetItem(QTreeWidgetItem parent, QTreeWidgetItem after, int type) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(parent,after,type);
		}
		private void NewQTreeWidgetItem(QTreeWidgetItem parent, QTreeWidgetItem after, int type) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(parent,after,type);
		}
		public QTreeWidgetItem(QTreeWidgetItem parent, QTreeWidgetItem after) : this((Type) null) {
			CreateQTreeWidgetItemProxy();
			NewQTreeWidgetItem(parent,after);
		}
		private void NewQTreeWidgetItem(QTreeWidgetItem parent, QTreeWidgetItem after) {
			ProxyQTreeWidgetItem().NewQTreeWidgetItem(parent,after);
		}
		public virtual QTreeWidgetItem Clone() {
			return ProxyQTreeWidgetItem().Clone();
		}
		public QTreeWidget TreeWidget() {
			return ProxyQTreeWidgetItem().TreeWidget();
		}
		public int Flags() {
			return ProxyQTreeWidgetItem().Flags();
		}
		public void SetFlags(int flags) {
			ProxyQTreeWidgetItem().SetFlags(flags);
		}
		public string Text(int column) {
			return ProxyQTreeWidgetItem().Text(column);
		}
		public void SetText(int column, string text) {
			ProxyQTreeWidgetItem().SetText(column,text);
		}
		public QIcon Icon(int column) {
			return ProxyQTreeWidgetItem().Icon(column);
		}
		public void SetIcon(int column, QIcon icon) {
			ProxyQTreeWidgetItem().SetIcon(column,icon);
		}
		public string StatusTip(int column) {
			return ProxyQTreeWidgetItem().StatusTip(column);
		}
		public void SetStatusTip(int column, string statusTip) {
			ProxyQTreeWidgetItem().SetStatusTip(column,statusTip);
		}
		public string ToolTip(int column) {
			return ProxyQTreeWidgetItem().ToolTip(column);
		}
		public void SetToolTip(int column, string toolTip) {
			ProxyQTreeWidgetItem().SetToolTip(column,toolTip);
		}
		public string WhatsThis(int column) {
			return ProxyQTreeWidgetItem().WhatsThis(column);
		}
		public void SetWhatsThis(int column, string whatsThis) {
			ProxyQTreeWidgetItem().SetWhatsThis(column,whatsThis);
		}
		public QFont Font(int column) {
			return ProxyQTreeWidgetItem().Font(column);
		}
		public void SetFont(int column, QFont font) {
			ProxyQTreeWidgetItem().SetFont(column,font);
		}
		public int TextAlignment(int column) {
			return ProxyQTreeWidgetItem().TextAlignment(column);
		}
		public void SetTextAlignment(int column, int alignment) {
			ProxyQTreeWidgetItem().SetTextAlignment(column,alignment);
		}
		public QColor BackgroundColor(int column) {
			return ProxyQTreeWidgetItem().BackgroundColor(column);
		}
		public void SetBackgroundColor(int column, QColor color) {
			ProxyQTreeWidgetItem().SetBackgroundColor(column,color);
		}
		public QColor TextColor(int column) {
			return ProxyQTreeWidgetItem().TextColor(column);
		}
		public void SetTextColor(int column, QColor color) {
			ProxyQTreeWidgetItem().SetTextColor(column,color);
		}
		public int CheckState(int column) {
			return ProxyQTreeWidgetItem().CheckState(column);
		}
		public void SetCheckState(int column, int state) {
			ProxyQTreeWidgetItem().SetCheckState(column,state);
		}
		public virtual QVariant Data(int column, int role) {
			return ProxyQTreeWidgetItem().Data(column,role);
		}
		public virtual void SetData(int column, int role, QVariant value) {
			ProxyQTreeWidgetItem().SetData(column,role,value);
		}
		public static bool operator<(QTreeWidgetItem lhs, QTreeWidgetItem other) {
			return StaticQTreeWidgetItem().op_lt(lhs,other);
		}
		public static bool operator>(QTreeWidgetItem lhs, QTreeWidgetItem other) {
			return StaticQTreeWidgetItem().op_gt(lhs,other);
		}
		public virtual void Read(QDataStream arg1) {
			ProxyQTreeWidgetItem().Read(arg1);
		}
		public virtual void Write(QDataStream arg1) {
			ProxyQTreeWidgetItem().Write(arg1);
		}
		public QTreeWidgetItem Parent() {
			return ProxyQTreeWidgetItem().Parent();
		}
		public QTreeWidgetItem Child(int index) {
			return ProxyQTreeWidgetItem().Child(index);
		}
		public int ChildCount() {
			return ProxyQTreeWidgetItem().ChildCount();
		}
		public int ColumnCount() {
			return ProxyQTreeWidgetItem().ColumnCount();
		}
		public int IndexOfChild(QTreeWidgetItem child) {
			return ProxyQTreeWidgetItem().IndexOfChild(child);
		}
		public void AddChild(QTreeWidgetItem child) {
			ProxyQTreeWidgetItem().AddChild(child);
		}
		public void InsertChild(int index, QTreeWidgetItem child) {
			ProxyQTreeWidgetItem().InsertChild(index,child);
		}
		public QTreeWidgetItem TakeChild(int index) {
			return ProxyQTreeWidgetItem().TakeChild(index);
		}
		~QTreeWidgetItem() {
			ProxyQTreeWidgetItem().Dispose();
		}
		public void Dispose() {
			ProxyQTreeWidgetItem().Dispose();
		}
	}
}
