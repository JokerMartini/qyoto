//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQTreeViewSignals"></see> for signals emitted by QTreeView
	public class QTreeView : QAbstractItemView, IDisposable {
 		protected QTreeView(Type dummy) : base((Type) null) {}
		interface IQTreeViewProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQTreeViewProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTreeView), this);
			_interceptor = (QTreeView) realProxy.GetTransparentProxy();
		}
		private QTreeView ProxyQTreeView() {
			return (QTreeView) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTreeView() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTreeViewProxy), null);
			_staticInterceptor = (IQTreeViewProxy) realProxy.GetTransparentProxy();
		}
		private static IQTreeViewProxy StaticQTreeView() {
			return (IQTreeViewProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQTreeView().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QTreeView(QWidget parent) : this((Type) null) {
			CreateQTreeViewProxy();
			NewQTreeView(parent);
		}
		private void NewQTreeView(QWidget parent) {
			ProxyQTreeView().NewQTreeView(parent);
		}
		public QTreeView() : this((Type) null) {
			CreateQTreeViewProxy();
			NewQTreeView();
		}
		private void NewQTreeView() {
			ProxyQTreeView().NewQTreeView();
		}
		public new void SetModel(QAbstractItemModel model) {
			ProxyQTreeView().SetModel(model);
		}
		public new void SetRootIndex(QModelIndex index) {
			ProxyQTreeView().SetRootIndex(index);
		}
		public new void SetSelectionModel(QItemSelectionModel selectionModel) {
			ProxyQTreeView().SetSelectionModel(selectionModel);
		}
		public QHeaderView Header() {
			return ProxyQTreeView().Header();
		}
		public void SetHeader(QHeaderView header) {
			ProxyQTreeView().SetHeader(header);
		}
		public int Indentation() {
			return ProxyQTreeView().Indentation();
		}
		public void SetIndentation(int i) {
			ProxyQTreeView().SetIndentation(i);
		}
		public bool RootIsDecorated() {
			return ProxyQTreeView().RootIsDecorated();
		}
		public void SetRootIsDecorated(bool show) {
			ProxyQTreeView().SetRootIsDecorated(show);
		}
		public bool UniformRowHeights() {
			return ProxyQTreeView().UniformRowHeights();
		}
		public void SetUniformRowHeights(bool uniform) {
			ProxyQTreeView().SetUniformRowHeights(uniform);
		}
		public bool ItemsExpandable() {
			return ProxyQTreeView().ItemsExpandable();
		}
		public void SetItemsExpandable(bool enable) {
			ProxyQTreeView().SetItemsExpandable(enable);
		}
		public int ColumnViewportPosition(int column) {
			return ProxyQTreeView().ColumnViewportPosition(column);
		}
		public int ColumnWidth(int column) {
			return ProxyQTreeView().ColumnWidth(column);
		}
		public int ColumnAt(int x) {
			return ProxyQTreeView().ColumnAt(x);
		}
		public bool IsColumnHidden(int column) {
			return ProxyQTreeView().IsColumnHidden(column);
		}
		public void SetColumnHidden(int column, bool hide) {
			ProxyQTreeView().SetColumnHidden(column,hide);
		}
		public bool IsRowHidden(int row, QModelIndex parent) {
			return ProxyQTreeView().IsRowHidden(row,parent);
		}
		public void SetRowHidden(int row, QModelIndex parent, bool hide) {
			ProxyQTreeView().SetRowHidden(row,parent,hide);
		}
		public bool IsExpanded(QModelIndex index) {
			return ProxyQTreeView().IsExpanded(index);
		}
		public void SetExpanded(QModelIndex index, bool expand) {
			ProxyQTreeView().SetExpanded(index,expand);
		}
		public new QRect VisualRect(QModelIndex index) {
			return ProxyQTreeView().VisualRect(index);
		}
		public new void ScrollTo(QModelIndex index, int hint) {
			ProxyQTreeView().ScrollTo(index,hint);
		}
		public new void ScrollTo(QModelIndex index) {
			ProxyQTreeView().ScrollTo(index);
		}
		public new QModelIndex IndexAt(QPoint p) {
			return ProxyQTreeView().IndexAt(p);
		}
		public QModelIndex IndexAbove(QModelIndex index) {
			return ProxyQTreeView().IndexAbove(index);
		}
		public QModelIndex IndexBelow(QModelIndex index) {
			return ProxyQTreeView().IndexBelow(index);
		}
		public new void DoItemsLayout() {
			ProxyQTreeView().DoItemsLayout();
		}
		public new void Reset() {
			ProxyQTreeView().Reset();
		}
		public new void DataChanged(QModelIndex topLeft, QModelIndex bottomRight) {
			ProxyQTreeView().DataChanged(topLeft,bottomRight);
		}
		public void HideColumn(int column) {
			ProxyQTreeView().HideColumn(column);
		}
		public void ShowColumn(int column) {
			ProxyQTreeView().ShowColumn(column);
		}
		public void Expand(QModelIndex index) {
			ProxyQTreeView().Expand(index);
		}
		public void Collapse(QModelIndex index) {
			ProxyQTreeView().Collapse(index);
		}
		public void ResizeColumnToContents(int column) {
			ProxyQTreeView().ResizeColumnToContents(column);
		}
		public void SortByColumn(int column) {
			ProxyQTreeView().SortByColumn(column);
		}
		public new void SelectAll() {
			ProxyQTreeView().SelectAll();
		}
		public static new string Tr(string s, string c) {
			return StaticQTreeView().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQTreeView().Tr(s);
		}
		protected new void ScrollContentsBy(int dx, int dy) {
			ProxyQTreeView().ScrollContentsBy(dx,dy);
		}
		protected new void RowsInserted(QModelIndex parent, int start, int end) {
			ProxyQTreeView().RowsInserted(parent,start,end);
		}
		protected new void RowsAboutToBeRemoved(QModelIndex parent, int start, int end) {
			ProxyQTreeView().RowsAboutToBeRemoved(parent,start,end);
		}
		protected new QModelIndex MoveCursor(int cursorAction, int modifiers) {
			return ProxyQTreeView().MoveCursor(cursorAction,modifiers);
		}
		protected new int HorizontalOffset() {
			return ProxyQTreeView().HorizontalOffset();
		}
		protected new int VerticalOffset() {
			return ProxyQTreeView().VerticalOffset();
		}
		protected new void SetSelection(QRect rect, int command) {
			ProxyQTreeView().SetSelection(rect,command);
		}
		protected new QRegion VisualRegionForSelection(QItemSelection selection) {
			return ProxyQTreeView().VisualRegionForSelection(selection);
		}
		// QModelIndexList selectedIndexes(); >>>> NOT CONVERTED
		protected new void PaintEvent(QPaintEvent e) {
			ProxyQTreeView().PaintEvent(e);
		}
		protected virtual void DrawRow(QPainter painter, QStyleOptionViewItem options, QModelIndex index) {
			ProxyQTreeView().DrawRow(painter,options,index);
		}
		protected virtual void DrawBranches(QPainter painter, QRect rect, QModelIndex index) {
			ProxyQTreeView().DrawBranches(painter,rect,index);
		}
		protected new void MousePressEvent(QMouseEvent e) {
			ProxyQTreeView().MousePressEvent(e);
		}
		protected new void MouseDoubleClickEvent(QMouseEvent e) {
			ProxyQTreeView().MouseDoubleClickEvent(e);
		}
		protected new void UpdateGeometries() {
			ProxyQTreeView().UpdateGeometries();
		}
		protected new int SizeHintForColumn(int column) {
			return ProxyQTreeView().SizeHintForColumn(column);
		}
		protected int IndexRowSizeHint(QModelIndex index) {
			return ProxyQTreeView().IndexRowSizeHint(index);
		}
		protected new bool IsIndexHidden(QModelIndex index) {
			return ProxyQTreeView().IsIndexHidden(index);
		}
		protected void ColumnResized(int column, int oldSize, int newSize) {
			ProxyQTreeView().ColumnResized(column,oldSize,newSize);
		}
		protected void ColumnCountChanged(int oldCount, int newCount) {
			ProxyQTreeView().ColumnCountChanged(oldCount,newCount);
		}
		protected void ColumnMoved() {
			ProxyQTreeView().ColumnMoved();
		}
		protected void Reexpand() {
			ProxyQTreeView().Reexpand();
		}
		~QTreeView() {
			ProxyQTreeView().Dispose();
		}
		public new void Dispose() {
			ProxyQTreeView().Dispose();
		}
	}

	public interface IQTreeViewSignals {
		void Expanded(QModelIndex index);
		void Collapsed(QModelIndex index);
	}
}
