//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QTextImageFormat : QTextCharFormat, IDisposable {
 		protected QTextImageFormat(Type dummy) : base((Type) null) {}
		interface IQTextImageFormatProxy {
		}

		protected void CreateQTextImageFormatProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextImageFormat), this);
			_interceptor = (QTextImageFormat) realProxy.GetTransparentProxy();
		}
		private QTextImageFormat ProxyQTextImageFormat() {
			return (QTextImageFormat) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTextImageFormat() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTextImageFormatProxy), null);
			_staticInterceptor = (IQTextImageFormatProxy) realProxy.GetTransparentProxy();
		}
		private static IQTextImageFormatProxy StaticQTextImageFormat() {
			return (IQTextImageFormatProxy) _staticInterceptor;
		}

		public QTextImageFormat() : this((Type) null) {
			CreateQTextImageFormatProxy();
			NewQTextImageFormat();
		}
		private void NewQTextImageFormat() {
			ProxyQTextImageFormat().NewQTextImageFormat();
		}
		public new bool IsValid() {
			return ProxyQTextImageFormat().IsValid();
		}
		public void SetName(string name) {
			ProxyQTextImageFormat().SetName(name);
		}
		public string Name() {
			return ProxyQTextImageFormat().Name();
		}
		public void SetWidth(double width) {
			ProxyQTextImageFormat().SetWidth(width);
		}
		public double Width() {
			return ProxyQTextImageFormat().Width();
		}
		public void SetHeight(double height) {
			ProxyQTextImageFormat().SetHeight(height);
		}
		public double Height() {
			return ProxyQTextImageFormat().Height();
		}
		~QTextImageFormat() {
			ProxyQTextImageFormat().Dispose();
		}
		public void Dispose() {
			ProxyQTextImageFormat().Dispose();
		}
	}
}
