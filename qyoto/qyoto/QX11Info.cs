//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QX11Info : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QX11Info(Type dummy) {}
		interface IQX11InfoProxy {
			string AppClass();
			int AppScreen();
			int AppDepth(int screen);
			int AppDepth();
			int AppCells(int screen);
			int AppCells();
			uint AppColormap(int screen);
			uint AppColormap();
			uint AppRootWindow(int screen);
			uint AppRootWindow();
			bool AppDefaultColormap(int screen);
			bool AppDefaultColormap();
			bool AppDefaultVisual(int screen);
			bool AppDefaultVisual();
			int AppDpiX(int screen);
			int AppDpiX();
			int AppDpiY(int screen);
			int AppDpiY();
			void SetAppDpiX(int screen, int dpi);
			void SetAppDpiY(int screen, int dpi);
			ulong AppTime();
			ulong AppUserTime();
			void SetAppTime(ulong time);
			void SetAppUserTime(ulong time);
		}

		protected void CreateQX11InfoProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QX11Info), this);
			_interceptor = (QX11Info) realProxy.GetTransparentProxy();
		}
		private QX11Info ProxyQX11Info() {
			return (QX11Info) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QX11Info() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQX11InfoProxy), null);
			_staticInterceptor = (IQX11InfoProxy) realProxy.GetTransparentProxy();
		}
		private static IQX11InfoProxy StaticQX11Info() {
			return (IQX11InfoProxy) _staticInterceptor;
		}

		public QX11Info() : this((Type) null) {
			CreateQX11InfoProxy();
			NewQX11Info();
		}
		private void NewQX11Info() {
			ProxyQX11Info().NewQX11Info();
		}
		public QX11Info(QX11Info other) : this((Type) null) {
			CreateQX11InfoProxy();
			NewQX11Info(other);
		}
		private void NewQX11Info(QX11Info other) {
			ProxyQX11Info().NewQX11Info(other);
		}
		public int Screen() {
			return ProxyQX11Info().Screen();
		}
		public int Depth() {
			return ProxyQX11Info().Depth();
		}
		public int Cells() {
			return ProxyQX11Info().Cells();
		}
		public uint Colormap() {
			return ProxyQX11Info().Colormap();
		}
		public bool DefaultColormap() {
			return ProxyQX11Info().DefaultColormap();
		}
		// void* visual(); >>>> NOT CONVERTED
		public bool DefaultVisual() {
			return ProxyQX11Info().DefaultVisual();
		}
		// Display* display(); >>>> NOT CONVERTED
		public static string AppClass() {
			return StaticQX11Info().AppClass();
		}
		public static int AppScreen() {
			return StaticQX11Info().AppScreen();
		}
		public static int AppDepth(int screen) {
			return StaticQX11Info().AppDepth(screen);
		}
		public static int AppDepth() {
			return StaticQX11Info().AppDepth();
		}
		public static int AppCells(int screen) {
			return StaticQX11Info().AppCells(screen);
		}
		public static int AppCells() {
			return StaticQX11Info().AppCells();
		}
		public static uint AppColormap(int screen) {
			return StaticQX11Info().AppColormap(screen);
		}
		public static uint AppColormap() {
			return StaticQX11Info().AppColormap();
		}
		// void* appVisual(int arg1); >>>> NOT CONVERTED
		// void* appVisual(); >>>> NOT CONVERTED
		public static uint AppRootWindow(int screen) {
			return StaticQX11Info().AppRootWindow(screen);
		}
		public static uint AppRootWindow() {
			return StaticQX11Info().AppRootWindow();
		}
		public static bool AppDefaultColormap(int screen) {
			return StaticQX11Info().AppDefaultColormap(screen);
		}
		public static bool AppDefaultColormap() {
			return StaticQX11Info().AppDefaultColormap();
		}
		public static bool AppDefaultVisual(int screen) {
			return StaticQX11Info().AppDefaultVisual(screen);
		}
		public static bool AppDefaultVisual() {
			return StaticQX11Info().AppDefaultVisual();
		}
		public static int AppDpiX(int screen) {
			return StaticQX11Info().AppDpiX(screen);
		}
		public static int AppDpiX() {
			return StaticQX11Info().AppDpiX();
		}
		public static int AppDpiY(int screen) {
			return StaticQX11Info().AppDpiY(screen);
		}
		public static int AppDpiY() {
			return StaticQX11Info().AppDpiY();
		}
		public static void SetAppDpiX(int screen, int dpi) {
			StaticQX11Info().SetAppDpiX(screen,dpi);
		}
		public static void SetAppDpiY(int screen, int dpi) {
			StaticQX11Info().SetAppDpiY(screen,dpi);
		}
		public static ulong AppTime() {
			return StaticQX11Info().AppTime();
		}
		public static ulong AppUserTime() {
			return StaticQX11Info().AppUserTime();
		}
		public static void SetAppTime(ulong time) {
			StaticQX11Info().SetAppTime(time);
		}
		public static void SetAppUserTime(ulong time) {
			StaticQX11Info().SetAppUserTime(time);
		}
		protected void CopyX11Data(IQPaintDevice arg1) {
			ProxyQX11Info().CopyX11Data(arg1);
		}
		protected void CloneX11Data(IQPaintDevice arg1) {
			ProxyQX11Info().CloneX11Data(arg1);
		}
		// void setX11Data(const QX11InfoData* arg1); >>>> NOT CONVERTED
		// QX11InfoData* getX11Data(bool arg1); >>>> NOT CONVERTED
		// QX11InfoData* getX11Data(); >>>> NOT CONVERTED
		~QX11Info() {
			ProxyQX11Info().Dispose();
		}
		public void Dispose() {
			ProxyQX11Info().Dispose();
		}
	}
}
