//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QCommonStyle : QStyle, IDisposable {
 		protected QCommonStyle(Type dummy) : base((Type) null) {}
		interface IQCommonStyleProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQCommonStyleProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QCommonStyle), this);
			_interceptor = (QCommonStyle) realProxy.GetTransparentProxy();
		}
		private QCommonStyle ProxyQCommonStyle() {
			return (QCommonStyle) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QCommonStyle() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQCommonStyleProxy), null);
			_staticInterceptor = (IQCommonStyleProxy) realProxy.GetTransparentProxy();
		}
		private static IQCommonStyleProxy StaticQCommonStyle() {
			return (IQCommonStyleProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQCommonStyle().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QCommonStyle() : this((Type) null) {
			CreateQCommonStyleProxy();
			NewQCommonStyle();
		}
		private void NewQCommonStyle() {
			ProxyQCommonStyle().NewQCommonStyle();
		}
		public new void DrawPrimitive(int pe, out int opt, QPainter p, QWidget w) {
			ProxyQCommonStyle().DrawPrimitive(pe,out opt,p,w);
		}
		public new void DrawPrimitive(int pe, out int opt, QPainter p) {
			ProxyQCommonStyle().DrawPrimitive(pe,out opt,p);
		}
		public new void DrawControl(int element, out int opt, QPainter p, QWidget w) {
			ProxyQCommonStyle().DrawControl(element,out opt,p,w);
		}
		public new void DrawControl(int element, out int opt, QPainter p) {
			ProxyQCommonStyle().DrawControl(element,out opt,p);
		}
		public new QRect SubElementRect(int r, out int opt, QWidget widget) {
			return ProxyQCommonStyle().SubElementRect(r,out opt,widget);
		}
		public new QRect SubElementRect(int r, out int opt) {
			return ProxyQCommonStyle().SubElementRect(r,out opt);
		}
		public new void DrawComplexControl(int cc, QStyleOptionComplex opt, QPainter p, QWidget w) {
			ProxyQCommonStyle().DrawComplexControl(cc,opt,p,w);
		}
		public new void DrawComplexControl(int cc, QStyleOptionComplex opt, QPainter p) {
			ProxyQCommonStyle().DrawComplexControl(cc,opt,p);
		}
		public new int HitTestComplexControl(int cc, QStyleOptionComplex opt, QPoint pt, QWidget w) {
			return ProxyQCommonStyle().HitTestComplexControl(cc,opt,pt,w);
		}
		public new int HitTestComplexControl(int cc, QStyleOptionComplex opt, QPoint pt) {
			return ProxyQCommonStyle().HitTestComplexControl(cc,opt,pt);
		}
		public new QRect SubControlRect(int cc, QStyleOptionComplex opt, int sc, QWidget w) {
			return ProxyQCommonStyle().SubControlRect(cc,opt,sc,w);
		}
		public new QRect SubControlRect(int cc, QStyleOptionComplex opt, int sc) {
			return ProxyQCommonStyle().SubControlRect(cc,opt,sc);
		}
		public new QSize SizeFromContents(int ct, out int opt, QSize contentsSize, QWidget widget) {
			return ProxyQCommonStyle().SizeFromContents(ct,out opt,contentsSize,widget);
		}
		public new QSize SizeFromContents(int ct, out int opt, QSize contentsSize) {
			return ProxyQCommonStyle().SizeFromContents(ct,out opt,contentsSize);
		}
		public new int PixelMetric(int m, out int opt, QWidget widget) {
			return ProxyQCommonStyle().PixelMetric(m,out opt,widget);
		}
		public new int PixelMetric(int m, out int opt) {
			return ProxyQCommonStyle().PixelMetric(m,out opt);
		}
		public new int PixelMetric(int m) {
			return ProxyQCommonStyle().PixelMetric(m);
		}
		public new int StyleHint(int sh, out int opt, QWidget w, QStyleHintReturn shret) {
			return ProxyQCommonStyle().StyleHint(sh,out opt,w,shret);
		}
		public new int StyleHint(int sh, out int opt, QWidget w) {
			return ProxyQCommonStyle().StyleHint(sh,out opt,w);
		}
		public new int StyleHint(int sh, out int opt) {
			return ProxyQCommonStyle().StyleHint(sh,out opt);
		}
		public new int StyleHint(int sh) {
			return ProxyQCommonStyle().StyleHint(sh);
		}
		public new QPixmap StandardPixmap(int sp, out int opt, QWidget widget) {
			return ProxyQCommonStyle().StandardPixmap(sp,out opt,widget);
		}
		public new QPixmap StandardPixmap(int sp, out int opt) {
			return ProxyQCommonStyle().StandardPixmap(sp,out opt);
		}
		public new QPixmap StandardPixmap(int sp) {
			return ProxyQCommonStyle().StandardPixmap(sp);
		}
		public new QPixmap GeneratedIconPixmap(int iconMode, QPixmap pixmap, out int opt) {
			return ProxyQCommonStyle().GeneratedIconPixmap(iconMode,pixmap,out opt);
		}
		public static new string Tr(string s, string c) {
			return StaticQCommonStyle().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQCommonStyle().Tr(s);
		}
		~QCommonStyle() {
			ProxyQCommonStyle().Dispose();
		}
		public new void Dispose() {
			ProxyQCommonStyle().Dispose();
		}
	}
}
