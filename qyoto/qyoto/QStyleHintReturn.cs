//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QStyleHintReturn : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QStyleHintReturn(Type dummy) {}
		interface IQStyleHintReturnProxy {
		}

		protected void CreateQStyleHintReturnProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleHintReturn), this);
			_interceptor = (QStyleHintReturn) realProxy.GetTransparentProxy();
		}
		private QStyleHintReturn ProxyQStyleHintReturn() {
			return (QStyleHintReturn) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleHintReturn() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleHintReturnProxy), null);
			_staticInterceptor = (IQStyleHintReturnProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleHintReturnProxy StaticQStyleHintReturn() {
			return (IQStyleHintReturnProxy) _staticInterceptor;
		}

		public const int Type = (int) HintReturnType.SH_Default;

		public const int Version = 1;

		enum HintReturnType {
			SH_Default = 0xf000,
			SH_Mask = 0,
		}
		public QStyleHintReturn(int version, int type) : this((Type) null) {
			CreateQStyleHintReturnProxy();
			NewQStyleHintReturn(version,type);
		}
		private void NewQStyleHintReturn(int version, int type) {
			ProxyQStyleHintReturn().NewQStyleHintReturn(version,type);
		}
		public QStyleHintReturn(int version) : this((Type) null) {
			CreateQStyleHintReturnProxy();
			NewQStyleHintReturn(version);
		}
		private void NewQStyleHintReturn(int version) {
			ProxyQStyleHintReturn().NewQStyleHintReturn(version);
		}
		public QStyleHintReturn() : this((Type) null) {
			CreateQStyleHintReturnProxy();
			NewQStyleHintReturn();
		}
		private void NewQStyleHintReturn() {
			ProxyQStyleHintReturn().NewQStyleHintReturn();
		}
		~QStyleHintReturn() {
			ProxyQStyleHintReturn().Dispose();
		}
		public void Dispose() {
			ProxyQStyleHintReturn().Dispose();
		}
	}
}
