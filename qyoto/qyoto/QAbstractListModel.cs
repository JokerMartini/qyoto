//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QAbstractListModel : QAbstractItemModel, IDisposable {
 		protected QAbstractListModel(Type dummy) : base((Type) null) {}
		interface IQAbstractListModelProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQAbstractListModelProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QAbstractListModel), this);
			_interceptor = (QAbstractListModel) realProxy.GetTransparentProxy();
		}
		private QAbstractListModel ProxyQAbstractListModel() {
			return (QAbstractListModel) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QAbstractListModel() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQAbstractListModelProxy), null);
			_staticInterceptor = (IQAbstractListModelProxy) realProxy.GetTransparentProxy();
		}
		private static IQAbstractListModelProxy StaticQAbstractListModel() {
			return (IQAbstractListModelProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQAbstractListModel().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QAbstractListModel(QObject parent) : this((Type) null) {
			CreateQAbstractListModelProxy();
			NewQAbstractListModel(parent);
		}
		private void NewQAbstractListModel(QObject parent) {
			ProxyQAbstractListModel().NewQAbstractListModel(parent);
		}
		public QAbstractListModel() : this((Type) null) {
			CreateQAbstractListModelProxy();
			NewQAbstractListModel();
		}
		private void NewQAbstractListModel() {
			ProxyQAbstractListModel().NewQAbstractListModel();
		}
		public new QModelIndex Index(int row, int column, QModelIndex parent) {
			return ProxyQAbstractListModel().Index(row,column,parent);
		}
		public new QModelIndex Index(int row, int column) {
			return ProxyQAbstractListModel().Index(row,column);
		}
		public new QModelIndex Index(int row) {
			return ProxyQAbstractListModel().Index(row);
		}
		public static new string Tr(string s, string c) {
			return StaticQAbstractListModel().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQAbstractListModel().Tr(s);
		}
		~QAbstractListModel() {
			ProxyQAbstractListModel().Dispose();
		}
		public new void Dispose() {
			ProxyQAbstractListModel().Dispose();
		}
	}
}
