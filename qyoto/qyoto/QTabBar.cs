//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQTabBarSignals"></see> for signals emitted by QTabBar
	public class QTabBar : QWidget, IDisposable {
 		protected QTabBar(Type dummy) : base((Type) null) {}
		interface IQTabBarProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQTabBarProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTabBar), this);
			_interceptor = (QTabBar) realProxy.GetTransparentProxy();
		}
		private QTabBar ProxyQTabBar() {
			return (QTabBar) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTabBar() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTabBarProxy), null);
			_staticInterceptor = (IQTabBarProxy) realProxy.GetTransparentProxy();
		}
		private static IQTabBarProxy StaticQTabBar() {
			return (IQTabBarProxy) _staticInterceptor;
		}

		enum E_Shape {
			RoundedNorth = 0,
			RoundedSouth = 1,
			RoundedWest = 2,
			RoundedEast = 3,
			TriangularNorth = 4,
			TriangularSouth = 5,
			TriangularWest = 6,
			TriangularEast = 7,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQTabBar().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QTabBar(QWidget parent) : this((Type) null) {
			CreateQTabBarProxy();
			NewQTabBar(parent);
		}
		private void NewQTabBar(QWidget parent) {
			ProxyQTabBar().NewQTabBar(parent);
		}
		public QTabBar() : this((Type) null) {
			CreateQTabBarProxy();
			NewQTabBar();
		}
		private void NewQTabBar() {
			ProxyQTabBar().NewQTabBar();
		}
		public int Shape() {
			return ProxyQTabBar().Shape();
		}
		public void SetShape(int shape) {
			ProxyQTabBar().SetShape(shape);
		}
		public int AddTab(string text) {
			return ProxyQTabBar().AddTab(text);
		}
		public int AddTab(QIcon icon, string text) {
			return ProxyQTabBar().AddTab(icon,text);
		}
		public int InsertTab(int index, string text) {
			return ProxyQTabBar().InsertTab(index,text);
		}
		public int InsertTab(int index, QIcon icon, string text) {
			return ProxyQTabBar().InsertTab(index,icon,text);
		}
		public void RemoveTab(int index) {
			ProxyQTabBar().RemoveTab(index);
		}
		public bool IsTabEnabled(int index) {
			return ProxyQTabBar().IsTabEnabled(index);
		}
		public void SetTabEnabled(int index, bool arg2) {
			ProxyQTabBar().SetTabEnabled(index,arg2);
		}
		public string TabText(int index) {
			return ProxyQTabBar().TabText(index);
		}
		public void SetTabText(int index, string text) {
			ProxyQTabBar().SetTabText(index,text);
		}
		public QIcon TabIcon(int index) {
			return ProxyQTabBar().TabIcon(index);
		}
		public void SetTabIcon(int index, QIcon icon) {
			ProxyQTabBar().SetTabIcon(index,icon);
		}
		public void SetTabToolTip(int index, string tip) {
			ProxyQTabBar().SetTabToolTip(index,tip);
		}
		public string TabToolTip(int index) {
			return ProxyQTabBar().TabToolTip(index);
		}
		public void SetTabData(int index, QVariant data) {
			ProxyQTabBar().SetTabData(index,data);
		}
		public QVariant TabData(int index) {
			return ProxyQTabBar().TabData(index);
		}
		public QRect TabRect(int index) {
			return ProxyQTabBar().TabRect(index);
		}
		public int CurrentIndex() {
			return ProxyQTabBar().CurrentIndex();
		}
		public int Count() {
			return ProxyQTabBar().Count();
		}
		public new QSize SizeHint() {
			return ProxyQTabBar().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQTabBar().MinimumSizeHint();
		}
		public void SetDrawBase(bool drawTheBase) {
			ProxyQTabBar().SetDrawBase(drawTheBase);
		}
		public bool DrawBase() {
			return ProxyQTabBar().DrawBase();
		}
		public void SetCurrentIndex(int index) {
			ProxyQTabBar().SetCurrentIndex(index);
		}
		public static new string Tr(string s, string c) {
			return StaticQTabBar().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQTabBar().Tr(s);
		}
		protected virtual QSize TabSizeHint(int index) {
			return ProxyQTabBar().TabSizeHint(index);
		}
		protected virtual void TabInserted(int index) {
			ProxyQTabBar().TabInserted(index);
		}
		protected virtual void TabRemoved(int index) {
			ProxyQTabBar().TabRemoved(index);
		}
		protected virtual void TabLayoutChange() {
			ProxyQTabBar().TabLayoutChange();
		}
		public new bool Event(QEvent arg1) {
			return ProxyQTabBar().Event(arg1);
		}
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQTabBar().ResizeEvent(arg1);
		}
		public new void ShowEvent(QShowEvent arg1) {
			ProxyQTabBar().ShowEvent(arg1);
		}
		protected new void PaintEvent(QPaintEvent arg1) {
			ProxyQTabBar().PaintEvent(arg1);
		}
		protected new void MousePressEvent(QMouseEvent arg1) {
			ProxyQTabBar().MousePressEvent(arg1);
		}
		protected new void MouseMoveEvent(QMouseEvent arg1) {
			ProxyQTabBar().MouseMoveEvent(arg1);
		}
		protected new void MouseReleaseEvent(QMouseEvent arg1) {
			ProxyQTabBar().MouseReleaseEvent(arg1);
		}
		protected new void KeyPressEvent(QKeyEvent arg1) {
			ProxyQTabBar().KeyPressEvent(arg1);
		}
		protected new void ChangeEvent(QEvent arg1) {
			ProxyQTabBar().ChangeEvent(arg1);
		}
		~QTabBar() {
			ProxyQTabBar().Dispose();
		}
		public new void Dispose() {
			ProxyQTabBar().Dispose();
		}
	}

	public interface IQTabBarSignals {
		void CurrentChanged(int index);
	}
}
