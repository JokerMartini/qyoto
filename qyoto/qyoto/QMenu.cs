//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQMenuSignals"></see> for signals emitted by QMenu
	public class QMenu : QWidget, IDisposable {
 		protected QMenu(Type dummy) : base((Type) null) {}
		interface IQMenuProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQMenuProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QMenu), this);
			_interceptor = (QMenu) realProxy.GetTransparentProxy();
		}
		private QMenu ProxyQMenu() {
			return (QMenu) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QMenu() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQMenuProxy), null);
			_staticInterceptor = (IQMenuProxy) realProxy.GetTransparentProxy();
		}
		private static IQMenuProxy StaticQMenu() {
			return (IQMenuProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQMenu().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QMenu(QWidget parent) : this((Type) null) {
			CreateQMenuProxy();
			NewQMenu(parent);
		}
		private void NewQMenu(QWidget parent) {
			ProxyQMenu().NewQMenu(parent);
		}
		public QMenu() : this((Type) null) {
			CreateQMenuProxy();
			NewQMenu();
		}
		private void NewQMenu() {
			ProxyQMenu().NewQMenu();
		}
		public QMenu(string title, QWidget parent) : this((Type) null) {
			CreateQMenuProxy();
			NewQMenu(title,parent);
		}
		private void NewQMenu(string title, QWidget parent) {
			ProxyQMenu().NewQMenu(title,parent);
		}
		public QMenu(string title) : this((Type) null) {
			CreateQMenuProxy();
			NewQMenu(title);
		}
		private void NewQMenu(string title) {
			ProxyQMenu().NewQMenu(title);
		}
		public new void AddAction(QAction action) {
			ProxyQMenu().AddAction(action);
		}
		public new QAction AddAction(string text) {
			return ProxyQMenu().AddAction(text);
		}
		public new QAction AddAction(QIcon icon, string text) {
			return ProxyQMenu().AddAction(icon,text);
		}
		public new QAction AddAction(string text, QObject receiver, string member, QKeySequence shortcut) {
			return ProxyQMenu().AddAction(text,receiver,member,shortcut);
		}
		public new QAction AddAction(string text, QObject receiver, string member) {
			return ProxyQMenu().AddAction(text,receiver,member);
		}
		public new QAction AddAction(QIcon icon, string text, QObject receiver, string member, QKeySequence shortcut) {
			return ProxyQMenu().AddAction(icon,text,receiver,member,shortcut);
		}
		public new QAction AddAction(QIcon icon, string text, QObject receiver, string member) {
			return ProxyQMenu().AddAction(icon,text,receiver,member);
		}
		public QAction AddMenu(QMenu menu) {
			return ProxyQMenu().AddMenu(menu);
		}
		public QMenu AddMenu(string title) {
			return ProxyQMenu().AddMenu(title);
		}
		public QMenu AddMenu(QIcon icon, string title) {
			return ProxyQMenu().AddMenu(icon,title);
		}
		public QAction AddSeparator() {
			return ProxyQMenu().AddSeparator();
		}
		public QAction InsertMenu(QAction before, QMenu menu) {
			return ProxyQMenu().InsertMenu(before,menu);
		}
		public QAction InsertSeparator(QAction before) {
			return ProxyQMenu().InsertSeparator(before);
		}
		public void Clear() {
			ProxyQMenu().Clear();
		}
		public void SetTearOffEnabled(bool arg1) {
			ProxyQMenu().SetTearOffEnabled(arg1);
		}
		public bool IsTearOffEnabled() {
			return ProxyQMenu().IsTearOffEnabled();
		}
		public bool IsTearOffMenuVisible() {
			return ProxyQMenu().IsTearOffMenuVisible();
		}
		public void HideTearOffMenu() {
			ProxyQMenu().HideTearOffMenu();
		}
		public void SetDefaultAction(QAction arg1) {
			ProxyQMenu().SetDefaultAction(arg1);
		}
		public QAction DefaultAction() {
			return ProxyQMenu().DefaultAction();
		}
		public void SetActiveAction(QAction act) {
			ProxyQMenu().SetActiveAction(act);
		}
		public QAction ActiveAction() {
			return ProxyQMenu().ActiveAction();
		}
		public void Popup(QPoint pos, QAction at) {
			ProxyQMenu().Popup(pos,at);
		}
		public void Popup(QPoint pos) {
			ProxyQMenu().Popup(pos);
		}
		public QAction Exec() {
			return ProxyQMenu().Exec();
		}
		public QAction Exec(QPoint pos, QAction at) {
			return ProxyQMenu().Exec(pos,at);
		}
		public QAction Exec(QPoint pos) {
			return ProxyQMenu().Exec(pos);
		}
		public new QSize SizeHint() {
			return ProxyQMenu().SizeHint();
		}
		public QRect ActionGeometry(QAction arg1) {
			return ProxyQMenu().ActionGeometry(arg1);
		}
		public QAction ActionAt(QPoint arg1) {
			return ProxyQMenu().ActionAt(arg1);
		}
		public QAction MenuAction() {
			return ProxyQMenu().MenuAction();
		}
		public string Title() {
			return ProxyQMenu().Title();
		}
		public void SetTitle(string title) {
			ProxyQMenu().SetTitle(title);
		}
		public QIcon Icon() {
			return ProxyQMenu().Icon();
		}
		public void SetIcon(QIcon icon) {
			ProxyQMenu().SetIcon(icon);
		}
		public void SetNoReplayFor(QWidget widget) {
			ProxyQMenu().SetNoReplayFor(widget);
		}
		public static new string Tr(string s, string c) {
			return StaticQMenu().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQMenu().Tr(s);
		}
		// QAction* exec(QList<QAction*> arg1,const QPoint& arg2,QAction* arg3); >>>> NOT CONVERTED
		// QAction* exec(QList<QAction*> arg1,const QPoint& arg2); >>>> NOT CONVERTED
		protected int ColumnCount() {
			return ProxyQMenu().ColumnCount();
		}
		protected new void ChangeEvent(QEvent arg1) {
			ProxyQMenu().ChangeEvent(arg1);
		}
		protected new void KeyPressEvent(QKeyEvent arg1) {
			ProxyQMenu().KeyPressEvent(arg1);
		}
		protected new void MouseReleaseEvent(QMouseEvent arg1) {
			ProxyQMenu().MouseReleaseEvent(arg1);
		}
		protected new void MousePressEvent(QMouseEvent arg1) {
			ProxyQMenu().MousePressEvent(arg1);
		}
		protected new void MouseMoveEvent(QMouseEvent arg1) {
			ProxyQMenu().MouseMoveEvent(arg1);
		}
		protected new void WheelEvent(QWheelEvent arg1) {
			ProxyQMenu().WheelEvent(arg1);
		}
		protected new void EnterEvent(QEvent arg1) {
			ProxyQMenu().EnterEvent(arg1);
		}
		protected new void LeaveEvent(QEvent arg1) {
			ProxyQMenu().LeaveEvent(arg1);
		}
		protected new void HideEvent(QHideEvent arg1) {
			ProxyQMenu().HideEvent(arg1);
		}
		protected new void PaintEvent(QPaintEvent arg1) {
			ProxyQMenu().PaintEvent(arg1);
		}
		protected new void ActionEvent(QActionEvent arg1) {
			ProxyQMenu().ActionEvent(arg1);
		}
		protected new void TimerEvent(QTimerEvent arg1) {
			ProxyQMenu().TimerEvent(arg1);
		}
		public new bool Event(QEvent arg1) {
			return ProxyQMenu().Event(arg1);
		}
		~QMenu() {
			ProxyQMenu().Dispose();
		}
		public new void Dispose() {
			ProxyQMenu().Dispose();
		}
	}

	public interface IQMenuSignals {
		void AboutToShow();
		void Triggered(QAction action);
		void Hovered(QAction action);
	}
}
