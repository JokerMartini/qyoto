//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QFileIconProvider : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QFileIconProvider(Type dummy) {}
		interface IQFileIconProviderProxy {
		}

		protected void CreateQFileIconProviderProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QFileIconProvider), this);
			_interceptor = (QFileIconProvider) realProxy.GetTransparentProxy();
		}
		private QFileIconProvider ProxyQFileIconProvider() {
			return (QFileIconProvider) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QFileIconProvider() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQFileIconProviderProxy), null);
			_staticInterceptor = (IQFileIconProviderProxy) realProxy.GetTransparentProxy();
		}
		private static IQFileIconProviderProxy StaticQFileIconProvider() {
			return (IQFileIconProviderProxy) _staticInterceptor;
		}

		enum IconType {
			Computer = 0,
			Desktop = 1,
			Trashcan = 2,
			Network = 3,
			Drive = 4,
			Folder = 5,
			File = 6,
		}
		public QFileIconProvider() : this((Type) null) {
			CreateQFileIconProviderProxy();
			NewQFileIconProvider();
		}
		private void NewQFileIconProvider() {
			ProxyQFileIconProvider().NewQFileIconProvider();
		}
		public virtual QIcon Icon(int type) {
			return ProxyQFileIconProvider().Icon(type);
		}
		public virtual QIcon Icon(QFileInfo info) {
			return ProxyQFileIconProvider().Icon(info);
		}
		~QFileIconProvider() {
			ProxyQFileIconProvider().Dispose();
		}
		public void Dispose() {
			ProxyQFileIconProvider().Dispose();
		}
	}
}
