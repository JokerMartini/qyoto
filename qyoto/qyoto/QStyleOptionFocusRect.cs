//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionFocusRect")]
	public class QStyleOptionFocusRect : QStyleOption, IDisposable {
 		protected QStyleOptionFocusRect(Type dummy) : base((Type) null) {}
		interface IQStyleOptionFocusRectProxy {
		}

		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionFocusRect), this);
			_interceptor = (QStyleOptionFocusRect) realProxy.GetTransparentProxy();
		}
		private QStyleOptionFocusRect ProxyQStyleOptionFocusRect() {
			return (QStyleOptionFocusRect) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleOptionFocusRect() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleOptionFocusRectProxy), null);
			_staticInterceptor = (IQStyleOptionFocusRectProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleOptionFocusRectProxy StaticQStyleOptionFocusRect() {
			return (IQStyleOptionFocusRectProxy) _staticInterceptor;
		}

		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_FocusRect,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionFocusRect() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionFocusRect();
		}
		[SmokeMethod("QStyleOptionFocusRect()")]
		private void NewQStyleOptionFocusRect() {
			ProxyQStyleOptionFocusRect().NewQStyleOptionFocusRect();
		}
		public QStyleOptionFocusRect(QStyleOptionFocusRect other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionFocusRect(other);
		}
		[SmokeMethod("QStyleOptionFocusRect(const QStyleOptionFocusRect&)")]
		private void NewQStyleOptionFocusRect(QStyleOptionFocusRect other) {
			ProxyQStyleOptionFocusRect().NewQStyleOptionFocusRect(other);
		}
		public QStyleOptionFocusRect(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionFocusRect(version);
		}
		[SmokeMethod("QStyleOptionFocusRect(int)")]
		private void NewQStyleOptionFocusRect(int version) {
			ProxyQStyleOptionFocusRect().NewQStyleOptionFocusRect(version);
		}
		~QStyleOptionFocusRect() {
			DisposeQStyleOptionFocusRect();
		}
		public void Dispose() {
			DisposeQStyleOptionFocusRect();
		}
		[SmokeMethod("~QStyleOptionFocusRect()")]
		private void DisposeQStyleOptionFocusRect() {
			ProxyQStyleOptionFocusRect().DisposeQStyleOptionFocusRect();
		}
	}
}
