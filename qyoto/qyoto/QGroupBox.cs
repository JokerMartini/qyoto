//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQGroupBoxSignals"></see> for signals emitted by QGroupBox
	public class QGroupBox : QWidget, IDisposable {
 		protected QGroupBox(Type dummy) : base((Type) null) {}
		interface IQGroupBoxProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQGroupBoxProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QGroupBox), this);
			_interceptor = (QGroupBox) realProxy.GetTransparentProxy();
		}
		private QGroupBox ProxyQGroupBox() {
			return (QGroupBox) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QGroupBox() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQGroupBoxProxy), null);
			_staticInterceptor = (IQGroupBoxProxy) realProxy.GetTransparentProxy();
		}
		private static IQGroupBoxProxy StaticQGroupBox() {
			return (IQGroupBoxProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQGroupBox().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QGroupBox(QWidget parent) : this((Type) null) {
			CreateQGroupBoxProxy();
			NewQGroupBox(parent);
		}
		private void NewQGroupBox(QWidget parent) {
			ProxyQGroupBox().NewQGroupBox(parent);
		}
		public QGroupBox() : this((Type) null) {
			CreateQGroupBoxProxy();
			NewQGroupBox();
		}
		private void NewQGroupBox() {
			ProxyQGroupBox().NewQGroupBox();
		}
		public QGroupBox(string title, QWidget parent) : this((Type) null) {
			CreateQGroupBoxProxy();
			NewQGroupBox(title,parent);
		}
		private void NewQGroupBox(string title, QWidget parent) {
			ProxyQGroupBox().NewQGroupBox(title,parent);
		}
		public QGroupBox(string title) : this((Type) null) {
			CreateQGroupBoxProxy();
			NewQGroupBox(title);
		}
		private void NewQGroupBox(string title) {
			ProxyQGroupBox().NewQGroupBox(title);
		}
		public string Title() {
			return ProxyQGroupBox().Title();
		}
		public void SetTitle(string arg1) {
			ProxyQGroupBox().SetTitle(arg1);
		}
		public int Alignment() {
			return ProxyQGroupBox().Alignment();
		}
		public void SetAlignment(int arg1) {
			ProxyQGroupBox().SetAlignment(arg1);
		}
		public new QSize MinimumSizeHint() {
			return ProxyQGroupBox().MinimumSizeHint();
		}
		public bool IsFlat() {
			return ProxyQGroupBox().IsFlat();
		}
		public void SetFlat(bool b) {
			ProxyQGroupBox().SetFlat(b);
		}
		public bool IsCheckable() {
			return ProxyQGroupBox().IsCheckable();
		}
		public void SetCheckable(bool b) {
			ProxyQGroupBox().SetCheckable(b);
		}
		public bool IsChecked() {
			return ProxyQGroupBox().IsChecked();
		}
		public void SetChecked(bool b) {
			ProxyQGroupBox().SetChecked(b);
		}
		public static new string Tr(string s, string c) {
			return StaticQGroupBox().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQGroupBox().Tr(s);
		}
		public new bool Event(QEvent arg1) {
			return ProxyQGroupBox().Event(arg1);
		}
		protected new void ChildEvent(QChildEvent arg1) {
			ProxyQGroupBox().ChildEvent(arg1);
		}
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQGroupBox().ResizeEvent(arg1);
		}
		protected new void PaintEvent(QPaintEvent arg1) {
			ProxyQGroupBox().PaintEvent(arg1);
		}
		protected new void FocusInEvent(QFocusEvent arg1) {
			ProxyQGroupBox().FocusInEvent(arg1);
		}
		protected new void ChangeEvent(QEvent arg1) {
			ProxyQGroupBox().ChangeEvent(arg1);
		}
		~QGroupBox() {
			ProxyQGroupBox().Dispose();
		}
		public new void Dispose() {
			ProxyQGroupBox().Dispose();
		}
	}

	public interface IQGroupBoxSignals {
		void Toggled(bool arg1);
	}
}
