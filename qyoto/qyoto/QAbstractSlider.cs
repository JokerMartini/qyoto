//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQAbstractSliderSignals"></see> for signals emitted by QAbstractSlider
	public class QAbstractSlider : QWidget, IDisposable {
 		protected QAbstractSlider(Type dummy) : base((Type) null) {}
		interface IQAbstractSliderProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQAbstractSliderProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QAbstractSlider), this);
			_interceptor = (QAbstractSlider) realProxy.GetTransparentProxy();
		}
		private QAbstractSlider ProxyQAbstractSlider() {
			return (QAbstractSlider) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QAbstractSlider() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQAbstractSliderProxy), null);
			_staticInterceptor = (IQAbstractSliderProxy) realProxy.GetTransparentProxy();
		}
		private static IQAbstractSliderProxy StaticQAbstractSlider() {
			return (IQAbstractSliderProxy) _staticInterceptor;
		}

		enum SliderAction {
			SliderNoAction = 0,
			SliderSingleStepAdd = 1,
			SliderSingleStepSub = 2,
			SliderPageStepAdd = 3,
			SliderPageStepSub = 4,
			SliderToMinimum = 5,
			SliderToMaximum = 6,
			SliderMove = 7,
		}
		enum E_SliderChange {
			SliderRangeChange = 0,
			SliderOrientationChange = 1,
			SliderStepsChange = 2,
			SliderValueChange = 3,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQAbstractSlider().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QAbstractSlider(QWidget parent) : this((Type) null) {
			CreateQAbstractSliderProxy();
			NewQAbstractSlider(parent);
		}
		private void NewQAbstractSlider(QWidget parent) {
			ProxyQAbstractSlider().NewQAbstractSlider(parent);
		}
		public QAbstractSlider() : this((Type) null) {
			CreateQAbstractSliderProxy();
			NewQAbstractSlider();
		}
		private void NewQAbstractSlider() {
			ProxyQAbstractSlider().NewQAbstractSlider();
		}
		public int Orientation() {
			return ProxyQAbstractSlider().Orientation();
		}
		public void SetMinimum(int arg1) {
			ProxyQAbstractSlider().SetMinimum(arg1);
		}
		public int Minimum() {
			return ProxyQAbstractSlider().Minimum();
		}
		public void SetMaximum(int arg1) {
			ProxyQAbstractSlider().SetMaximum(arg1);
		}
		public int Maximum() {
			return ProxyQAbstractSlider().Maximum();
		}
		public void SetRange(int min, int max) {
			ProxyQAbstractSlider().SetRange(min,max);
		}
		public void SetSingleStep(int arg1) {
			ProxyQAbstractSlider().SetSingleStep(arg1);
		}
		public int SingleStep() {
			return ProxyQAbstractSlider().SingleStep();
		}
		public void SetPageStep(int arg1) {
			ProxyQAbstractSlider().SetPageStep(arg1);
		}
		public int PageStep() {
			return ProxyQAbstractSlider().PageStep();
		}
		public void SetTracking(bool enable) {
			ProxyQAbstractSlider().SetTracking(enable);
		}
		public bool HasTracking() {
			return ProxyQAbstractSlider().HasTracking();
		}
		public void SetSliderDown(bool arg1) {
			ProxyQAbstractSlider().SetSliderDown(arg1);
		}
		public bool IsSliderDown() {
			return ProxyQAbstractSlider().IsSliderDown();
		}
		public void SetSliderPosition(int arg1) {
			ProxyQAbstractSlider().SetSliderPosition(arg1);
		}
		public int SliderPosition() {
			return ProxyQAbstractSlider().SliderPosition();
		}
		public void SetInvertedAppearance(bool arg1) {
			ProxyQAbstractSlider().SetInvertedAppearance(arg1);
		}
		public bool InvertedAppearance() {
			return ProxyQAbstractSlider().InvertedAppearance();
		}
		public void SetInvertedControls(bool arg1) {
			ProxyQAbstractSlider().SetInvertedControls(arg1);
		}
		public bool InvertedControls() {
			return ProxyQAbstractSlider().InvertedControls();
		}
		public int Value() {
			return ProxyQAbstractSlider().Value();
		}
		public void TriggerAction(int action) {
			ProxyQAbstractSlider().TriggerAction(action);
		}
		public void SetValue(int arg1) {
			ProxyQAbstractSlider().SetValue(arg1);
		}
		public void SetOrientation(int arg1) {
			ProxyQAbstractSlider().SetOrientation(arg1);
		}
		public static new string Tr(string s, string c) {
			return StaticQAbstractSlider().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQAbstractSlider().Tr(s);
		}
		protected void SetRepeatAction(int action, int thresholdTime, int repeatTime) {
			ProxyQAbstractSlider().SetRepeatAction(action,thresholdTime,repeatTime);
		}
		protected void SetRepeatAction(int action, int thresholdTime) {
			ProxyQAbstractSlider().SetRepeatAction(action,thresholdTime);
		}
		protected void SetRepeatAction(int action) {
			ProxyQAbstractSlider().SetRepeatAction(action);
		}
		protected int RepeatAction() {
			return ProxyQAbstractSlider().RepeatAction();
		}
		protected virtual void SliderChange(int change) {
			ProxyQAbstractSlider().SliderChange(change);
		}
		protected new void KeyPressEvent(QKeyEvent ev) {
			ProxyQAbstractSlider().KeyPressEvent(ev);
		}
		protected new void TimerEvent(QTimerEvent arg1) {
			ProxyQAbstractSlider().TimerEvent(arg1);
		}
		protected new void WheelEvent(QWheelEvent e) {
			ProxyQAbstractSlider().WheelEvent(e);
		}
		protected new void ChangeEvent(QEvent e) {
			ProxyQAbstractSlider().ChangeEvent(e);
		}
		~QAbstractSlider() {
			ProxyQAbstractSlider().Dispose();
		}
		public new void Dispose() {
			ProxyQAbstractSlider().Dispose();
		}
	}

	public interface IQAbstractSliderSignals {
		void ValueChanged(int value);
		void SliderPressed();
		void SliderMoved(int position);
		void SliderReleased();
		void RangeChanged(int min, int max);
		void ActionTriggered(int action);
	}
}
