//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QTableWidgetItem : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QTableWidgetItem(Type dummy) {}
		interface IQTableWidgetItemProxy {
			bool op_lt(QTableWidgetItem lhs, QTableWidgetItem other);
			bool op_gt(QTableWidgetItem lhs, QTableWidgetItem other);
		}

		protected void CreateQTableWidgetItemProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTableWidgetItem), this);
			_interceptor = (QTableWidgetItem) realProxy.GetTransparentProxy();
		}
		private QTableWidgetItem ProxyQTableWidgetItem() {
			return (QTableWidgetItem) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTableWidgetItem() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTableWidgetItemProxy), null);
			_staticInterceptor = (IQTableWidgetItemProxy) realProxy.GetTransparentProxy();
		}
		private static IQTableWidgetItemProxy StaticQTableWidgetItem() {
			return (IQTableWidgetItemProxy) _staticInterceptor;
		}

		public const int Type = 0;
		public const int UserType = 1000;

		public QTableWidgetItem(int type) : this((Type) null) {
			CreateQTableWidgetItemProxy();
			NewQTableWidgetItem(type);
		}
		private void NewQTableWidgetItem(int type) {
			ProxyQTableWidgetItem().NewQTableWidgetItem(type);
		}
		public QTableWidgetItem() : this((Type) null) {
			CreateQTableWidgetItemProxy();
			NewQTableWidgetItem();
		}
		private void NewQTableWidgetItem() {
			ProxyQTableWidgetItem().NewQTableWidgetItem();
		}
		public QTableWidgetItem(string text, int type) : this((Type) null) {
			CreateQTableWidgetItemProxy();
			NewQTableWidgetItem(text,type);
		}
		private void NewQTableWidgetItem(string text, int type) {
			ProxyQTableWidgetItem().NewQTableWidgetItem(text,type);
		}
		public QTableWidgetItem(string text) : this((Type) null) {
			CreateQTableWidgetItemProxy();
			NewQTableWidgetItem(text);
		}
		private void NewQTableWidgetItem(string text) {
			ProxyQTableWidgetItem().NewQTableWidgetItem(text);
		}
		public virtual QTableWidgetItem Clone() {
			return ProxyQTableWidgetItem().Clone();
		}
		public QTableWidget TableWidget() {
			return ProxyQTableWidgetItem().TableWidget();
		}
		public int Flags() {
			return ProxyQTableWidgetItem().Flags();
		}
		public void SetFlags(int flags) {
			ProxyQTableWidgetItem().SetFlags(flags);
		}
		public string Text() {
			return ProxyQTableWidgetItem().Text();
		}
		public void SetText(string text) {
			ProxyQTableWidgetItem().SetText(text);
		}
		public QIcon Icon() {
			return ProxyQTableWidgetItem().Icon();
		}
		public void SetIcon(QIcon icon) {
			ProxyQTableWidgetItem().SetIcon(icon);
		}
		public string StatusTip() {
			return ProxyQTableWidgetItem().StatusTip();
		}
		public void SetStatusTip(string statusTip) {
			ProxyQTableWidgetItem().SetStatusTip(statusTip);
		}
		public string ToolTip() {
			return ProxyQTableWidgetItem().ToolTip();
		}
		public void SetToolTip(string toolTip) {
			ProxyQTableWidgetItem().SetToolTip(toolTip);
		}
		public string WhatsThis() {
			return ProxyQTableWidgetItem().WhatsThis();
		}
		public void SetWhatsThis(string whatsThis) {
			ProxyQTableWidgetItem().SetWhatsThis(whatsThis);
		}
		public QFont Font() {
			return ProxyQTableWidgetItem().Font();
		}
		public void SetFont(QFont font) {
			ProxyQTableWidgetItem().SetFont(font);
		}
		public int TextAlignment() {
			return ProxyQTableWidgetItem().TextAlignment();
		}
		public void SetTextAlignment(int alignment) {
			ProxyQTableWidgetItem().SetTextAlignment(alignment);
		}
		public QColor BackgroundColor() {
			return ProxyQTableWidgetItem().BackgroundColor();
		}
		public void SetBackgroundColor(QColor color) {
			ProxyQTableWidgetItem().SetBackgroundColor(color);
		}
		public QColor TextColor() {
			return ProxyQTableWidgetItem().TextColor();
		}
		public void SetTextColor(QColor color) {
			ProxyQTableWidgetItem().SetTextColor(color);
		}
		public int CheckState() {
			return ProxyQTableWidgetItem().CheckState();
		}
		public void SetCheckState(int state) {
			ProxyQTableWidgetItem().SetCheckState(state);
		}
		public virtual QVariant Data(int role) {
			return ProxyQTableWidgetItem().Data(role);
		}
		public virtual void SetData(int role, QVariant value) {
			ProxyQTableWidgetItem().SetData(role,value);
		}
		public static bool operator<(QTableWidgetItem lhs, QTableWidgetItem other) {
			return StaticQTableWidgetItem().op_lt(lhs,other);
		}
		public static bool operator>(QTableWidgetItem lhs, QTableWidgetItem other) {
			return StaticQTableWidgetItem().op_gt(lhs,other);
		}
		public virtual void Read(QDataStream arg1) {
			ProxyQTableWidgetItem().Read(arg1);
		}
		public virtual void Write(QDataStream arg1) {
			ProxyQTableWidgetItem().Write(arg1);
		}
		~QTableWidgetItem() {
			ProxyQTableWidgetItem().Dispose();
		}
		public void Dispose() {
			ProxyQTableWidgetItem().Dispose();
		}
	}
}
