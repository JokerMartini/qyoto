//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Collections;
	using System.Text;

	[SmokeClass("QStringListModel")]
	public class QStringListModel : QAbstractListModel, IDisposable {
 		protected QStringListModel(Type dummy) : base((Type) null) {}
		interface IQStringListModelProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStringListModel), this);
			_interceptor = (QStringListModel) realProxy.GetTransparentProxy();
		}
		private QStringListModel ProxyQStringListModel() {
			return (QStringListModel) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStringListModel() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStringListModelProxy), null);
			_staticInterceptor = (IQStringListModelProxy) realProxy.GetTransparentProxy();
		}
		private static IQStringListModelProxy StaticQStringListModel() {
			return (IQStringListModelProxy) _staticInterceptor;
		}

		[SmokeMethod("metaObject() const")]
		public new virtual QMetaObject MetaObject() {
			return ProxyQStringListModel().MetaObject();
		}
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QStringListModel(QObject parent) : this((Type) null) {
			CreateProxy();
			NewQStringListModel(parent);
		}
		[SmokeMethod("QStringListModel(QObject*)")]
		private void NewQStringListModel(QObject parent) {
			ProxyQStringListModel().NewQStringListModel(parent);
		}
		public QStringListModel() : this((Type) null) {
			CreateProxy();
			NewQStringListModel();
		}
		[SmokeMethod("QStringListModel()")]
		private void NewQStringListModel() {
			ProxyQStringListModel().NewQStringListModel();
		}
		public QStringListModel(string[] strings, QObject parent) : this((Type) null) {
			CreateProxy();
			NewQStringListModel(strings,parent);
		}
		[SmokeMethod("QStringListModel(const QStringList&, QObject*)")]
		private void NewQStringListModel(string[] strings, QObject parent) {
			ProxyQStringListModel().NewQStringListModel(strings,parent);
		}
		public QStringListModel(string[] strings) : this((Type) null) {
			CreateProxy();
			NewQStringListModel(strings);
		}
		[SmokeMethod("QStringListModel(const QStringList&)")]
		private void NewQStringListModel(string[] strings) {
			ProxyQStringListModel().NewQStringListModel(strings);
		}
		[SmokeMethod("rowCount(const QModelIndex&) const")]
		public new int RowCount(QModelIndex parent) {
			return ProxyQStringListModel().RowCount(parent);
		}
		[SmokeMethod("rowCount() const")]
		public new int RowCount() {
			return ProxyQStringListModel().RowCount();
		}
		[SmokeMethod("data(const QModelIndex&, int) const")]
		public new QVariant Data(QModelIndex index, int role) {
			return ProxyQStringListModel().Data(index,role);
		}
		[SmokeMethod("setData(const QModelIndex&, const QVariant&, int)")]
		public new bool SetData(QModelIndex index, QVariant value, int role) {
			return ProxyQStringListModel().SetData(index,value,role);
		}
		[SmokeMethod("setData(const QModelIndex&, const QVariant&)")]
		public new bool SetData(QModelIndex index, QVariant value) {
			return ProxyQStringListModel().SetData(index,value);
		}
		[SmokeMethod("flags(const QModelIndex&) const")]
		public new int Flags(QModelIndex index) {
			return ProxyQStringListModel().Flags(index);
		}
		[SmokeMethod("insertRows(int, int, const QModelIndex&)")]
		public new bool InsertRows(int row, int count, QModelIndex parent) {
			return ProxyQStringListModel().InsertRows(row,count,parent);
		}
		[SmokeMethod("insertRows(int, int)")]
		public new bool InsertRows(int row, int count) {
			return ProxyQStringListModel().InsertRows(row,count);
		}
		[SmokeMethod("removeRows(int, int, const QModelIndex&)")]
		public new bool RemoveRows(int row, int count, QModelIndex parent) {
			return ProxyQStringListModel().RemoveRows(row,count,parent);
		}
		[SmokeMethod("removeRows(int, int)")]
		public new bool RemoveRows(int row, int count) {
			return ProxyQStringListModel().RemoveRows(row,count);
		}
		[SmokeMethod("sort(int, Qt::SortOrder)")]
		public new void Sort(int column, Qt.SortOrder order) {
			ProxyQStringListModel().Sort(column,order);
		}
		[SmokeMethod("sort(int)")]
		public new void Sort(int column) {
			ProxyQStringListModel().Sort(column);
		}
		[SmokeMethod("stringList() const")]
		public ArrayList StringList() {
			return ProxyQStringListModel().StringList();
		}
		[SmokeMethod("setStringList(const QStringList&)")]
		public void SetStringList(string[] strings) {
			ProxyQStringListModel().SetStringList(strings);
		}
		[SmokeMethod("tr(const char*, const char*)")]
		public static new string Tr(string s, string c) {
			return StaticQStringListModel().Tr(s,c);
		}
		[SmokeMethod("tr(const char*)")]
		public static new string Tr(string s) {
			return StaticQStringListModel().Tr(s);
		}
		~QStringListModel() {
			DisposeQStringListModel();
		}
		public new void Dispose() {
			DisposeQStringListModel();
		}
		private void DisposeQStringListModel() {
			ProxyQStringListModel().DisposeQStringListModel();
		}
		protected new IQStringListModelSignals Emit() {
			return (IQStringListModelSignals) Q_EMIT;
		}
	}

	public interface IQStringListModelSignals : IQAbstractListModelSignals {
	}
}
