//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Collections;
	using System.Text;

	public class QStyleFactory : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QStyleFactory(Type dummy) {}
		interface IQStyleFactoryProxy {
			ArrayList Keys();
			QStyle Create(string arg1);
		}

		protected void CreateQStyleFactoryProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleFactory), this);
			_interceptor = (QStyleFactory) realProxy.GetTransparentProxy();
		}
		private QStyleFactory ProxyQStyleFactory() {
			return (QStyleFactory) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleFactory() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleFactoryProxy), null);
			_staticInterceptor = (IQStyleFactoryProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleFactoryProxy StaticQStyleFactory() {
			return (IQStyleFactoryProxy) _staticInterceptor;
		}

		public QStyleFactory() : this((Type) null) {
			CreateQStyleFactoryProxy();
			NewQStyleFactory();
		}
		private void NewQStyleFactory() {
			ProxyQStyleFactory().NewQStyleFactory();
		}
		public static ArrayList Keys() {
			return StaticQStyleFactory().Keys();
		}
		public static QStyle Create(string arg1) {
			return StaticQStyleFactory().Create(arg1);
		}
		~QStyleFactory() {
			ProxyQStyleFactory().Dispose();
		}
		public void Dispose() {
			ProxyQStyleFactory().Dispose();
		}
	}
}
