//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QMetaClassInfo : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QMetaClassInfo(Type dummy) {}
		interface IQMetaClassInfoProxy {
		}

		protected void CreateQMetaClassInfoProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QMetaClassInfo), this);
			_interceptor = (QMetaClassInfo) realProxy.GetTransparentProxy();
		}
		private QMetaClassInfo ProxyQMetaClassInfo() {
			return (QMetaClassInfo) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QMetaClassInfo() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQMetaClassInfoProxy), null);
			_staticInterceptor = (IQMetaClassInfoProxy) realProxy.GetTransparentProxy();
		}
		private static IQMetaClassInfoProxy StaticQMetaClassInfo() {
			return (IQMetaClassInfoProxy) _staticInterceptor;
		}

		public QMetaClassInfo() : this((Type) null) {
			CreateQMetaClassInfoProxy();
			NewQMetaClassInfo();
		}
		private void NewQMetaClassInfo() {
			ProxyQMetaClassInfo().NewQMetaClassInfo();
		}
		public string Name() {
			return ProxyQMetaClassInfo().Name();
		}
		public string Value() {
			return ProxyQMetaClassInfo().Value();
		}
		~QMetaClassInfo() {
			ProxyQMetaClassInfo().Dispose();
		}
		public void Dispose() {
			ProxyQMetaClassInfo().Dispose();
		}
	}
}
