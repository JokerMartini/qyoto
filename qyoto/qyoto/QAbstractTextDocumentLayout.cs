//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQAbstractTextDocumentLayoutSignals"></see> for signals emitted by QAbstractTextDocumentLayout
	public class QAbstractTextDocumentLayout : QObject {
 		protected QAbstractTextDocumentLayout(Type dummy) : base((Type) null) {}
		interface IQAbstractTextDocumentLayoutProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected void CreateQAbstractTextDocumentLayoutProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QAbstractTextDocumentLayout), this);
			_interceptor = (QAbstractTextDocumentLayout) realProxy.GetTransparentProxy();
		}
		private QAbstractTextDocumentLayout ProxyQAbstractTextDocumentLayout() {
			return (QAbstractTextDocumentLayout) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QAbstractTextDocumentLayout() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQAbstractTextDocumentLayoutProxy), null);
			_staticInterceptor = (IQAbstractTextDocumentLayoutProxy) realProxy.GetTransparentProxy();
		}
		private static IQAbstractTextDocumentLayoutProxy StaticQAbstractTextDocumentLayout() {
			return (IQAbstractTextDocumentLayoutProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQAbstractTextDocumentLayout().MetaObject();
		}
		// void* qt_metacast(const char* arg1); >>>> NOT CONVERTED
		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		// QAbstractTextDocumentLayout* QAbstractTextDocumentLayout(QTextDocument* arg1); >>>> NOT CONVERTED
		// void draw(QPainter* arg1,const QAbstractTextDocumentLayout::PaintContext& arg2); >>>> NOT CONVERTED
		public virtual int HitTest(QPointF point, int accuracy) {
			return ProxyQAbstractTextDocumentLayout().HitTest(point,accuracy);
		}
		public string AnchorAt(QPointF pos) {
			return ProxyQAbstractTextDocumentLayout().AnchorAt(pos);
		}
		public virtual int PageCount() {
			return ProxyQAbstractTextDocumentLayout().PageCount();
		}
		public virtual QSizeF DocumentSize() {
			return ProxyQAbstractTextDocumentLayout().DocumentSize();
		}
		public virtual QRectF FrameBoundingRect(QTextFrame frame) {
			return ProxyQAbstractTextDocumentLayout().FrameBoundingRect(frame);
		}
		public virtual QRectF BlockBoundingRect(QTextBlock block) {
			return ProxyQAbstractTextDocumentLayout().BlockBoundingRect(block);
		}
		public void SetPaintDevice(IQPaintDevice device) {
			ProxyQAbstractTextDocumentLayout().SetPaintDevice(device);
		}
		public IQPaintDevice PaintDevice() {
			return ProxyQAbstractTextDocumentLayout().PaintDevice();
		}
		// QTextDocument* document(); >>>> NOT CONVERTED
		public void RegisterHandler(int objectType, QObject component) {
			ProxyQAbstractTextDocumentLayout().RegisterHandler(objectType,component);
		}
		public QTextObjectInterface HandlerForObject(int objectType) {
			return ProxyQAbstractTextDocumentLayout().HandlerForObject(objectType);
		}
		public static new string Tr(string s, string c) {
			return StaticQAbstractTextDocumentLayout().Tr(s,c);
		}
		public static new string Tr(string s) {
			return StaticQAbstractTextDocumentLayout().Tr(s);
		}
	}

	public interface IQAbstractTextDocumentLayoutSignals {
		void Update(QRectF arg1);
		void Update();
		void DocumentSizeChanged(QSizeF newSize);
		void PageCountChanged(int newPages);
	}
}
