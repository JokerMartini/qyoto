//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	public interface IQXmlEntityResolver {
		bool ResolveEntity(string publicId, string systemId, QXmlInputSource ret);
		string ErrorString();
	}

	[SmokeClass("QXmlEntityResolver")]
	public abstract class QXmlEntityResolver : Object, IQXmlEntityResolver {
		protected SmokeInvocation interceptor = null;
		private IntPtr smokeObject;
		protected QXmlEntityResolver(Type dummy) {}
		protected void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QXmlEntityResolver), this);
		}
		[SmokeMethod("resolveEntity(const QString&, const QString&, QXmlInputSource*&)")]
		public abstract bool ResolveEntity(string publicId, string systemId, QXmlInputSource ret);
		[SmokeMethod("errorString() const")]
		public abstract string ErrorString();
		public QXmlEntityResolver() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QXmlEntityResolver", "QXmlEntityResolver()", typeof(void));
		}
	}
}
