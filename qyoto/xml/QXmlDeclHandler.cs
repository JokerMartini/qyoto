//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	public interface IQXmlDeclHandler {
			bool AttributeDecl(string eName, string aName, string type, string valueDefault, string value);
			bool InternalEntityDecl(string name, string value);
			bool ExternalEntityDecl(string name, string publicId, string systemId);
			string ErrorString();
	}

	[SmokeClass("QXmlDeclHandler")]
	public abstract class QXmlDeclHandler : MarshalByRefObject, IQXmlDeclHandler {
		protected Object _interceptor = null;
		private IntPtr _smokeObject;
		protected QXmlDeclHandler(Type dummy) {}
		[SmokeClass("QXmlDeclHandler")]
		interface IQXmlDeclHandlerProxy {
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QXmlDeclHandler), this);
			_interceptor = (QXmlDeclHandler) realProxy.GetTransparentProxy();
		}
		private QXmlDeclHandler ProxyQXmlDeclHandler() {
			return (QXmlDeclHandler) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QXmlDeclHandler() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQXmlDeclHandlerProxy), null);
			_staticInterceptor = (IQXmlDeclHandlerProxy) realProxy.GetTransparentProxy();
		}
		private static IQXmlDeclHandlerProxy StaticQXmlDeclHandler() {
			return (IQXmlDeclHandlerProxy) _staticInterceptor;
		}
		public abstract bool AttributeDecl(string eName, string aName, string type, string valueDefault, string value);
		public abstract bool InternalEntityDecl(string name, string value);
		public abstract bool ExternalEntityDecl(string name, string publicId, string systemId);
		public abstract string ErrorString();
		public QXmlDeclHandler() : this((Type) null) {
			CreateProxy();
			NewQXmlDeclHandler();
		}
		[SmokeMethod("QXmlDeclHandler", "()", "")]
		private void NewQXmlDeclHandler() {
			ProxyQXmlDeclHandler().NewQXmlDeclHandler();
		}
		~QXmlDeclHandler() {
			DisposeQXmlDeclHandler();
		}
		public void Dispose() {
			DisposeQXmlDeclHandler();
		}
		[SmokeMethod("~QXmlDeclHandler", "()", "")]
		private void DisposeQXmlDeclHandler() {
			ProxyQXmlDeclHandler().DisposeQXmlDeclHandler();
		}
	}
}
