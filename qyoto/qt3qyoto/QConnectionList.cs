//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QConnectionList :  IDisposable { //QPtrList kommt da eigentlich noch hin
		protected Object _interceptor = null;
 		protected QConnectionList(Type dummy) : base() {}
		interface IQConnectionListProxy {
		}

		protected void CreateQConnectionListProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QConnectionList), this);
			_interceptor = (QConnectionList) realProxy.GetTransparentProxy();
		}
		private QConnectionList ProxyQConnectionList() {
			return (QConnectionList) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QConnectionList() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQConnectionListProxy), null);
			_staticInterceptor = (IQConnectionListProxy) realProxy.GetTransparentProxy();
		}
		private static IQConnectionListProxy StaticQConnectionList() {
			return (IQConnectionListProxy) _staticInterceptor;
		}

		// QConnectionList* QConnectionList(); >>>> NOT CONVERTED
		// QConnectionList* QConnectionList(const QConnectionList& arg1); >>>> NOT CONVERTED
		~QConnectionList() {
			ProxyQConnectionList().Dispose();
		}
		public void Dispose() {
			ProxyQConnectionList().Dispose();
		}
	}
}
