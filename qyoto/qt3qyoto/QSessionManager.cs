//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Collections;
	using System.Text;

	public class QSessionManager : QObject {
 		protected QSessionManager(Type dummy) : base((Type) null) {}
		interface IQSessionManagerProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQSessionManagerProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QSessionManager), this);
			_interceptor = (QSessionManager) realProxy.GetTransparentProxy();
		}
		private QSessionManager ProxyQSessionManager() {
			return (QSessionManager) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QSessionManager() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQSessionManagerProxy), null);
			_staticInterceptor = (IQSessionManagerProxy) realProxy.GetTransparentProxy();
		}
		private static IQSessionManagerProxy StaticQSessionManager() {
			return (IQSessionManagerProxy) _staticInterceptor;
		}

		enum E_RestartHint {
			RestartIfRunning = 0,
			RestartAnyway = 1,
			RestartImmediately = 2,
			RestartNever = 3,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQSessionManager().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQSessionManager().ClassName();
		}
		public string SessionId() {
			return ProxyQSessionManager().SessionId();
		}
		public string SessionKey() {
			return ProxyQSessionManager().SessionKey();
		}
		public bool AllowsInteraction() {
			return ProxyQSessionManager().AllowsInteraction();
		}
		public bool AllowsErrorInteraction() {
			return ProxyQSessionManager().AllowsErrorInteraction();
		}
		public void Release() {
			ProxyQSessionManager().Release();
		}
		public void Cancel() {
			ProxyQSessionManager().Cancel();
		}
		public void SetRestartHint(int arg1) {
			ProxyQSessionManager().SetRestartHint(arg1);
		}
		public int RestartHint() {
			return ProxyQSessionManager().RestartHint();
		}
		public void SetRestartCommand(string[] arg1) {
			ProxyQSessionManager().SetRestartCommand(arg1);
		}
		public ArrayList RestartCommand() {
			return ProxyQSessionManager().RestartCommand();
		}
		public void SetDiscardCommand(string[] arg1) {
			ProxyQSessionManager().SetDiscardCommand(arg1);
		}
		public ArrayList DiscardCommand() {
			return ProxyQSessionManager().DiscardCommand();
		}
		public void SetManagerProperty(string name, string value) {
			ProxyQSessionManager().SetManagerProperty(name,value);
		}
		public void SetManagerProperty(string name, string[] value) {
			ProxyQSessionManager().SetManagerProperty(name,value);
		}
		public bool IsPhase2() {
			return ProxyQSessionManager().IsPhase2();
		}
		public void RequestPhase2() {
			ProxyQSessionManager().RequestPhase2();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQSessionManager().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQSessionManager().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQSessionManager().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQSessionManager().TrUtf8(arg1);
		}
	}
}
