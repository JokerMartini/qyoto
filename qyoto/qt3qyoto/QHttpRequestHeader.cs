//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QHttpRequestHeader : QHttpHeader, IDisposable {
 		protected QHttpRequestHeader(Type dummy) : base((Type) null) {}
		interface IQHttpRequestHeaderProxy {
		}

		protected void CreateQHttpRequestHeaderProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QHttpRequestHeader), this);
			_interceptor = (QHttpRequestHeader) realProxy.GetTransparentProxy();
		}
		private QHttpRequestHeader ProxyQHttpRequestHeader() {
			return (QHttpRequestHeader) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QHttpRequestHeader() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQHttpRequestHeaderProxy), null);
			_staticInterceptor = (IQHttpRequestHeaderProxy) realProxy.GetTransparentProxy();
		}
		private static IQHttpRequestHeaderProxy StaticQHttpRequestHeader() {
			return (IQHttpRequestHeaderProxy) _staticInterceptor;
		}

		public QHttpRequestHeader() : this((Type) null) {
			CreateQHttpRequestHeaderProxy();
			NewQHttpRequestHeader();
		}
		private void NewQHttpRequestHeader() {
			ProxyQHttpRequestHeader().NewQHttpRequestHeader();
		}
		public QHttpRequestHeader(string method, string path, int majorVer, int minorVer) : this((Type) null) {
			CreateQHttpRequestHeaderProxy();
			NewQHttpRequestHeader(method,path,majorVer,minorVer);
		}
		private void NewQHttpRequestHeader(string method, string path, int majorVer, int minorVer) {
			ProxyQHttpRequestHeader().NewQHttpRequestHeader(method,path,majorVer,minorVer);
		}
		public QHttpRequestHeader(string method, string path, int majorVer) : this((Type) null) {
			CreateQHttpRequestHeaderProxy();
			NewQHttpRequestHeader(method,path,majorVer);
		}
		private void NewQHttpRequestHeader(string method, string path, int majorVer) {
			ProxyQHttpRequestHeader().NewQHttpRequestHeader(method,path,majorVer);
		}
		public QHttpRequestHeader(string method, string path) : this((Type) null) {
			CreateQHttpRequestHeaderProxy();
			NewQHttpRequestHeader(method,path);
		}
		private void NewQHttpRequestHeader(string method, string path) {
			ProxyQHttpRequestHeader().NewQHttpRequestHeader(method,path);
		}
		public QHttpRequestHeader(QHttpRequestHeader header) : this((Type) null) {
			CreateQHttpRequestHeaderProxy();
			NewQHttpRequestHeader(header);
		}
		private void NewQHttpRequestHeader(QHttpRequestHeader header) {
			ProxyQHttpRequestHeader().NewQHttpRequestHeader(header);
		}
		public QHttpRequestHeader(string str) : this((Type) null) {
			CreateQHttpRequestHeaderProxy();
			NewQHttpRequestHeader(str);
		}
		private void NewQHttpRequestHeader(string str) {
			ProxyQHttpRequestHeader().NewQHttpRequestHeader(str);
		}
		public void SetRequest(string method, string path, int majorVer, int minorVer) {
			ProxyQHttpRequestHeader().SetRequest(method,path,majorVer,minorVer);
		}
		public void SetRequest(string method, string path, int majorVer) {
			ProxyQHttpRequestHeader().SetRequest(method,path,majorVer);
		}
		public void SetRequest(string method, string path) {
			ProxyQHttpRequestHeader().SetRequest(method,path);
		}
		public string Method() {
			return ProxyQHttpRequestHeader().Method();
		}
		public string Path() {
			return ProxyQHttpRequestHeader().Path();
		}
		public new int MajorVersion() {
			return ProxyQHttpRequestHeader().MajorVersion();
		}
		public new int MinorVersion() {
			return ProxyQHttpRequestHeader().MinorVersion();
		}
		public new string ToString() {
			return ProxyQHttpRequestHeader().ToString();
		}
		protected new bool ParseLine(string line, int number) {
			return ProxyQHttpRequestHeader().ParseLine(line,number);
		}
		~QHttpRequestHeader() {
			ProxyQHttpRequestHeader().Dispose();
		}
		public new void Dispose() {
			ProxyQHttpRequestHeader().Dispose();
		}
	}
}
