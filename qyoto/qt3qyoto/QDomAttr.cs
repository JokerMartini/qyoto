//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QDomAttr : QDomNode, IDisposable {
 		protected QDomAttr(Type dummy) : base((Type) null) {}
		interface IQDomAttrProxy {
		}

		protected void CreateQDomAttrProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDomAttr), this);
			_interceptor = (QDomAttr) realProxy.GetTransparentProxy();
		}
		private QDomAttr ProxyQDomAttr() {
			return (QDomAttr) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDomAttr() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDomAttrProxy), null);
			_staticInterceptor = (IQDomAttrProxy) realProxy.GetTransparentProxy();
		}
		private static IQDomAttrProxy StaticQDomAttr() {
			return (IQDomAttrProxy) _staticInterceptor;
		}

		public QDomAttr() : this((Type) null) {
			CreateQDomAttrProxy();
			NewQDomAttr();
		}
		private void NewQDomAttr() {
			ProxyQDomAttr().NewQDomAttr();
		}
		public QDomAttr(QDomAttr x) : this((Type) null) {
			CreateQDomAttrProxy();
			NewQDomAttr(x);
		}
		private void NewQDomAttr(QDomAttr x) {
			ProxyQDomAttr().NewQDomAttr(x);
		}
		public virtual string Name() {
			return ProxyQDomAttr().Name();
		}
		public virtual bool Specified() {
			return ProxyQDomAttr().Specified();
		}
		public virtual QDomElement OwnerElement() {
			return ProxyQDomAttr().OwnerElement();
		}
		public virtual string Value() {
			return ProxyQDomAttr().Value();
		}
		public virtual void SetValue(string arg1) {
			ProxyQDomAttr().SetValue(arg1);
		}
		public new int NodeType() {
			return ProxyQDomAttr().NodeType();
		}
		public new bool IsAttr() {
			return ProxyQDomAttr().IsAttr();
		}
		~QDomAttr() {
			ProxyQDomAttr().Dispose();
		}
		public new void Dispose() {
			ProxyQDomAttr().Dispose();
		}
	}
}
