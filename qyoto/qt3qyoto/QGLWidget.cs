//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QGLWidget : QGL, IDisposable {
 		protected QGLWidget(Type dummy) : base((Type) null) {}
		interface IQGLWidgetProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
			QImage ConvertToGLFormat(QImage img);
		}

		protected void CreateQGLWidgetProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QGLWidget), this);
			_interceptor = (QGLWidget) realProxy.GetTransparentProxy();
		}
		private QGLWidget ProxyQGLWidget() {
			return (QGLWidget) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QGLWidget() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQGLWidgetProxy), null);
			_staticInterceptor = (IQGLWidgetProxy) realProxy.GetTransparentProxy();
		}
		private static IQGLWidgetProxy StaticQGLWidget() {
			return (IQGLWidgetProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQGLWidget().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQGLWidget().ClassName();
		}
		public QGLWidget(QWidget parent, string name, QGLWidget shareWidget, int f) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(parent,name,shareWidget,f);
		}
		private void NewQGLWidget(QWidget parent, string name, QGLWidget shareWidget, int f) {
			ProxyQGLWidget().NewQGLWidget(parent,name,shareWidget,f);
		}
		public QGLWidget(QWidget parent, string name, QGLWidget shareWidget) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(parent,name,shareWidget);
		}
		private void NewQGLWidget(QWidget parent, string name, QGLWidget shareWidget) {
			ProxyQGLWidget().NewQGLWidget(parent,name,shareWidget);
		}
		public QGLWidget(QWidget parent, string name) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(parent,name);
		}
		private void NewQGLWidget(QWidget parent, string name) {
			ProxyQGLWidget().NewQGLWidget(parent,name);
		}
		public QGLWidget(QWidget parent) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(parent);
		}
		private void NewQGLWidget(QWidget parent) {
			ProxyQGLWidget().NewQGLWidget(parent);
		}
		public QGLWidget() : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget();
		}
		private void NewQGLWidget() {
			ProxyQGLWidget().NewQGLWidget();
		}
		public QGLWidget(QGLContext context, QWidget parent, string name, QGLWidget shareWidget, int f) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(context,parent,name,shareWidget,f);
		}
		private void NewQGLWidget(QGLContext context, QWidget parent, string name, QGLWidget shareWidget, int f) {
			ProxyQGLWidget().NewQGLWidget(context,parent,name,shareWidget,f);
		}
		public QGLWidget(QGLContext context, QWidget parent, string name, QGLWidget shareWidget) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(context,parent,name,shareWidget);
		}
		private void NewQGLWidget(QGLContext context, QWidget parent, string name, QGLWidget shareWidget) {
			ProxyQGLWidget().NewQGLWidget(context,parent,name,shareWidget);
		}
		public QGLWidget(QGLContext context, QWidget parent, string name) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(context,parent,name);
		}
		private void NewQGLWidget(QGLContext context, QWidget parent, string name) {
			ProxyQGLWidget().NewQGLWidget(context,parent,name);
		}
		public QGLWidget(QGLContext context, QWidget parent) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(context,parent);
		}
		private void NewQGLWidget(QGLContext context, QWidget parent) {
			ProxyQGLWidget().NewQGLWidget(context,parent);
		}
		public QGLWidget(QGLFormat format, QWidget parent, string name, QGLWidget shareWidget, int f) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(format,parent,name,shareWidget,f);
		}
		private void NewQGLWidget(QGLFormat format, QWidget parent, string name, QGLWidget shareWidget, int f) {
			ProxyQGLWidget().NewQGLWidget(format,parent,name,shareWidget,f);
		}
		public QGLWidget(QGLFormat format, QWidget parent, string name, QGLWidget shareWidget) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(format,parent,name,shareWidget);
		}
		private void NewQGLWidget(QGLFormat format, QWidget parent, string name, QGLWidget shareWidget) {
			ProxyQGLWidget().NewQGLWidget(format,parent,name,shareWidget);
		}
		public QGLWidget(QGLFormat format, QWidget parent, string name) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(format,parent,name);
		}
		private void NewQGLWidget(QGLFormat format, QWidget parent, string name) {
			ProxyQGLWidget().NewQGLWidget(format,parent,name);
		}
		public QGLWidget(QGLFormat format, QWidget parent) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(format,parent);
		}
		private void NewQGLWidget(QGLFormat format, QWidget parent) {
			ProxyQGLWidget().NewQGLWidget(format,parent);
		}
		public QGLWidget(QGLFormat format) : this((Type) null) {
			CreateQGLWidgetProxy();
			NewQGLWidget(format);
		}
		private void NewQGLWidget(QGLFormat format) {
			ProxyQGLWidget().NewQGLWidget(format);
		}
		public void QglColor(QColor c) {
			ProxyQGLWidget().QglColor(c);
		}
		public void QglClearColor(QColor c) {
			ProxyQGLWidget().QglClearColor(c);
		}
		public bool IsValid() {
			return ProxyQGLWidget().IsValid();
		}
		public bool IsSharing() {
			return ProxyQGLWidget().IsSharing();
		}
		public virtual void MakeCurrent() {
			ProxyQGLWidget().MakeCurrent();
		}
		public void DoneCurrent() {
			ProxyQGLWidget().DoneCurrent();
		}
		public bool DoubleBuffer() {
			return ProxyQGLWidget().DoubleBuffer();
		}
		public virtual void SwapBuffers() {
			ProxyQGLWidget().SwapBuffers();
		}
		public QGLFormat Format() {
			return ProxyQGLWidget().Format();
		}
		public virtual void SetFormat(QGLFormat format) {
			ProxyQGLWidget().SetFormat(format);
		}
		public QGLContext Context() {
			return ProxyQGLWidget().Context();
		}
		public virtual void SetContext(QGLContext context, QGLContext shareContext, bool deleteOldContext) {
			ProxyQGLWidget().SetContext(context,shareContext,deleteOldContext);
		}
		public virtual void SetContext(QGLContext context, QGLContext shareContext) {
			ProxyQGLWidget().SetContext(context,shareContext);
		}
		public virtual void SetContext(QGLContext context) {
			ProxyQGLWidget().SetContext(context);
		}
		public virtual QPixmap RenderPixmap(int w, int h, bool useContext) {
			return ProxyQGLWidget().RenderPixmap(w,h,useContext);
		}
		public virtual QPixmap RenderPixmap(int w, int h) {
			return ProxyQGLWidget().RenderPixmap(w,h);
		}
		public virtual QPixmap RenderPixmap(int w) {
			return ProxyQGLWidget().RenderPixmap(w);
		}
		public virtual QPixmap RenderPixmap() {
			return ProxyQGLWidget().RenderPixmap();
		}
		public virtual QImage GrabFrameBuffer(bool withAlpha) {
			return ProxyQGLWidget().GrabFrameBuffer(withAlpha);
		}
		public virtual QImage GrabFrameBuffer() {
			return ProxyQGLWidget().GrabFrameBuffer();
		}
		public virtual void MakeOverlayCurrent() {
			ProxyQGLWidget().MakeOverlayCurrent();
		}
		public QGLContext OverlayContext() {
			return ProxyQGLWidget().OverlayContext();
		}
		public new void SetMouseTracking(bool enable) {
			ProxyQGLWidget().SetMouseTracking(enable);
		}
		public new virtual void Reparent(QWidget parent, int f, QPoint p, bool showIt) {
			ProxyQGLWidget().Reparent(parent,f,p,showIt);
		}
		public new virtual void Reparent(QWidget parent, int f, QPoint p) {
			ProxyQGLWidget().Reparent(parent,f,p);
		}
		public QGLColormap Colormap() {
			return ProxyQGLWidget().Colormap();
		}
		public void SetColormap(QGLColormap map) {
			ProxyQGLWidget().SetColormap(map);
		}
		public void RenderText(int x, int y, string str, QFont fnt, int listBase) {
			ProxyQGLWidget().RenderText(x,y,str,fnt,listBase);
		}
		public void RenderText(int x, int y, string str, QFont fnt) {
			ProxyQGLWidget().RenderText(x,y,str,fnt);
		}
		public void RenderText(int x, int y, string str) {
			ProxyQGLWidget().RenderText(x,y,str);
		}
		public void RenderText(double x, double y, double z, string str, QFont fnt, int listBase) {
			ProxyQGLWidget().RenderText(x,y,z,str,fnt,listBase);
		}
		public void RenderText(double x, double y, double z, string str, QFont fnt) {
			ProxyQGLWidget().RenderText(x,y,z,str,fnt);
		}
		public void RenderText(double x, double y, double z, string str) {
			ProxyQGLWidget().RenderText(x,y,z,str);
		}
		public virtual void UpdateGL() {
			ProxyQGLWidget().UpdateGL();
		}
		public virtual void UpdateOverlayGL() {
			ProxyQGLWidget().UpdateOverlayGL();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQGLWidget().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQGLWidget().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQGLWidget().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQGLWidget().TrUtf8(arg1);
		}
		public static QImage ConvertToGLFormat(QImage img) {
			return StaticQGLWidget().ConvertToGLFormat(img);
		}
		protected virtual void InitializeGL() {
			ProxyQGLWidget().InitializeGL();
		}
		protected virtual void ResizeGL(int w, int h) {
			ProxyQGLWidget().ResizeGL(w,h);
		}
		protected virtual void PaintGL() {
			ProxyQGLWidget().PaintGL();
		}
		protected virtual void InitializeOverlayGL() {
			ProxyQGLWidget().InitializeOverlayGL();
		}
		protected virtual void ResizeOverlayGL(int w, int h) {
			ProxyQGLWidget().ResizeOverlayGL(w,h);
		}
		protected virtual void PaintOverlayGL() {
			ProxyQGLWidget().PaintOverlayGL();
		}
		protected void SetAutoBufferSwap(bool on) {
			ProxyQGLWidget().SetAutoBufferSwap(on);
		}
		protected bool AutoBufferSwap() {
			return ProxyQGLWidget().AutoBufferSwap();
		}
		protected new void PaintEvent(QPaintEvent arg1) {
			ProxyQGLWidget().PaintEvent(arg1);
		}
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQGLWidget().ResizeEvent(arg1);
		}
		protected virtual void GlInit() {
			ProxyQGLWidget().GlInit();
		}
		protected virtual void GlDraw() {
			ProxyQGLWidget().GlDraw();
		}
		~QGLWidget() {
			ProxyQGLWidget().Dispose();
		}
		public new void Dispose() {
			ProxyQGLWidget().Dispose();
		}
	}
}
