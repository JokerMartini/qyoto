//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Collections;

	public class QWidgetListIt : IDisposable {
		protected Object _interceptor = null;
 		protected QWidgetListIt(Type dummy) : base() {}
		interface IQWidgetListItProxy {
		}

		protected void CreateQWidgetListItProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QWidgetListIt), this);
			_interceptor = (QWidgetListIt) realProxy.GetTransparentProxy();
		}
		private QWidgetListIt ProxyQWidgetListIt() {
			return (QWidgetListIt) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QWidgetListIt() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQWidgetListItProxy), null);
			_staticInterceptor = (IQWidgetListItProxy) realProxy.GetTransparentProxy();
		}
		private static IQWidgetListItProxy StaticQWidgetListIt() {
			return (IQWidgetListItProxy) _staticInterceptor;
		}

		public QWidgetListIt(ArrayList l) : this((Type) null) {
			CreateQWidgetListItProxy();
			NewQWidgetListIt(l);
		}
		private void NewQWidgetListIt(ArrayList l) {
			ProxyQWidgetListIt().NewQWidgetListIt(l);
		}
		~QWidgetListIt() {
			ProxyQWidgetListIt().Dispose();
		}
		public void Dispose() {
			ProxyQWidgetListIt().Dispose();
		}
	}
}
