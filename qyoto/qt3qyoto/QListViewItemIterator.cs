//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QListViewItemIterator : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QListViewItemIterator(Type dummy) {}
		interface IQListViewItemIteratorProxy {
			QListViewItemIterator op_incr(QListViewItemIterator lhs);
			QListViewItemIterator op_incr(QListViewItemIterator lhs, int arg1);
			QListViewItemIterator op_decr(QListViewItemIterator lhs);
			QListViewItemIterator op_decr(QListViewItemIterator lhs, int arg1);
			QListViewItem op_mult(QListViewItemIterator lhs);
		}

		protected void CreateQListViewItemIteratorProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QListViewItemIterator), this);
			_interceptor = (QListViewItemIterator) realProxy.GetTransparentProxy();
		}
		private QListViewItemIterator ProxyQListViewItemIterator() {
			return (QListViewItemIterator) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QListViewItemIterator() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQListViewItemIteratorProxy), null);
			_staticInterceptor = (IQListViewItemIteratorProxy) realProxy.GetTransparentProxy();
		}
		private static IQListViewItemIteratorProxy StaticQListViewItemIterator() {
			return (IQListViewItemIteratorProxy) _staticInterceptor;
		}

		enum IteratorFlag {
			Visible = 0x00000001,
			Invisible = 0x00000002,
			Selected = 0x00000004,
			Unselected = 0x00000008,
			Selectable = 0x00000010,
			NotSelectable = 0x00000020,
			DragEnabled = 0x00000040,
			DragDisabled = 0x00000080,
			DropEnabled = 0x00000100,
			DropDisabled = 0x00000200,
			Expandable = 0x00000400,
			NotExpandable = 0x00000800,
			Checked = 0x00001000,
			NotChecked = 0x00002000,
		}
		public QListViewItemIterator() : this((Type) null) {
			CreateQListViewItemIteratorProxy();
			NewQListViewItemIterator();
		}
		private void NewQListViewItemIterator() {
			ProxyQListViewItemIterator().NewQListViewItemIterator();
		}
		public QListViewItemIterator(QListViewItem item) : this((Type) null) {
			CreateQListViewItemIteratorProxy();
			NewQListViewItemIterator(item);
		}
		private void NewQListViewItemIterator(QListViewItem item) {
			ProxyQListViewItemIterator().NewQListViewItemIterator(item);
		}
		public QListViewItemIterator(QListViewItem item, int iteratorFlags) : this((Type) null) {
			CreateQListViewItemIteratorProxy();
			NewQListViewItemIterator(item,iteratorFlags);
		}
		private void NewQListViewItemIterator(QListViewItem item, int iteratorFlags) {
			ProxyQListViewItemIterator().NewQListViewItemIterator(item,iteratorFlags);
		}
		public QListViewItemIterator(QListViewItemIterator it) : this((Type) null) {
			CreateQListViewItemIteratorProxy();
			NewQListViewItemIterator(it);
		}
		private void NewQListViewItemIterator(QListViewItemIterator it) {
			ProxyQListViewItemIterator().NewQListViewItemIterator(it);
		}
		public QListViewItemIterator(QListView lv) : this((Type) null) {
			CreateQListViewItemIteratorProxy();
			NewQListViewItemIterator(lv);
		}
		private void NewQListViewItemIterator(QListView lv) {
			ProxyQListViewItemIterator().NewQListViewItemIterator(lv);
		}
		public QListViewItemIterator(QListView lv, int iteratorFlags) : this((Type) null) {
			CreateQListViewItemIteratorProxy();
			NewQListViewItemIterator(lv,iteratorFlags);
		}
		private void NewQListViewItemIterator(QListView lv, int iteratorFlags) {
			ProxyQListViewItemIterator().NewQListViewItemIterator(lv,iteratorFlags);
		}
		public static QListViewItemIterator operator++(QListViewItemIterator lhs) {
			return StaticQListViewItemIterator().op_incr(lhs);
		}
/*		public static QListViewItemIterator operator++(QListViewItemIterator lhs, int arg1) {
			return StaticQListViewItemIterator().op_incr(lhs,arg1);
		}*/
		public static QListViewItemIterator operator--(QListViewItemIterator lhs) {
			return StaticQListViewItemIterator().op_decr(lhs);
		}
/*		public static QListViewItemIterator operator--(QListViewItemIterator lhs, int arg1) {
			return StaticQListViewItemIterator().op_decr(lhs,arg1);
		}*/
		/*public static QListViewItem operator*(QListViewItemIterator lhs) {
			return StaticQListViewItemIterator().op_mult(lhs);
		}*/
		public QListViewItem Current() {
			return ProxyQListViewItemIterator().Current();
		}
		~QListViewItemIterator() {
			ProxyQListViewItemIterator().Dispose();
		}
		public void Dispose() {
			ProxyQListViewItemIterator().Dispose();
		}
	}
}
