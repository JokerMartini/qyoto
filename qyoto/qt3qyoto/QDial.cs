//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQDialSignals"></see> for signals emitted by QDial
	public class QDial : QWidget, IQRangeControl, IDisposable {
 		protected QDial(Type dummy) : base((Type) null) {}
		interface IQDialProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQDialProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDial), this);
			_interceptor = (QDial) realProxy.GetTransparentProxy();
		}
		private QDial ProxyQDial() {
			return (QDial) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDial() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDialProxy), null);
			_staticInterceptor = (IQDialProxy) realProxy.GetTransparentProxy();
		}
		private static IQDialProxy StaticQDial() {
			return (IQDialProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQDial().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQDial().ClassName();
		}
		public QDial(QWidget parent, string name, int f) : this((Type) null) {
			CreateQDialProxy();
			NewQDial(parent,name,f);
		}
		private void NewQDial(QWidget parent, string name, int f) {
			ProxyQDial().NewQDial(parent,name,f);
		}
		public QDial(QWidget parent, string name) : this((Type) null) {
			CreateQDialProxy();
			NewQDial(parent,name);
		}
		private void NewQDial(QWidget parent, string name) {
			ProxyQDial().NewQDial(parent,name);
		}
		public QDial(QWidget parent) : this((Type) null) {
			CreateQDialProxy();
			NewQDial(parent);
		}
		private void NewQDial(QWidget parent) {
			ProxyQDial().NewQDial(parent);
		}
		public QDial() : this((Type) null) {
			CreateQDialProxy();
			NewQDial();
		}
		private void NewQDial() {
			ProxyQDial().NewQDial();
		}
		public QDial(int minValue, int maxValue, int pageStep, int value, QWidget parent, string name) : this((Type) null) {
			CreateQDialProxy();
			NewQDial(minValue,maxValue,pageStep,value,parent,name);
		}
		private void NewQDial(int minValue, int maxValue, int pageStep, int value, QWidget parent, string name) {
			ProxyQDial().NewQDial(minValue,maxValue,pageStep,value,parent,name);
		}
		public QDial(int minValue, int maxValue, int pageStep, int value, QWidget parent) : this((Type) null) {
			CreateQDialProxy();
			NewQDial(minValue,maxValue,pageStep,value,parent);
		}
		private void NewQDial(int minValue, int maxValue, int pageStep, int value, QWidget parent) {
			ProxyQDial().NewQDial(minValue,maxValue,pageStep,value,parent);
		}
		public QDial(int minValue, int maxValue, int pageStep, int value) : this((Type) null) {
			CreateQDialProxy();
			NewQDial(minValue,maxValue,pageStep,value);
		}
		private void NewQDial(int minValue, int maxValue, int pageStep, int value) {
			ProxyQDial().NewQDial(minValue,maxValue,pageStep,value);
		}
		public bool Tracking() {
			return ProxyQDial().Tracking();
		}
		public bool Wrapping() {
			return ProxyQDial().Wrapping();
		}
		public int NotchSize() {
			return ProxyQDial().NotchSize();
		}
		public virtual void SetNotchTarget(double arg1) {
			ProxyQDial().SetNotchTarget(arg1);
		}
		public double NotchTarget() {
			return ProxyQDial().NotchTarget();
		}
		public bool NotchesVisible() {
			return ProxyQDial().NotchesVisible();
		}
		public new QSize SizeHint() {
			return ProxyQDial().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQDial().MinimumSizeHint();
		}
		public int MinValue() {
			return ProxyQDial().MinValue();
		}
		public int MaxValue() {
			return ProxyQDial().MaxValue();
		}
		public void SetMinValue(int arg1) {
			ProxyQDial().SetMinValue(arg1);
		}
		public void SetMaxValue(int arg1) {
			ProxyQDial().SetMaxValue(arg1);
		}
		public int LineStep() {
			return ProxyQDial().LineStep();
		}
		public int PageStep() {
			return ProxyQDial().PageStep();
		}
		public void SetLineStep(int arg1) {
			ProxyQDial().SetLineStep(arg1);
		}
		public void SetPageStep(int arg1) {
			ProxyQDial().SetPageStep(arg1);
		}
		public int Value() {
			return ProxyQDial().Value();
		}
		public virtual void SetValue(int arg1) {
			ProxyQDial().SetValue(arg1);
		}
		public void AddLine() {
			ProxyQDial().AddLine();
		}
		public void SubtractLine() {
			ProxyQDial().SubtractLine();
		}
		public void AddPage() {
			ProxyQDial().AddPage();
		}
		public void SubtractPage() {
			ProxyQDial().SubtractPage();
		}
		public virtual void SetNotchesVisible(bool b) {
			ProxyQDial().SetNotchesVisible(b);
		}
		public virtual void SetWrapping(bool on) {
			ProxyQDial().SetWrapping(on);
		}
		public virtual void SetTracking(bool enable) {
			ProxyQDial().SetTracking(enable);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQDial().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQDial().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQDial().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQDial().TrUtf8(arg1);
		}
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQDial().ResizeEvent(arg1);
		}
		protected new void PaintEvent(QPaintEvent arg1) {
			ProxyQDial().PaintEvent(arg1);
		}
		protected new void KeyPressEvent(QKeyEvent arg1) {
			ProxyQDial().KeyPressEvent(arg1);
		}
		protected new void MousePressEvent(QMouseEvent arg1) {
			ProxyQDial().MousePressEvent(arg1);
		}
		protected new void MouseReleaseEvent(QMouseEvent arg1) {
			ProxyQDial().MouseReleaseEvent(arg1);
		}
		protected new void MouseMoveEvent(QMouseEvent arg1) {
			ProxyQDial().MouseMoveEvent(arg1);
		}
		protected new void WheelEvent(QWheelEvent arg1) {
			ProxyQDial().WheelEvent(arg1);
		}
		protected new void FocusInEvent(QFocusEvent arg1) {
			ProxyQDial().FocusInEvent(arg1);
		}
		protected new void FocusOutEvent(QFocusEvent arg1) {
			ProxyQDial().FocusOutEvent(arg1);
		}
		protected void ValueChange() {
			ProxyQDial().ValueChange();
		}
		protected void RangeChange() {
			ProxyQDial().RangeChange();
		}
		protected virtual void RepaintScreen(QRect cr) {
			ProxyQDial().RepaintScreen(cr);
		}
		protected virtual void RepaintScreen() {
			ProxyQDial().RepaintScreen();
		}
		~QDial() {
			ProxyQDial().Dispose();
		}
		public new void Dispose() {
			ProxyQDial().Dispose();
		}
		public void SetRange(int minValue, int maxValue) {
			ProxyQDial().SetRange(minValue,maxValue);
		}
		public void SetSteps(int line, int page) {
			ProxyQDial().SetSteps(line,page);
		}
		public int Bound(int arg1) {
			return ProxyQDial().Bound(arg1);
		}
		protected int PositionFromValue(int val, int space) {
			return ProxyQDial().PositionFromValue(val,space);
		}
		protected int ValueFromPosition(int pos, int space) {
			return ProxyQDial().ValueFromPosition(pos,space);
		}
		protected void DirectSetValue(int val) {
			ProxyQDial().DirectSetValue(val);
		}
		protected int PrevValue() {
			return ProxyQDial().PrevValue();
		}
		protected virtual void StepChange() {
			ProxyQDial().StepChange();
		}
	}

	public interface IQDialSignals {
		void ValueChanged(int value);
		void DialPressed();
		void DialMoved(int value);
		void DialReleased();
	}
}
