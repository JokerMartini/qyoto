//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QSimpleRichText : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QSimpleRichText(Type dummy) {}
		interface IQSimpleRichTextProxy {
		}

		protected void CreateQSimpleRichTextProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QSimpleRichText), this);
			_interceptor = (QSimpleRichText) realProxy.GetTransparentProxy();
		}
		private QSimpleRichText ProxyQSimpleRichText() {
			return (QSimpleRichText) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QSimpleRichText() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQSimpleRichTextProxy), null);
			_staticInterceptor = (IQSimpleRichTextProxy) realProxy.GetTransparentProxy();
		}
		private static IQSimpleRichTextProxy StaticQSimpleRichText() {
			return (IQSimpleRichTextProxy) _staticInterceptor;
		}

		public QSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet) : this((Type) null) {
			CreateQSimpleRichTextProxy();
			NewQSimpleRichText(text,fnt,context,sheet);
		}
		private void NewQSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet) {
			ProxyQSimpleRichText().NewQSimpleRichText(text,fnt,context,sheet);
		}
		public QSimpleRichText(string text, QFont fnt, string context) : this((Type) null) {
			CreateQSimpleRichTextProxy();
			NewQSimpleRichText(text,fnt,context);
		}
		private void NewQSimpleRichText(string text, QFont fnt, string context) {
			ProxyQSimpleRichText().NewQSimpleRichText(text,fnt,context);
		}
		public QSimpleRichText(string text, QFont fnt) : this((Type) null) {
			CreateQSimpleRichTextProxy();
			NewQSimpleRichText(text,fnt);
		}
		private void NewQSimpleRichText(string text, QFont fnt) {
			ProxyQSimpleRichText().NewQSimpleRichText(text,fnt);
		}
		public QSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory, int pageBreak, QColor linkColor, bool linkUnderline) : this((Type) null) {
			CreateQSimpleRichTextProxy();
			NewQSimpleRichText(text,fnt,context,sheet,factory,pageBreak,linkColor,linkUnderline);
		}
		private void NewQSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory, int pageBreak, QColor linkColor, bool linkUnderline) {
			ProxyQSimpleRichText().NewQSimpleRichText(text,fnt,context,sheet,factory,pageBreak,linkColor,linkUnderline);
		}
		public QSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory, int pageBreak, QColor linkColor) : this((Type) null) {
			CreateQSimpleRichTextProxy();
			NewQSimpleRichText(text,fnt,context,sheet,factory,pageBreak,linkColor);
		}
		private void NewQSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory, int pageBreak, QColor linkColor) {
			ProxyQSimpleRichText().NewQSimpleRichText(text,fnt,context,sheet,factory,pageBreak,linkColor);
		}
		public QSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory, int pageBreak) : this((Type) null) {
			CreateQSimpleRichTextProxy();
			NewQSimpleRichText(text,fnt,context,sheet,factory,pageBreak);
		}
		private void NewQSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory, int pageBreak) {
			ProxyQSimpleRichText().NewQSimpleRichText(text,fnt,context,sheet,factory,pageBreak);
		}
		public QSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory) : this((Type) null) {
			CreateQSimpleRichTextProxy();
			NewQSimpleRichText(text,fnt,context,sheet,factory);
		}
		private void NewQSimpleRichText(string text, QFont fnt, string context, QStyleSheet sheet, QMimeSourceFactory factory) {
			ProxyQSimpleRichText().NewQSimpleRichText(text,fnt,context,sheet,factory);
		}
		public void SetWidth(int arg1) {
			ProxyQSimpleRichText().SetWidth(arg1);
		}
		public void SetWidth(QPainter arg1, int arg2) {
			ProxyQSimpleRichText().SetWidth(arg1,arg2);
		}
		public void SetDefaultFont(QFont f) {
			ProxyQSimpleRichText().SetDefaultFont(f);
		}
		public int Width() {
			return ProxyQSimpleRichText().Width();
		}
		public int WidthUsed() {
			return ProxyQSimpleRichText().WidthUsed();
		}
		public int Height() {
			return ProxyQSimpleRichText().Height();
		}
		public void AdjustSize() {
			ProxyQSimpleRichText().AdjustSize();
		}
		public void Draw(QPainter p, int x, int y, QRect clipRect, QColorGroup cg, QBrush paper) {
			ProxyQSimpleRichText().Draw(p,x,y,clipRect,cg,paper);
		}
		public void Draw(QPainter p, int x, int y, QRect clipRect, QColorGroup cg) {
			ProxyQSimpleRichText().Draw(p,x,y,clipRect,cg);
		}
		public void Draw(QPainter p, int x, int y, QRegion clipRegion, QColorGroup cg, QBrush paper) {
			ProxyQSimpleRichText().Draw(p,x,y,clipRegion,cg,paper);
		}
		public void Draw(QPainter p, int x, int y, QRegion clipRegion, QColorGroup cg) {
			ProxyQSimpleRichText().Draw(p,x,y,clipRegion,cg);
		}
		public string Context() {
			return ProxyQSimpleRichText().Context();
		}
		public string AnchorAt(QPoint pos) {
			return ProxyQSimpleRichText().AnchorAt(pos);
		}
		public bool InText(QPoint pos) {
			return ProxyQSimpleRichText().InText(pos);
		}
		~QSimpleRichText() {
			ProxyQSimpleRichText().Dispose();
		}
		public void Dispose() {
			ProxyQSimpleRichText().Dispose();
		}
	}
}
