//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QUtf16Codec : QTextCodec, IDisposable {
 		protected QUtf16Codec(Type dummy) : base((Type) null) {}
		interface IQUtf16CodecProxy {
		}

		protected void CreateQUtf16CodecProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QUtf16Codec), this);
			_interceptor = (QUtf16Codec) realProxy.GetTransparentProxy();
		}
		private QUtf16Codec ProxyQUtf16Codec() {
			return (QUtf16Codec) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QUtf16Codec() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQUtf16CodecProxy), null);
			_staticInterceptor = (IQUtf16CodecProxy) realProxy.GetTransparentProxy();
		}
		private static IQUtf16CodecProxy StaticQUtf16Codec() {
			return (IQUtf16CodecProxy) _staticInterceptor;
		}

		public new virtual int MibEnum() {
			return ProxyQUtf16Codec().MibEnum();
		}
		public new string Name() {
			return ProxyQUtf16Codec().Name();
		}
		public new QTextDecoder MakeDecoder() {
			return ProxyQUtf16Codec().MakeDecoder();
		}
		public new QTextEncoder MakeEncoder() {
			return ProxyQUtf16Codec().MakeEncoder();
		}
		public new int HeuristicContentMatch(string chars, int len) {
			return ProxyQUtf16Codec().HeuristicContentMatch(chars,len);
		}
		public QUtf16Codec() : this((Type) null) {
			CreateQUtf16CodecProxy();
			NewQUtf16Codec();
		}
		private void NewQUtf16Codec() {
			ProxyQUtf16Codec().NewQUtf16Codec();
		}
		~QUtf16Codec() {
			ProxyQUtf16Codec().Dispose();
		}
		public new void Dispose() {
			ProxyQUtf16Codec().Dispose();
		}
	}
}
