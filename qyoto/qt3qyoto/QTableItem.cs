//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QTableItem : Qt, IDisposable {
 		protected QTableItem(Type dummy) : base((Type) null) {}
		interface IQTableItemProxy {
		}

		protected void CreateQTableItemProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTableItem), this);
			_interceptor = (QTableItem) realProxy.GetTransparentProxy();
		}
		private QTableItem ProxyQTableItem() {
			return (QTableItem) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTableItem() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTableItemProxy), null);
			_staticInterceptor = (IQTableItemProxy) realProxy.GetTransparentProxy();
		}
		private static IQTableItemProxy StaticQTableItem() {
			return (IQTableItemProxy) _staticInterceptor;
		}

		enum E_EditType {
			Never = 0,
			OnTyping = 1,
			WhenCurrent = 2,
			Always = 3,
		}
		public QTableItem(QTable table, int et) : this((Type) null) {
			CreateQTableItemProxy();
			NewQTableItem(table,et);
		}
		private void NewQTableItem(QTable table, int et) {
			ProxyQTableItem().NewQTableItem(table,et);
		}
		public QTableItem(QTable table, int et, string text) : this((Type) null) {
			CreateQTableItemProxy();
			NewQTableItem(table,et,text);
		}
		private void NewQTableItem(QTable table, int et, string text) {
			ProxyQTableItem().NewQTableItem(table,et,text);
		}
		public QTableItem(QTable table, int et, string text, QPixmap p) : this((Type) null) {
			CreateQTableItemProxy();
			NewQTableItem(table,et,text,p);
		}
		private void NewQTableItem(QTable table, int et, string text, QPixmap p) {
			ProxyQTableItem().NewQTableItem(table,et,text,p);
		}
		public virtual QPixmap Pixmap() {
			return ProxyQTableItem().Pixmap();
		}
		public virtual string Text() {
			return ProxyQTableItem().Text();
		}
		public virtual void SetPixmap(QPixmap p) {
			ProxyQTableItem().SetPixmap(p);
		}
		public virtual void SetText(string t) {
			ProxyQTableItem().SetText(t);
		}
		public QTable Table() {
			return ProxyQTableItem().Table();
		}
		public virtual int Alignment() {
			return ProxyQTableItem().Alignment();
		}
		public virtual void SetWordWrap(bool b) {
			ProxyQTableItem().SetWordWrap(b);
		}
		public bool WordWrap() {
			return ProxyQTableItem().WordWrap();
		}
		public int EditType() {
			return ProxyQTableItem().EditType();
		}
		public virtual QWidget CreateEditor() {
			return ProxyQTableItem().CreateEditor();
		}
		public virtual void SetContentFromEditor(QWidget w) {
			ProxyQTableItem().SetContentFromEditor(w);
		}
		public virtual void SetReplaceable(bool arg1) {
			ProxyQTableItem().SetReplaceable(arg1);
		}
		public bool IsReplaceable() {
			return ProxyQTableItem().IsReplaceable();
		}
		public virtual string Key() {
			return ProxyQTableItem().Key();
		}
		public virtual QSize SizeHint() {
			return ProxyQTableItem().SizeHint();
		}
		public virtual void SetSpan(int rs, int cs) {
			ProxyQTableItem().SetSpan(rs,cs);
		}
		public int RowSpan() {
			return ProxyQTableItem().RowSpan();
		}
		public int ColSpan() {
			return ProxyQTableItem().ColSpan();
		}
		public virtual void SetRow(int r) {
			ProxyQTableItem().SetRow(r);
		}
		public virtual void SetCol(int c) {
			ProxyQTableItem().SetCol(c);
		}
		public int Row() {
			return ProxyQTableItem().Row();
		}
		public int Col() {
			return ProxyQTableItem().Col();
		}
		public virtual void Paint(QPainter p, QColorGroup cg, QRect cr, bool selected) {
			ProxyQTableItem().Paint(p,cg,cr,selected);
		}
		public void UpdateEditor(int oldRow, int oldCol) {
			ProxyQTableItem().UpdateEditor(oldRow,oldCol);
		}
		public virtual void SetEnabled(bool b) {
			ProxyQTableItem().SetEnabled(b);
		}
		public bool IsEnabled() {
			return ProxyQTableItem().IsEnabled();
		}
		public virtual int Rtti() {
			return ProxyQTableItem().Rtti();
		}
		~QTableItem() {
			ProxyQTableItem().Dispose();
		}
		public void Dispose() {
			ProxyQTableItem().Dispose();
		}
	}
}
