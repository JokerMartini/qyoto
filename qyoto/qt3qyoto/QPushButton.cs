//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QPushButton : QButton, IDisposable {
 		protected QPushButton(Type dummy) : base((Type) null) {}
		interface IQPushButtonProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQPushButtonProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QPushButton), this);
			_interceptor = (QPushButton) realProxy.GetTransparentProxy();
		}
		private QPushButton ProxyQPushButton() {
			return (QPushButton) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QPushButton() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQPushButtonProxy), null);
			_staticInterceptor = (IQPushButtonProxy) realProxy.GetTransparentProxy();
		}
		private static IQPushButtonProxy StaticQPushButton() {
			return (IQPushButtonProxy) _staticInterceptor;
		}

		[SmokeMethod("metaObject() const")]
		public new virtual QMetaObject MetaObject() {
			return ProxyQPushButton().MetaObject();
		}
		[SmokeMethod("className() const")]
		public new virtual string ClassName() {
			return ProxyQPushButton().ClassName();
		}
		public QPushButton(QWidget parent, string name) : this((Type) null) {
			CreateQPushButtonProxy();
			CreateQPushButtonSignalProxy();
			NewQPushButton(parent,name);
		}
		[SmokeMethod("QPushButton(QWidget*, const char*)")]
		private void NewQPushButton(QWidget parent, string name) {
			ProxyQPushButton().NewQPushButton(parent,name);
		}
		public QPushButton(QWidget parent) : this((Type) null) {
			CreateQPushButtonProxy();
			CreateQPushButtonSignalProxy();
			NewQPushButton(parent);
		}
		[SmokeMethod("QPushButton(QWidget*)")]
		private void NewQPushButton(QWidget parent) {
			ProxyQPushButton().NewQPushButton(parent);
		}
		public QPushButton(string text, QWidget parent, string name) : this((Type) null) {
			CreateQPushButtonProxy();
			CreateQPushButtonSignalProxy();
			NewQPushButton(text,parent,name);
		}
		[SmokeMethod("QPushButton(const QString&, QWidget*, const char*)")]
		private void NewQPushButton(string text, QWidget parent, string name) {
			ProxyQPushButton().NewQPushButton(text,parent,name);
		}
		public QPushButton(string text, QWidget parent) : this((Type) null) {
			CreateQPushButtonProxy();
			CreateQPushButtonSignalProxy();
			NewQPushButton(text,parent);
		}
		[SmokeMethod("QPushButton(const QString&, QWidget*)")]
		private void NewQPushButton(string text, QWidget parent) {
			ProxyQPushButton().NewQPushButton(text,parent);
		}
		public QPushButton(QIconSet icon, string text, QWidget parent, string name) : this((Type) null) {
			CreateQPushButtonProxy();
			CreateQPushButtonSignalProxy();
			NewQPushButton(icon,text,parent,name);
		}
		[SmokeMethod("QPushButton(const QIconSet&, const QString&, QWidget*, const char*)")]
		private void NewQPushButton(QIconSet icon, string text, QWidget parent, string name) {
			ProxyQPushButton().NewQPushButton(icon,text,parent,name);
		}
		public QPushButton(QIconSet icon, string text, QWidget parent) : this((Type) null) {
			CreateQPushButtonProxy();
			CreateQPushButtonSignalProxy();
			NewQPushButton(icon,text,parent);
		}
		[SmokeMethod("QPushButton(const QIconSet&, const QString&, QWidget*)")]
		private void NewQPushButton(QIconSet icon, string text, QWidget parent) {
			ProxyQPushButton().NewQPushButton(icon,text,parent);
		}
		[SmokeMethod("sizeHint() const")]
		public new QSize SizeHint() {
			return ProxyQPushButton().SizeHint();
		}
		[SmokeMethod("move(int, int)")]
		public new void Move(int x, int y) {
			ProxyQPushButton().Move(x,y);
		}
		[SmokeMethod("move(const QPoint&)")]
		public new void Move(QPoint p) {
			ProxyQPushButton().Move(p);
		}
		[SmokeMethod("resize(int, int)")]
		public new void Resize(int w, int h) {
			ProxyQPushButton().Resize(w,h);
		}
		[SmokeMethod("resize(const QSize&)")]
		public new void Resize(QSize arg1) {
			ProxyQPushButton().Resize(arg1);
		}
		[SmokeMethod("setGeometry(int, int, int, int)")]
		public new void SetGeometry(int x, int y, int w, int h) {
			ProxyQPushButton().SetGeometry(x,y,w,h);
		}
		[SmokeMethod("setGeometry(const QRect&)")]
		public new void SetGeometry(QRect arg1) {
			ProxyQPushButton().SetGeometry(arg1);
		}
		[SmokeMethod("setToggleButton(bool)")]
		public new void SetToggleButton(bool arg1) {
			ProxyQPushButton().SetToggleButton(arg1);
		}
		[SmokeMethod("autoDefault() const")]
		public bool AutoDefault() {
			return ProxyQPushButton().AutoDefault();
		}
		[SmokeMethod("setAutoDefault(bool)")]
		public virtual void SetAutoDefault(bool autoDef) {
			ProxyQPushButton().SetAutoDefault(autoDef);
		}
		[SmokeMethod("isDefault() const")]
		public bool IsDefault() {
			return ProxyQPushButton().IsDefault();
		}
		[SmokeMethod("setDefault(bool)")]
		public virtual void SetDefault(bool def) {
			ProxyQPushButton().SetDefault(def);
		}
		[SmokeMethod("setIsMenuButton(bool)")]
		public virtual void SetIsMenuButton(bool enable) {
			ProxyQPushButton().SetIsMenuButton(enable);
		}
		[SmokeMethod("isMenuButton() const")]
		public bool IsMenuButton() {
			return ProxyQPushButton().IsMenuButton();
		}
		[SmokeMethod("setPopup(QPopupMenu*)")]
		public void SetPopup(QPopupMenu popup) {
			ProxyQPushButton().SetPopup(popup);
		}
		[SmokeMethod("popup() const")]
		public QPopupMenu Popup() {
			return ProxyQPushButton().Popup();
		}
		[SmokeMethod("setIconSet(const QIconSet&)")]
		public void SetIconSet(QIconSet arg1) {
			ProxyQPushButton().SetIconSet(arg1);
		}
		[SmokeMethod("iconSet() const")]
		public QIconSet IconSet() {
			return ProxyQPushButton().IconSet();
		}
		[SmokeMethod("setFlat(bool)")]
		public void SetFlat(bool arg1) {
			ProxyQPushButton().SetFlat(arg1);
		}
		[SmokeMethod("isFlat() const")]
		public bool IsFlat() {
			return ProxyQPushButton().IsFlat();
		}
		[Q_SLOT("setOn(bool)")]
		[SmokeMethod("setOn(bool)")]
		public new virtual void SetOn(bool arg1) {
			ProxyQPushButton().SetOn(arg1);
		}
		[SmokeMethod("tr(const char*, const char*)")]
		public static new string Tr(string arg1, string arg2) {
			return StaticQPushButton().Tr(arg1,arg2);
		}
		[SmokeMethod("tr(const char*)")]
		public static new string Tr(string arg1) {
			return StaticQPushButton().Tr(arg1);
		}
		[SmokeMethod("trUtf8(const char*, const char*)")]
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQPushButton().TrUtf8(arg1,arg2);
		}
		[SmokeMethod("trUtf8(const char*)")]
		public static new string TrUtf8(string arg1) {
			return StaticQPushButton().TrUtf8(arg1);
		}
		[SmokeMethod("drawButton(QPainter*)")]
		protected new void DrawButton(QPainter arg1) {
			ProxyQPushButton().DrawButton(arg1);
		}
		[SmokeMethod("drawButtonLabel(QPainter*)")]
		protected new void DrawButtonLabel(QPainter arg1) {
			ProxyQPushButton().DrawButtonLabel(arg1);
		}
		[SmokeMethod("focusInEvent(QFocusEvent*)")]
		protected new void FocusInEvent(QFocusEvent arg1) {
			ProxyQPushButton().FocusInEvent(arg1);
		}
		[SmokeMethod("focusOutEvent(QFocusEvent*)")]
		protected new void FocusOutEvent(QFocusEvent arg1) {
			ProxyQPushButton().FocusOutEvent(arg1);
		}
		[SmokeMethod("resizeEvent(QResizeEvent*)")]
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQPushButton().ResizeEvent(arg1);
		}
		[SmokeMethod("updateMask()")]
		protected new void UpdateMask() {
			ProxyQPushButton().UpdateMask();
		}
		~QPushButton() {
			DisposeQPushButton();
		}
		public new void Dispose() {
			DisposeQPushButton();
		}
		private void DisposeQPushButton() {
			ProxyQPushButton().DisposeQPushButton();
		}
		protected void CreateQPushButtonSignalProxy() {
			SignalInvocation realProxy = new SignalInvocation(typeof(IQPushButtonSignals), this);
			_signalInterceptor = (IQPushButtonSignals) realProxy.GetTransparentProxy();
		}
		protected new IQPushButtonSignals Emit() {
			return (IQPushButtonSignals) _signalInterceptor;
		}
	}

	public interface IQPushButtonSignals : IQButtonSignals {
	}
}
