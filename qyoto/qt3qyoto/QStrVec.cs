//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QStrVec : IDisposable {
		protected Object _interceptor = null;
 		protected QStrVec(Type dummy) : base() {}
		interface IQStrVecProxy {
		}

		protected void CreateQStrVecProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStrVec), this);
			_interceptor = (QStrVec) realProxy.GetTransparentProxy();
		}
		private QStrVec ProxyQStrVec() {
			return (QStrVec) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStrVec() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStrVecProxy), null);
			_staticInterceptor = (IQStrVecProxy) realProxy.GetTransparentProxy();
		}
		private static IQStrVecProxy StaticQStrVec() {
			return (IQStrVecProxy) _staticInterceptor;
		}

		public QStrVec() : this((Type) null) {
			CreateQStrVecProxy();
			NewQStrVec();
		}
		private void NewQStrVec() {
			ProxyQStrVec().NewQStrVec();
		}
		public QStrVec(uint size, bool deepc) : this((Type) null) {
			CreateQStrVecProxy();
			NewQStrVec(size,deepc);
		}
		private void NewQStrVec(uint size, bool deepc) {
			ProxyQStrVec().NewQStrVec(size,deepc);
		}
		public QStrVec(uint size) : this((Type) null) {
			CreateQStrVecProxy();
			NewQStrVec(size);
		}
		private void NewQStrVec(uint size) {
			ProxyQStrVec().NewQStrVec(size);
		}
		~QStrVec() {
			ProxyQStrVec().Dispose();
		}
		public void Dispose() {
			ProxyQStrVec().Dispose();
		}
	}
}
