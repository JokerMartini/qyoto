//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QMenuItem : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QMenuItem(Type dummy) {}
		interface IQMenuItemProxy {
		}

		protected void CreateQMenuItemProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QMenuItem), this);
			_interceptor = (QMenuItem) realProxy.GetTransparentProxy();
		}
		private QMenuItem ProxyQMenuItem() {
			return (QMenuItem) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QMenuItem() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQMenuItemProxy), null);
			_staticInterceptor = (IQMenuItemProxy) realProxy.GetTransparentProxy();
		}
		private static IQMenuItemProxy StaticQMenuItem() {
			return (IQMenuItemProxy) _staticInterceptor;
		}

		public QMenuItem() : this((Type) null) {
			CreateQMenuItemProxy();
			NewQMenuItem();
		}
		private void NewQMenuItem() {
			ProxyQMenuItem().NewQMenuItem();
		}
		public int Id() {
			return ProxyQMenuItem().Id();
		}
		public QIconSet IconSet() {
			return ProxyQMenuItem().IconSet();
		}
		public string Text() {
			return ProxyQMenuItem().Text();
		}
		public string WhatsThis() {
			return ProxyQMenuItem().WhatsThis();
		}
		public QPixmap Pixmap() {
			return ProxyQMenuItem().Pixmap();
		}
		public QPopupMenu Popup() {
			return ProxyQMenuItem().Popup();
		}
		public QWidget Widget() {
			return ProxyQMenuItem().Widget();
		}
		public QCustomMenuItem Custom() {
			return ProxyQMenuItem().Custom();
		}
		public QKeySequence Key() {
			return ProxyQMenuItem().Key();
		}
		public QSignal Signal() {
			return ProxyQMenuItem().Signal();
		}
		public bool IsSeparator() {
			return ProxyQMenuItem().IsSeparator();
		}
		public bool IsEnabled() {
			return ProxyQMenuItem().IsEnabled();
		}
		public bool IsChecked() {
			return ProxyQMenuItem().IsChecked();
		}
		public bool IsDirty() {
			return ProxyQMenuItem().IsDirty();
		}
		public bool IsVisible() {
			return ProxyQMenuItem().IsVisible();
		}
		public bool IsEnabledAndVisible() {
			return ProxyQMenuItem().IsEnabledAndVisible();
		}
		public void SetText(string text) {
			ProxyQMenuItem().SetText(text);
		}
		public void SetDirty(bool dirty) {
			ProxyQMenuItem().SetDirty(dirty);
		}
		public void SetVisible(bool visible) {
			ProxyQMenuItem().SetVisible(visible);
		}
		public void SetWhatsThis(string text) {
			ProxyQMenuItem().SetWhatsThis(text);
		}
		~QMenuItem() {
			ProxyQMenuItem().Dispose();
		}
		public void Dispose() {
			ProxyQMenuItem().Dispose();
		}
	}
}
