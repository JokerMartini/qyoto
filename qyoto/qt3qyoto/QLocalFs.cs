//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QLocalFs : QNetworkProtocol, IDisposable {
 		protected QLocalFs(Type dummy) : base((Type) null) {}
		interface IQLocalFsProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQLocalFsProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QLocalFs), this);
			_interceptor = (QLocalFs) realProxy.GetTransparentProxy();
		}
		private QLocalFs ProxyQLocalFs() {
			return (QLocalFs) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QLocalFs() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQLocalFsProxy), null);
			_staticInterceptor = (IQLocalFsProxy) realProxy.GetTransparentProxy();
		}
		private static IQLocalFsProxy StaticQLocalFs() {
			return (IQLocalFsProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQLocalFs().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQLocalFs().ClassName();
		}
		public QLocalFs() : this((Type) null) {
			CreateQLocalFsProxy();
			NewQLocalFs();
		}
		private void NewQLocalFs() {
			ProxyQLocalFs().NewQLocalFs();
		}
		public new virtual int SupportedOperations() {
			return ProxyQLocalFs().SupportedOperations();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQLocalFs().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQLocalFs().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQLocalFs().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQLocalFs().TrUtf8(arg1);
		}
		protected new virtual void OperationListChildren(QNetworkOperation op) {
			ProxyQLocalFs().OperationListChildren(op);
		}
		protected new virtual void OperationMkDir(QNetworkOperation op) {
			ProxyQLocalFs().OperationMkDir(op);
		}
		protected new virtual void OperationRemove(QNetworkOperation op) {
			ProxyQLocalFs().OperationRemove(op);
		}
		protected new virtual void OperationRename(QNetworkOperation op) {
			ProxyQLocalFs().OperationRename(op);
		}
		protected new virtual void OperationGet(QNetworkOperation op) {
			ProxyQLocalFs().OperationGet(op);
		}
		protected new virtual void OperationPut(QNetworkOperation op) {
			ProxyQLocalFs().OperationPut(op);
		}
		~QLocalFs() {
			ProxyQLocalFs().Dispose();
		}
		public new void Dispose() {
			ProxyQLocalFs().Dispose();
		}
	}
}
