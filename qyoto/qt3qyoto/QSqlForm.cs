//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QSqlForm : QObject, IDisposable {
 		protected QSqlForm(Type dummy) : base((Type) null) {}
		interface IQSqlFormProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQSqlFormProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QSqlForm), this);
			_interceptor = (QSqlForm) realProxy.GetTransparentProxy();
		}
		private QSqlForm ProxyQSqlForm() {
			return (QSqlForm) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QSqlForm() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQSqlFormProxy), null);
			_staticInterceptor = (IQSqlFormProxy) realProxy.GetTransparentProxy();
		}
		private static IQSqlFormProxy StaticQSqlForm() {
			return (IQSqlFormProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQSqlForm().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQSqlForm().ClassName();
		}
		public QSqlForm(QObject parent, string name) : this((Type) null) {
			CreateQSqlFormProxy();
			NewQSqlForm(parent,name);
		}
		private void NewQSqlForm(QObject parent, string name) {
			ProxyQSqlForm().NewQSqlForm(parent,name);
		}
		public QSqlForm(QObject parent) : this((Type) null) {
			CreateQSqlFormProxy();
			NewQSqlForm(parent);
		}
		private void NewQSqlForm(QObject parent) {
			ProxyQSqlForm().NewQSqlForm(parent);
		}
		public QSqlForm() : this((Type) null) {
			CreateQSqlFormProxy();
			NewQSqlForm();
		}
		private void NewQSqlForm() {
			ProxyQSqlForm().NewQSqlForm();
		}
		public virtual void Insert(QWidget widget, string field) {
			ProxyQSqlForm().Insert(widget,field);
		}
		public virtual void Remove(string field) {
			ProxyQSqlForm().Remove(field);
		}
		public uint Count() {
			return ProxyQSqlForm().Count();
		}
		public QWidget Widget(uint i) {
			return ProxyQSqlForm().Widget(i);
		}
		public QSqlField WidgetToField(QWidget widget) {
			return ProxyQSqlForm().WidgetToField(widget);
		}
		public QWidget FieldToWidget(QSqlField field) {
			return ProxyQSqlForm().FieldToWidget(field);
		}
		public void InstallPropertyMap(QSqlPropertyMap map) {
			ProxyQSqlForm().InstallPropertyMap(map);
		}
		public virtual void SetRecord(QSqlRecord buf) {
			ProxyQSqlForm().SetRecord(buf);
		}
		public virtual void ReadField(QWidget widget) {
			ProxyQSqlForm().ReadField(widget);
		}
		public virtual void WriteField(QWidget widget) {
			ProxyQSqlForm().WriteField(widget);
		}
		public virtual void ReadFields() {
			ProxyQSqlForm().ReadFields();
		}
		public virtual void WriteFields() {
			ProxyQSqlForm().WriteFields();
		}
		public virtual void Clear() {
			ProxyQSqlForm().Clear();
		}
		public virtual void ClearValues(bool nullify) {
			ProxyQSqlForm().ClearValues(nullify);
		}
		public virtual void ClearValues() {
			ProxyQSqlForm().ClearValues();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQSqlForm().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQSqlForm().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQSqlForm().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQSqlForm().TrUtf8(arg1);
		}
		protected virtual void Insert(QWidget widget, QSqlField field) {
			ProxyQSqlForm().Insert(widget,field);
		}
		protected virtual void Remove(QWidget widget) {
			ProxyQSqlForm().Remove(widget);
		}
		protected void ClearMap() {
			ProxyQSqlForm().ClearMap();
		}
		~QSqlForm() {
			ProxyQSqlForm().Dispose();
		}
		public new void Dispose() {
			ProxyQSqlForm().Dispose();
		}
	}
}
