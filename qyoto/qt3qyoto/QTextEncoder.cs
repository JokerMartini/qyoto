//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QTextEncoder : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QTextEncoder(Type dummy) {}
		interface IQTextEncoderProxy {
		}

		protected void CreateQTextEncoderProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextEncoder), this);
			_interceptor = (QTextEncoder) realProxy.GetTransparentProxy();
		}
		private QTextEncoder ProxyQTextEncoder() {
			return (QTextEncoder) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTextEncoder() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTextEncoderProxy), null);
			_staticInterceptor = (IQTextEncoderProxy) realProxy.GetTransparentProxy();
		}
		private static IQTextEncoderProxy StaticQTextEncoder() {
			return (IQTextEncoderProxy) _staticInterceptor;
		}

		[SmokeMethod("fromUnicode(const QString&, int&)")]
		public virtual string FromUnicode(string uc, out int lenInOut) {
			return ProxyQTextEncoder().FromUnicode(uc,out lenInOut);
		}
	}
}
