//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QColorDrag : QStoredDrag, IDisposable {
 		protected QColorDrag(Type dummy) : base((Type) null) {}
		interface IQColorDragProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
			bool CanDecode(IQMimeSource arg1);
			bool Decode(IQMimeSource arg1, QColor col);
		}

		protected void CreateQColorDragProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QColorDrag), this);
			_interceptor = (QColorDrag) realProxy.GetTransparentProxy();
		}
		private QColorDrag ProxyQColorDrag() {
			return (QColorDrag) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QColorDrag() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQColorDragProxy), null);
			_staticInterceptor = (IQColorDragProxy) realProxy.GetTransparentProxy();
		}
		private static IQColorDragProxy StaticQColorDrag() {
			return (IQColorDragProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQColorDrag().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQColorDrag().ClassName();
		}
		public QColorDrag(QColor col, QWidget dragsource, string name) : this((Type) null) {
			CreateQColorDragProxy();
			NewQColorDrag(col,dragsource,name);
		}
		private void NewQColorDrag(QColor col, QWidget dragsource, string name) {
			ProxyQColorDrag().NewQColorDrag(col,dragsource,name);
		}
		public QColorDrag(QColor col, QWidget dragsource) : this((Type) null) {
			CreateQColorDragProxy();
			NewQColorDrag(col,dragsource);
		}
		private void NewQColorDrag(QColor col, QWidget dragsource) {
			ProxyQColorDrag().NewQColorDrag(col,dragsource);
		}
		public QColorDrag(QColor col) : this((Type) null) {
			CreateQColorDragProxy();
			NewQColorDrag(col);
		}
		private void NewQColorDrag(QColor col) {
			ProxyQColorDrag().NewQColorDrag(col);
		}
		public QColorDrag(QWidget dragSource, string name) : this((Type) null) {
			CreateQColorDragProxy();
			NewQColorDrag(dragSource,name);
		}
		private void NewQColorDrag(QWidget dragSource, string name) {
			ProxyQColorDrag().NewQColorDrag(dragSource,name);
		}
		public QColorDrag(QWidget dragSource) : this((Type) null) {
			CreateQColorDragProxy();
			NewQColorDrag(dragSource);
		}
		private void NewQColorDrag(QWidget dragSource) {
			ProxyQColorDrag().NewQColorDrag(dragSource);
		}
		public QColorDrag() : this((Type) null) {
			CreateQColorDragProxy();
			NewQColorDrag();
		}
		private void NewQColorDrag() {
			ProxyQColorDrag().NewQColorDrag();
		}
		public void SetColor(QColor col) {
			ProxyQColorDrag().SetColor(col);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQColorDrag().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQColorDrag().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQColorDrag().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQColorDrag().TrUtf8(arg1);
		}
		public static bool CanDecode(IQMimeSource arg1) {
			return StaticQColorDrag().CanDecode(arg1);
		}
		public static bool Decode(IQMimeSource arg1, QColor col) {
			return StaticQColorDrag().Decode(arg1,col);
		}
		~QColorDrag() {
			ProxyQColorDrag().Dispose();
		}
		public new void Dispose() {
			ProxyQColorDrag().Dispose();
		}
	}
}
