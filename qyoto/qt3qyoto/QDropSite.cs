//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	[SmokeClass("QDropSite")]
	public class QDropSite : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QDropSite(Type dummy) {}
		interface IQDropSiteProxy {
		}

		protected void CreateQDropSiteProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDropSite), this);
			_interceptor = (QDropSite) realProxy.GetTransparentProxy();
		}
		private QDropSite ProxyQDropSite() {
			return (QDropSite) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDropSite() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDropSiteProxy), null);
			_staticInterceptor = (IQDropSiteProxy) realProxy.GetTransparentProxy();
		}
		private static IQDropSiteProxy StaticQDropSite() {
			return (IQDropSiteProxy) _staticInterceptor;
		}

		public QDropSite(QWidget parent) : this((Type) null) {
			CreateQDropSiteProxy();
			NewQDropSite(parent);
		}
		[SmokeMethod("QDropSite(QWidget*)")]
		private void NewQDropSite(QWidget parent) {
			ProxyQDropSite().NewQDropSite(parent);
		}
		~QDropSite() {
			DisposeQDropSite();
		}
		public void Dispose() {
			DisposeQDropSite();
		}
		private void DisposeQDropSite() {
			ProxyQDropSite().DisposeQDropSite();
		}
	}
}
