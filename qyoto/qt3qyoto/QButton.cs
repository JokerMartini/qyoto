//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQButtonSignals"></see> for signals emitted by QButton
	public class QButton : QWidget, IDisposable {
 		protected QButton(Type dummy) : base((Type) null) {}
		interface IQButtonProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQButtonProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QButton), this);
			_interceptor = (QButton) realProxy.GetTransparentProxy();
		}
		private QButton ProxyQButton() {
			return (QButton) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QButton() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQButtonProxy), null);
			_staticInterceptor = (IQButtonProxy) realProxy.GetTransparentProxy();
		}
		private static IQButtonProxy StaticQButton() {
			return (IQButtonProxy) _staticInterceptor;
		}

		enum E_ToggleType {
			SingleShot = 0,
			Toggle = 1,
			Tristate = 2,
		}
		enum ToggleState {
			Off = 0,
			NoChange = 1,
			On = 2,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQButton().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQButton().ClassName();
		}
		public QButton(QWidget parent, string name, int f) : this((Type) null) {
			CreateQButtonProxy();
			NewQButton(parent,name,f);
		}
		private void NewQButton(QWidget parent, string name, int f) {
			ProxyQButton().NewQButton(parent,name,f);
		}
		public QButton(QWidget parent, string name) : this((Type) null) {
			CreateQButtonProxy();
			NewQButton(parent,name);
		}
		private void NewQButton(QWidget parent, string name) {
			ProxyQButton().NewQButton(parent,name);
		}
		public QButton(QWidget parent) : this((Type) null) {
			CreateQButtonProxy();
			NewQButton(parent);
		}
		private void NewQButton(QWidget parent) {
			ProxyQButton().NewQButton(parent);
		}
		public QButton() : this((Type) null) {
			CreateQButtonProxy();
			NewQButton();
		}
		private void NewQButton() {
			ProxyQButton().NewQButton();
		}
		public string Text() {
			return ProxyQButton().Text();
		}
		public virtual void SetText(string arg1) {
			ProxyQButton().SetText(arg1);
		}
		public QPixmap Pixmap() {
			return ProxyQButton().Pixmap();
		}
		public virtual void SetPixmap(QPixmap arg1) {
			ProxyQButton().SetPixmap(arg1);
		}
		public QKeySequence Accel() {
			return ProxyQButton().Accel();
		}
		public virtual void SetAccel(QKeySequence arg1) {
			ProxyQButton().SetAccel(arg1);
		}
		public bool IsToggleButton() {
			return ProxyQButton().IsToggleButton();
		}
		public int ToggleType() {
			return ProxyQButton().ToggleType();
		}
		public virtual void SetDown(bool arg1) {
			ProxyQButton().SetDown(arg1);
		}
		public bool IsDown() {
			return ProxyQButton().IsDown();
		}
		public bool IsOn() {
			return ProxyQButton().IsOn();
		}
		public int State() {
			return ProxyQButton().State();
		}
		public bool AutoResize() {
			return ProxyQButton().AutoResize();
		}
		public void SetAutoResize(bool arg1) {
			ProxyQButton().SetAutoResize(arg1);
		}
		public bool AutoRepeat() {
			return ProxyQButton().AutoRepeat();
		}
		public virtual void SetAutoRepeat(bool arg1) {
			ProxyQButton().SetAutoRepeat(arg1);
		}
		public bool IsExclusiveToggle() {
			return ProxyQButton().IsExclusiveToggle();
		}
		public QButtonGroup Group() {
			return ProxyQButton().Group();
		}
		public void AnimateClick() {
			ProxyQButton().AnimateClick();
		}
		public void Toggle() {
			ProxyQButton().Toggle();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQButton().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQButton().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQButton().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQButton().TrUtf8(arg1);
		}
		protected void SetToggleButton(bool arg1) {
			ProxyQButton().SetToggleButton(arg1);
		}
		protected virtual void SetToggleType(int arg1) {
			ProxyQButton().SetToggleType(arg1);
		}
		protected void SetOn(bool arg1) {
			ProxyQButton().SetOn(arg1);
		}
		public virtual void SetState(int arg1) {
			ProxyQButton().SetState(arg1);
		}
		protected virtual bool HitButton(QPoint pos) {
			return ProxyQButton().HitButton(pos);
		}
		protected virtual void DrawButton(QPainter arg1) {
			ProxyQButton().DrawButton(arg1);
		}
		protected virtual void DrawButtonLabel(QPainter arg1) {
			ProxyQButton().DrawButtonLabel(arg1);
		}
		protected new void KeyPressEvent(QKeyEvent arg1) {
			ProxyQButton().KeyPressEvent(arg1);
		}
		protected new void KeyReleaseEvent(QKeyEvent arg1) {
			ProxyQButton().KeyReleaseEvent(arg1);
		}
		protected new void MousePressEvent(QMouseEvent arg1) {
			ProxyQButton().MousePressEvent(arg1);
		}
		protected new void MouseReleaseEvent(QMouseEvent arg1) {
			ProxyQButton().MouseReleaseEvent(arg1);
		}
		protected new void MouseMoveEvent(QMouseEvent arg1) {
			ProxyQButton().MouseMoveEvent(arg1);
		}
		protected new void PaintEvent(QPaintEvent arg1) {
			ProxyQButton().PaintEvent(arg1);
		}
		protected new void FocusInEvent(QFocusEvent arg1) {
			ProxyQButton().FocusInEvent(arg1);
		}
		protected new void FocusOutEvent(QFocusEvent arg1) {
			ProxyQButton().FocusOutEvent(arg1);
		}
		protected new void EnabledChange(bool arg1) {
			ProxyQButton().EnabledChange(arg1);
		}
		~QButton() {
			ProxyQButton().Dispose();
		}
		public new void Dispose() {
			ProxyQButton().Dispose();
		}
	}

	public interface IQButtonSignals {
		void Pressed();
		void Released();
		void Clicked();
		void Toggled(bool arg1);
		void StateChanged(int arg1);
	}
}
