//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QMetaObjectCleanUp : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QMetaObjectCleanUp(Type dummy) {}
		interface IQMetaObjectCleanUpProxy {
		}

		protected void CreateQMetaObjectCleanUpProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QMetaObjectCleanUp), this);
			_interceptor = (QMetaObjectCleanUp) realProxy.GetTransparentProxy();
		}
		private QMetaObjectCleanUp ProxyQMetaObjectCleanUp() {
			return (QMetaObjectCleanUp) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QMetaObjectCleanUp() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQMetaObjectCleanUpProxy), null);
			_staticInterceptor = (IQMetaObjectCleanUpProxy) realProxy.GetTransparentProxy();
		}
		private static IQMetaObjectCleanUpProxy StaticQMetaObjectCleanUp() {
			return (IQMetaObjectCleanUpProxy) _staticInterceptor;
		}

		[SmokeMethod("setMetaObject(QMetaObject*&)")]
		public void SetMetaObject(QMetaObject mo) {
			ProxyQMetaObjectCleanUp().SetMetaObject(mo);
		}
	}
}
