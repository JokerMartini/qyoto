//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QDragObject : QObject, IQMimeSource {
 		protected QDragObject(Type dummy) : base((Type) null) {}
		interface IQDragObjectProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
			QWidget Target();
			void SetTarget(QWidget arg1);
		}

		protected void CreateQDragObjectProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDragObject), this);
			_interceptor = (QDragObject) realProxy.GetTransparentProxy();
		}
		private QDragObject ProxyQDragObject() {
			return (QDragObject) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDragObject() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDragObjectProxy), null);
			_staticInterceptor = (IQDragObjectProxy) realProxy.GetTransparentProxy();
		}
		private static IQDragObjectProxy StaticQDragObject() {
			return (IQDragObjectProxy) _staticInterceptor;
		}

		enum DragMode {
			DragDefault = 0,
			DragCopy = 1,
			DragMove = 2,
			DragLink = 3,
			DragCopyOrMove = 4,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQDragObject().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQDragObject().ClassName();
		}
		public bool Drag() {
			return ProxyQDragObject().Drag();
		}
		public bool DragMove() {
			return ProxyQDragObject().DragMove();
		}
		public void DragCopy() {
			ProxyQDragObject().DragCopy();
		}
		public void DragLink() {
			ProxyQDragObject().DragLink();
		}
		public virtual void SetPixmap(QPixmap arg1) {
			ProxyQDragObject().SetPixmap(arg1);
		}
		public virtual void SetPixmap(QPixmap arg1, QPoint hotspot) {
			ProxyQDragObject().SetPixmap(arg1,hotspot);
		}
		public QPixmap Pixmap() {
			return ProxyQDragObject().Pixmap();
		}
		public QPoint PixmapHotSpot() {
			return ProxyQDragObject().PixmapHotSpot();
		}
		public QWidget Source() {
			return ProxyQDragObject().Source();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQDragObject().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQDragObject().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQDragObject().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQDragObject().TrUtf8(arg1);
		}
		public static QWidget Target() {
			return StaticQDragObject().Target();
		}
		public static void SetTarget(QWidget arg1) {
			StaticQDragObject().SetTarget(arg1);
		}
		public virtual string Format(int n) {
			return ProxyQDragObject().Format(n);
		}
		public virtual string Format() {
			return ProxyQDragObject().Format();
		}
		public virtual bool Provides(string arg1) {
			return ProxyQDragObject().Provides(arg1);
		}
		public virtual byte[] EncodedData(string arg1) {
			return ProxyQDragObject().EncodedData(arg1);
		}
		public int SerialNumber() {
			return ProxyQDragObject().SerialNumber();
		}

	}
}
