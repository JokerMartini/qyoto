//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQWizardSignals"></see> for signals emitted by QWizard
	public class QWizard : QDialog, IDisposable {
 		protected QWizard(Type dummy) : base((Type) null) {}
		interface IQWizardProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQWizardProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QWizard), this);
			_interceptor = (QWizard) realProxy.GetTransparentProxy();
		}
		private QWizard ProxyQWizard() {
			return (QWizard) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QWizard() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQWizardProxy), null);
			_staticInterceptor = (IQWizardProxy) realProxy.GetTransparentProxy();
		}
		private static IQWizardProxy StaticQWizard() {
			return (IQWizardProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQWizard().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQWizard().ClassName();
		}
		public QWizard(QWidget parent, string name, bool modal, int f) : this((Type) null) {
			CreateQWizardProxy();
			NewQWizard(parent,name,modal,f);
		}
		private void NewQWizard(QWidget parent, string name, bool modal, int f) {
			ProxyQWizard().NewQWizard(parent,name,modal,f);
		}
		public QWizard(QWidget parent, string name, bool modal) : this((Type) null) {
			CreateQWizardProxy();
			NewQWizard(parent,name,modal);
		}
		private void NewQWizard(QWidget parent, string name, bool modal) {
			ProxyQWizard().NewQWizard(parent,name,modal);
		}
		public QWizard(QWidget parent, string name) : this((Type) null) {
			CreateQWizardProxy();
			NewQWizard(parent,name);
		}
		private void NewQWizard(QWidget parent, string name) {
			ProxyQWizard().NewQWizard(parent,name);
		}
		public QWizard(QWidget parent) : this((Type) null) {
			CreateQWizardProxy();
			NewQWizard(parent);
		}
		private void NewQWizard(QWidget parent) {
			ProxyQWizard().NewQWizard(parent);
		}
		public QWizard() : this((Type) null) {
			CreateQWizardProxy();
			NewQWizard();
		}
		private void NewQWizard() {
			ProxyQWizard().NewQWizard();
		}
		public new void Show() {
			ProxyQWizard().Show();
		}
		public new void SetFont(QFont font) {
			ProxyQWizard().SetFont(font);
		}
		public virtual void AddPage(QWidget arg1, string arg2) {
			ProxyQWizard().AddPage(arg1,arg2);
		}
		public virtual void InsertPage(QWidget arg1, string arg2, int arg3) {
			ProxyQWizard().InsertPage(arg1,arg2,arg3);
		}
		public virtual void RemovePage(QWidget arg1) {
			ProxyQWizard().RemovePage(arg1);
		}
		public string Title(QWidget arg1) {
			return ProxyQWizard().Title(arg1);
		}
		public void SetTitle(QWidget arg1, string arg2) {
			ProxyQWizard().SetTitle(arg1,arg2);
		}
		public QFont TitleFont() {
			return ProxyQWizard().TitleFont();
		}
		public void SetTitleFont(QFont arg1) {
			ProxyQWizard().SetTitleFont(arg1);
		}
		public virtual void ShowPage(QWidget arg1) {
			ProxyQWizard().ShowPage(arg1);
		}
		public QWidget CurrentPage() {
			return ProxyQWizard().CurrentPage();
		}
		public QWidget Page(int arg1) {
			return ProxyQWizard().Page(arg1);
		}
		public int PageCount() {
			return ProxyQWizard().PageCount();
		}
		public int IndexOf(QWidget arg1) {
			return ProxyQWizard().IndexOf(arg1);
		}
		public virtual bool Appropriate(QWidget arg1) {
			return ProxyQWizard().Appropriate(arg1);
		}
		public virtual void SetAppropriate(QWidget arg1, bool arg2) {
			ProxyQWizard().SetAppropriate(arg1,arg2);
		}
		public QPushButton BackButton() {
			return ProxyQWizard().BackButton();
		}
		public QPushButton NextButton() {
			return ProxyQWizard().NextButton();
		}
		public QPushButton FinishButton() {
			return ProxyQWizard().FinishButton();
		}
		public QPushButton CancelButton() {
			return ProxyQWizard().CancelButton();
		}
		public QPushButton HelpButton() {
			return ProxyQWizard().HelpButton();
		}
		public new bool EventFilter(QObject arg1, QEvent arg2) {
			return ProxyQWizard().EventFilter(arg1,arg2);
		}
		public virtual void SetBackEnabled(QWidget arg1, bool arg2) {
			ProxyQWizard().SetBackEnabled(arg1,arg2);
		}
		public virtual void SetNextEnabled(QWidget arg1, bool arg2) {
			ProxyQWizard().SetNextEnabled(arg1,arg2);
		}
		public virtual void SetFinishEnabled(QWidget arg1, bool arg2) {
			ProxyQWizard().SetFinishEnabled(arg1,arg2);
		}
		public virtual void SetHelpEnabled(QWidget arg1, bool arg2) {
			ProxyQWizard().SetHelpEnabled(arg1,arg2);
		}
		public virtual void SetFinish(QWidget arg1, bool arg2) {
			ProxyQWizard().SetFinish(arg1,arg2);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQWizard().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQWizard().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQWizard().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQWizard().TrUtf8(arg1);
		}
		protected virtual void LayOutButtonRow(QHBoxLayout arg1) {
			ProxyQWizard().LayOutButtonRow(arg1);
		}
		protected virtual void LayOutTitleRow(QHBoxLayout arg1, string arg2) {
			ProxyQWizard().LayOutTitleRow(arg1,arg2);
		}
		protected virtual void Back() {
			ProxyQWizard().Back();
		}
		protected virtual void Next() {
			ProxyQWizard().Next();
		}
		protected virtual void Help() {
			ProxyQWizard().Help();
		}
		~QWizard() {
			ProxyQWizard().Dispose();
		}
		public new void Dispose() {
			ProxyQWizard().Dispose();
		}
	}

	public interface IQWizardSignals {
		void HelpClicked();
		void Selected(string arg1);
	}
}
