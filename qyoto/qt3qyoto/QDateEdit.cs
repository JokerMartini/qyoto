//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQDateEditSignals"></see> for signals emitted by QDateEdit
	public class QDateEdit : QDateTimeEditBase, IDisposable {
 		protected QDateEdit(Type dummy) : base((Type) null) {}
		interface IQDateEditProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQDateEditProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDateEdit), this);
			_interceptor = (QDateEdit) realProxy.GetTransparentProxy();
		}
		private QDateEdit ProxyQDateEdit() {
			return (QDateEdit) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDateEdit() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDateEditProxy), null);
			_staticInterceptor = (IQDateEditProxy) realProxy.GetTransparentProxy();
		}
		private static IQDateEditProxy StaticQDateEdit() {
			return (IQDateEditProxy) _staticInterceptor;
		}

		enum E_Order {
			DMY = 0,
			MDY = 1,
			YMD = 2,
			YDM = 3,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQDateEdit().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQDateEdit().ClassName();
		}
		public QDateEdit(QWidget parent, string name) : this((Type) null) {
			CreateQDateEditProxy();
			NewQDateEdit(parent,name);
		}
		private void NewQDateEdit(QWidget parent, string name) {
			ProxyQDateEdit().NewQDateEdit(parent,name);
		}
		public QDateEdit(QWidget parent) : this((Type) null) {
			CreateQDateEditProxy();
			NewQDateEdit(parent);
		}
		private void NewQDateEdit(QWidget parent) {
			ProxyQDateEdit().NewQDateEdit(parent);
		}
		public QDateEdit() : this((Type) null) {
			CreateQDateEditProxy();
			NewQDateEdit();
		}
		private void NewQDateEdit() {
			ProxyQDateEdit().NewQDateEdit();
		}
		public QDateEdit(DateTime date, QWidget parent, string name) : this((Type) null) {
			CreateQDateEditProxy();
			NewQDateEdit(date,parent,name);
		}
		private void NewQDateEdit(DateTime date, QWidget parent, string name) {
			ProxyQDateEdit().NewQDateEdit(date,parent,name);
		}
		public QDateEdit(DateTime date, QWidget parent) : this((Type) null) {
			CreateQDateEditProxy();
			NewQDateEdit(date,parent);
		}
		private void NewQDateEdit(DateTime date, QWidget parent) {
			ProxyQDateEdit().NewQDateEdit(date,parent);
		}
		public QDateEdit(DateTime date) : this((Type) null) {
			CreateQDateEditProxy();
			NewQDateEdit(date);
		}
		private void NewQDateEdit(DateTime date) {
			ProxyQDateEdit().NewQDateEdit(date);
		}
		public new QSize SizeHint() {
			return ProxyQDateEdit().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQDateEdit().MinimumSizeHint();
		}
		public DateTime Date() {
			return ProxyQDateEdit().Date();
		}
		public virtual void SetOrder(int order) {
			ProxyQDateEdit().SetOrder(order);
		}
		public int Order() {
			return ProxyQDateEdit().Order();
		}
		public virtual void SetAutoAdvance(bool advance) {
			ProxyQDateEdit().SetAutoAdvance(advance);
		}
		public bool AutoAdvance() {
			return ProxyQDateEdit().AutoAdvance();
		}
		public virtual void SetMinValue(DateTime d) {
			ProxyQDateEdit().SetMinValue(d);
		}
		public DateTime MinValue() {
			return ProxyQDateEdit().MinValue();
		}
		public virtual void SetMaxValue(DateTime d) {
			ProxyQDateEdit().SetMaxValue(d);
		}
		public DateTime MaxValue() {
			return ProxyQDateEdit().MaxValue();
		}
		public virtual void SetRange(DateTime min, DateTime max) {
			ProxyQDateEdit().SetRange(min,max);
		}
		public string Separator() {
			return ProxyQDateEdit().Separator();
		}
		public virtual void SetSeparator(string s) {
			ProxyQDateEdit().SetSeparator(s);
		}
		public void RemoveFirstNumber(int sec) {
			ProxyQDateEdit().RemoveFirstNumber(sec);
		}
		public virtual void SetDate(DateTime date) {
			ProxyQDateEdit().SetDate(date);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQDateEdit().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQDateEdit().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQDateEdit().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQDateEdit().TrUtf8(arg1);
		}
		public new bool Event(QEvent e) {
			return ProxyQDateEdit().Event(e);
		}
		protected new void TimerEvent(QTimerEvent arg1) {
			ProxyQDateEdit().TimerEvent(arg1);
		}
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQDateEdit().ResizeEvent(arg1);
		}
		public new void StepUp() {
			ProxyQDateEdit().StepUp();
		}
		public new void StepDown() {
			ProxyQDateEdit().StepDown();
		}
		public new string SectionFormattedText(int sec) {
			return ProxyQDateEdit().SectionFormattedText(sec);
		}
		public new void AddNumber(int sec, int num) {
			ProxyQDateEdit().AddNumber(sec,num);
		}
		public new void RemoveLastNumber(int sec) {
			ProxyQDateEdit().RemoveLastNumber(sec);
		}
		public new bool SetFocusSection(int s) {
			return ProxyQDateEdit().SetFocusSection(s);
		}
		protected virtual void SetYear(int year) {
			ProxyQDateEdit().SetYear(year);
		}
		protected virtual void SetMonth(int month) {
			ProxyQDateEdit().SetMonth(month);
		}
		protected virtual void SetDay(int day) {
			ProxyQDateEdit().SetDay(day);
		}
		protected virtual void Fix() {
			ProxyQDateEdit().Fix();
		}
		protected virtual bool OutOfRange(int y, int m, int d) {
			return ProxyQDateEdit().OutOfRange(y,m,d);
		}
		protected void UpdateButtons() {
			ProxyQDateEdit().UpdateButtons();
		}
		~QDateEdit() {
			ProxyQDateEdit().Dispose();
		}
		public new void Dispose() {
			ProxyQDateEdit().Dispose();
		}
	}

	public interface IQDateEditSignals {
		void ValueChanged(DateTime date);
	}
}
