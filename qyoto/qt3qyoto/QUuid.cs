//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QUuid : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QUuid(Type dummy) {}
		interface IQUuidProxy {
			bool op_equals(QUuid lhs, QUuid orig);
			bool op_lt(QUuid lhs, QUuid other);
			bool op_gt(QUuid lhs, QUuid other);
			QUuid CreateUuid();
		}

		protected void CreateQUuidProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QUuid), this);
			_interceptor = (QUuid) realProxy.GetTransparentProxy();
		}
		private QUuid ProxyQUuid() {
			return (QUuid) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QUuid() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQUuidProxy), null);
			_staticInterceptor = (IQUuidProxy) realProxy.GetTransparentProxy();
		}
		private static IQUuidProxy StaticQUuid() {
			return (IQUuidProxy) _staticInterceptor;
		}

		enum E_Variant {
			VarUnknown = -1,
			NCS = 0,
			DCE = 2,
			Microsoft = 6,
			Reserved = 7,
		}
		enum E_Version {
			VerUnknown = -1,
			Time = 1,
			EmbeddedPOSIX = 2,
			Name = 3,
			Random = 4,
		}
		public QUuid() : this((Type) null) {
			CreateQUuidProxy();
			NewQUuid();
		}
		private void NewQUuid() {
			ProxyQUuid().NewQUuid();
		}
		public QUuid(uint l, ushort w1, ushort w2, ushort b1, ushort b2, ushort b3, ushort b4, ushort b5, ushort b6, ushort b7, ushort b8) : this((Type) null) {
			CreateQUuidProxy();
			NewQUuid(l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8);
		}
		private void NewQUuid(uint l, ushort w1, ushort w2, ushort b1, ushort b2, ushort b3, ushort b4, ushort b5, ushort b6, ushort b7, ushort b8) {
			ProxyQUuid().NewQUuid(l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8);
		}
		public QUuid(QUuid uuid) : this((Type) null) {
			CreateQUuidProxy();
			NewQUuid(uuid);
		}
		private void NewQUuid(QUuid uuid) {
			ProxyQUuid().NewQUuid(uuid);
		}
		public QUuid(string arg1) : this((Type) null) {
			CreateQUuidProxy();
			NewQUuid(arg1);
		}
		private void NewQUuid(string arg1) {
			ProxyQUuid().NewQUuid(arg1);
		}
		public new string ToString() {
			return ProxyQUuid().ToString();
		}
		//  operator QString(); >>>> NOT CONVERTED
		public bool IsNull() {
			return ProxyQUuid().IsNull();
		}
		public static bool operator==(QUuid lhs, QUuid orig) {
			return StaticQUuid().op_equals(lhs,orig);
		}
		public static bool operator!=(QUuid lhs, QUuid orig) {
			return !StaticQUuid().op_equals(lhs,orig);
		}
		public override bool Equals(object o) {
			if (!(o is QUuid)) { return false; }
			return this == (QUuid) o;
		}
		public override int GetHashCode() {
			return ProxyQUuid().GetHashCode();
		}
		public static bool operator<(QUuid lhs, QUuid other) {
			return StaticQUuid().op_lt(lhs,other);
		}
		public static bool operator>(QUuid lhs, QUuid other) {
			return StaticQUuid().op_gt(lhs,other);
		}
		public int Variant() {
			return ProxyQUuid().Variant();
		}
		public int Version() {
			return ProxyQUuid().Version();
		}
		public static QUuid CreateUuid() {
			return StaticQUuid().CreateUuid();
		}
		~QUuid() {
			ProxyQUuid().Dispose();
		}
		public void Dispose() {
			ProxyQUuid().Dispose();
		}
	}
}
