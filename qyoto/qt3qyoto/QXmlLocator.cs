//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QXmlLocator : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QXmlLocator(Type dummy) {}
		interface IQXmlLocatorProxy {
		}

		protected void CreateQXmlLocatorProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QXmlLocator), this);
			_interceptor = (QXmlLocator) realProxy.GetTransparentProxy();
		}
		private QXmlLocator ProxyQXmlLocator() {
			return (QXmlLocator) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QXmlLocator() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQXmlLocatorProxy), null);
			_staticInterceptor = (IQXmlLocatorProxy) realProxy.GetTransparentProxy();
		}
		private static IQXmlLocatorProxy StaticQXmlLocator() {
			return (IQXmlLocatorProxy) _staticInterceptor;
		}

		[SmokeMethod("columnNumber()")]
		public virtual int ColumnNumber() {
			return ProxyQXmlLocator().ColumnNumber();
		}
		[SmokeMethod("lineNumber()")]
		public virtual int LineNumber() {
			return ProxyQXmlLocator().LineNumber();
		}
	}
}
