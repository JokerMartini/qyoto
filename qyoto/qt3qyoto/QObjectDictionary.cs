//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QObjectDictionary : IDisposable {
		protected Object _interceptor = null;
 		protected QObjectDictionary(Type dummy) : base() {}
		interface IQObjectDictionaryProxy {
		}

		protected void CreateQObjectDictionaryProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QObjectDictionary), this);
			_interceptor = (QObjectDictionary) realProxy.GetTransparentProxy();
		}
		private QObjectDictionary ProxyQObjectDictionary() {
			return (QObjectDictionary) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QObjectDictionary() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQObjectDictionaryProxy), null);
			_staticInterceptor = (IQObjectDictionaryProxy) realProxy.GetTransparentProxy();
		}
		private static IQObjectDictionaryProxy StaticQObjectDictionary() {
			return (IQObjectDictionaryProxy) _staticInterceptor;
		}

		public QObjectDictionary(int size, bool cs, bool ck) : this((Type) null) {
			CreateQObjectDictionaryProxy();
			NewQObjectDictionary(size,cs,ck);
		}
		private void NewQObjectDictionary(int size, bool cs, bool ck) {
			ProxyQObjectDictionary().NewQObjectDictionary(size,cs,ck);
		}
		public QObjectDictionary(int size, bool cs) : this((Type) null) {
			CreateQObjectDictionaryProxy();
			NewQObjectDictionary(size,cs);
		}
		private void NewQObjectDictionary(int size, bool cs) {
			ProxyQObjectDictionary().NewQObjectDictionary(size,cs);
		}
		public QObjectDictionary(int size) : this((Type) null) {
			CreateQObjectDictionaryProxy();
			NewQObjectDictionary(size);
		}
		private void NewQObjectDictionary(int size) {
			ProxyQObjectDictionary().NewQObjectDictionary(size);
		}
		public QObjectDictionary() : this((Type) null) {
			CreateQObjectDictionaryProxy();
			NewQObjectDictionary();
		}
		private void NewQObjectDictionary() {
			ProxyQObjectDictionary().NewQObjectDictionary();
		}
		public QObjectDictionary(QObjectDictionary dict) : this((Type) null) {
			CreateQObjectDictionaryProxy();
			NewQObjectDictionary(dict);
		}
		private void NewQObjectDictionary(QObjectDictionary dict) {
			ProxyQObjectDictionary().NewQObjectDictionary(dict);
		}
		~QObjectDictionary() {
			ProxyQObjectDictionary().Dispose();
		}
		public void Dispose() {
			ProxyQObjectDictionary().Dispose();
		}
	}
}
