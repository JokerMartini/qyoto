//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QGArray : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QGArray(Type dummy) {}
		interface IQGArrayProxy {
		}

		protected void CreateQGArrayProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QGArray), this);
			_interceptor = (QGArray) realProxy.GetTransparentProxy();
		}
		private QGArray ProxyQGArray() {
			return (QGArray) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QGArray() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQGArrayProxy), null);
			_staticInterceptor = (IQGArrayProxy) realProxy.GetTransparentProxy();
		}
		private static IQGArrayProxy StaticQGArray() {
			return (IQGArrayProxy) _staticInterceptor;
		}

		enum Optimization {
			MemOptim = 0,
			SpeedOptim = 1,
		}
		public QGArray() : this((Type) null) {
			CreateQGArrayProxy();
			NewQGArray();
		}
		private void NewQGArray() {
			ProxyQGArray().NewQGArray();
		}
		public QGArray(int arg1, int arg2) : this((Type) null) {
			CreateQGArrayProxy();
			NewQGArray(arg1,arg2);
		}
		private void NewQGArray(int arg1, int arg2) {
			ProxyQGArray().NewQGArray(arg1,arg2);
		}
		public QGArray(int size) : this((Type) null) {
			CreateQGArrayProxy();
			NewQGArray(size);
		}
		private void NewQGArray(int size) {
			ProxyQGArray().NewQGArray(size);
		}
		public QGArray(QGArray a) : this((Type) null) {
			CreateQGArrayProxy();
			NewQGArray(a);
		}
		private void NewQGArray(QGArray a) {
			ProxyQGArray().NewQGArray(a);
		}
		public virtual void Detach() {
			ProxyQGArray().Detach();
		}
		protected string Data() {
			return ProxyQGArray().Data();
		}
		protected uint Nrefs() {
			return ProxyQGArray().Nrefs();
		}
		protected uint Size() {
			return ProxyQGArray().Size();
		}
		protected bool IsEqual(QGArray a) {
			return ProxyQGArray().IsEqual(a);
		}
		protected bool Resize(uint newsize, int optim) {
			return ProxyQGArray().Resize(newsize,optim);
		}
		protected bool Resize(uint newsize) {
			return ProxyQGArray().Resize(newsize);
		}
		protected bool Fill(string d, int len, uint sz) {
			return ProxyQGArray().Fill(d,len,sz);
		}
		protected QGArray Assign(QGArray a) {
			return ProxyQGArray().Assign(a);
		}
		protected QGArray Assign(string d, uint len) {
			return ProxyQGArray().Assign(d,len);
		}
		protected QGArray Duplicate(QGArray a) {
			return ProxyQGArray().Duplicate(a);
		}
		protected QGArray Duplicate(string d, uint len) {
			return ProxyQGArray().Duplicate(d,len);
		}
		protected void Store(string d, uint len) {
			ProxyQGArray().Store(d,len);
		}
		// QGArray::array_data* sharedBlock(); >>>> NOT CONVERTED
		// void setSharedBlock(QGArray::array_data* arg1); >>>> NOT CONVERTED
		protected QGArray SetRawData(string d, uint len) {
			return ProxyQGArray().SetRawData(d,len);
		}
		protected void ResetRawData(string d, uint len) {
			ProxyQGArray().ResetRawData(d,len);
		}
		protected int Find(string d, uint index, uint sz) {
			return ProxyQGArray().Find(d,index,sz);
		}
		protected int Contains(string d, uint sz) {
			return ProxyQGArray().Contains(d,sz);
		}
		protected void Sort(uint sz) {
			ProxyQGArray().Sort(sz);
		}
		protected int Bsearch(string d, uint sz) {
			return ProxyQGArray().Bsearch(d,sz);
		}
		protected string At(uint index) {
			return ProxyQGArray().At(index);
		}
		protected bool SetExpand(uint index, string d, uint sz) {
			return ProxyQGArray().SetExpand(index,d,sz);
		}
		// QGArray::array_data* newData(); >>>> NOT CONVERTED
		// void deleteData(QGArray::array_data* arg1); >>>> NOT CONVERTED
	}
}
