//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	[SmokeClass("QWhatsThis")]
	public class QWhatsThis : Qt, IDisposable {
 		protected QWhatsThis(Type dummy) : base((Type) null) {}
		interface IQWhatsThisProxy {
			void SetFont(QFont font);
			void Add(QWidget arg1, string arg2);
			void Remove(QWidget arg1);
			string TextFor(QWidget arg1, QPoint pos, bool includeParents);
			string TextFor(QWidget arg1, QPoint pos);
			string TextFor(QWidget arg1);
			QToolButton WhatsThisButton(QWidget parent);
			void EnterWhatsThisMode();
			bool InWhatsThisMode();
			void LeaveWhatsThisMode(string arg1, QPoint pos, QWidget w);
			void LeaveWhatsThisMode(string arg1, QPoint pos);
			void LeaveWhatsThisMode(string arg1);
			void LeaveWhatsThisMode();
			void Display(string text, QPoint pos, QWidget w);
			void Display(string text, QPoint pos);
			void Display(string text);
		}

		protected void CreateQWhatsThisProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QWhatsThis), this);
			_interceptor = (QWhatsThis) realProxy.GetTransparentProxy();
		}
		private QWhatsThis ProxyQWhatsThis() {
			return (QWhatsThis) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QWhatsThis() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQWhatsThisProxy), null);
			_staticInterceptor = (IQWhatsThisProxy) realProxy.GetTransparentProxy();
		}
		private static IQWhatsThisProxy StaticQWhatsThis() {
			return (IQWhatsThisProxy) _staticInterceptor;
		}

		public QWhatsThis(QWidget arg1) : this((Type) null) {
			CreateQWhatsThisProxy();
			NewQWhatsThis(arg1);
		}
		[SmokeMethod("QWhatsThis(QWidget*)")]
		private void NewQWhatsThis(QWidget arg1) {
			ProxyQWhatsThis().NewQWhatsThis(arg1);
		}
		[SmokeMethod("text(const QPoint&)")]
		public virtual string Text(QPoint arg1) {
			return ProxyQWhatsThis().Text(arg1);
		}
		[SmokeMethod("clicked(const QString&)")]
		public virtual bool Clicked(string href) {
			return ProxyQWhatsThis().Clicked(href);
		}
		[SmokeMethod("setFont(const QFont&)")]
		public static void SetFont(QFont font) {
			StaticQWhatsThis().SetFont(font);
		}
		[SmokeMethod("add(QWidget*, const QString&)")]
		public static void Add(QWidget arg1, string arg2) {
			StaticQWhatsThis().Add(arg1,arg2);
		}
		[SmokeMethod("remove(QWidget*)")]
		public static void Remove(QWidget arg1) {
			StaticQWhatsThis().Remove(arg1);
		}
		[SmokeMethod("textFor(QWidget*, const QPoint&, bool)")]
		public static string TextFor(QWidget arg1, QPoint pos, bool includeParents) {
			return StaticQWhatsThis().TextFor(arg1,pos,includeParents);
		}
		[SmokeMethod("textFor(QWidget*, const QPoint&)")]
		public static string TextFor(QWidget arg1, QPoint pos) {
			return StaticQWhatsThis().TextFor(arg1,pos);
		}
		[SmokeMethod("textFor(QWidget*)")]
		public static string TextFor(QWidget arg1) {
			return StaticQWhatsThis().TextFor(arg1);
		}
		[SmokeMethod("whatsThisButton(QWidget*)")]
		public static QToolButton WhatsThisButton(QWidget parent) {
			return StaticQWhatsThis().WhatsThisButton(parent);
		}
		[SmokeMethod("enterWhatsThisMode()")]
		public static void EnterWhatsThisMode() {
			StaticQWhatsThis().EnterWhatsThisMode();
		}
		[SmokeMethod("inWhatsThisMode()")]
		public static bool InWhatsThisMode() {
			return StaticQWhatsThis().InWhatsThisMode();
		}
		[SmokeMethod("leaveWhatsThisMode(const QString&, const QPoint&, QWidget*)")]
		public static void LeaveWhatsThisMode(string arg1, QPoint pos, QWidget w) {
			StaticQWhatsThis().LeaveWhatsThisMode(arg1,pos,w);
		}
		[SmokeMethod("leaveWhatsThisMode(const QString&, const QPoint&)")]
		public static void LeaveWhatsThisMode(string arg1, QPoint pos) {
			StaticQWhatsThis().LeaveWhatsThisMode(arg1,pos);
		}
		[SmokeMethod("leaveWhatsThisMode(const QString&)")]
		public static void LeaveWhatsThisMode(string arg1) {
			StaticQWhatsThis().LeaveWhatsThisMode(arg1);
		}
		[SmokeMethod("leaveWhatsThisMode()")]
		public static void LeaveWhatsThisMode() {
			StaticQWhatsThis().LeaveWhatsThisMode();
		}
		[SmokeMethod("display(const QString&, const QPoint&, QWidget*)")]
		public static void Display(string text, QPoint pos, QWidget w) {
			StaticQWhatsThis().Display(text,pos,w);
		}
		[SmokeMethod("display(const QString&, const QPoint&)")]
		public static void Display(string text, QPoint pos) {
			StaticQWhatsThis().Display(text,pos);
		}
		[SmokeMethod("display(const QString&)")]
		public static void Display(string text) {
			StaticQWhatsThis().Display(text);
		}
		~QWhatsThis() {
			DisposeQWhatsThis();
		}
		public void Dispose() {
			DisposeQWhatsThis();
		}
		private void DisposeQWhatsThis() {
			ProxyQWhatsThis().DisposeQWhatsThis();
		}
	}
}
