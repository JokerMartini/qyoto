//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQTextEditSignals"></see> for signals emitted by QTextEdit
	public class QTextEdit : QScrollView, IDisposable {
 		protected QTextEdit(Type dummy) : base((Type) null) {}
		interface IQTextEditProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQTextEditProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextEdit), this);
			_interceptor = (QTextEdit) realProxy.GetTransparentProxy();
		}
		private QTextEdit ProxyQTextEdit() {
			return (QTextEdit) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QTextEdit() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTextEditProxy), null);
			_staticInterceptor = (IQTextEditProxy) realProxy.GetTransparentProxy();
		}
		private static IQTextEditProxy StaticQTextEdit() {
			return (IQTextEditProxy) _staticInterceptor;
		}

		enum E_WordWrap {
			NoWrap = 0,
			WidgetWidth = 1,
			FixedPixelWidth = 2,
			FixedColumnWidth = 3,
		}
		enum E_WrapPolicy {
			AtWordBoundary = 0,
			AtWhiteSpace = AtWordBoundary,
			Anywhere = 1,
			AtWordOrDocumentBoundary = 2,
		}
		enum E_AutoFormatting : uint {
			AutoNone = 0,
			AutoBulletList = 0x00000001,
			AutoAll = 0xffffffff,
		}
		enum KeyboardAction {
			ActionBackspace = 0,
			ActionDelete = 1,
			ActionReturn = 2,
			ActionKill = 3,
			ActionWordBackspace = 4,
			ActionWordDelete = 5,
		}
		enum CursorAction {
			MoveBackward = 0,
			MoveForward = 1,
			MoveWordBackward = 2,
			MoveWordForward = 3,
			MoveUp = 4,
			MoveDown = 5,
			MoveLineStart = 6,
			MoveLineEnd = 7,
			MoveHome = 8,
			MoveEnd = 9,
			MovePgUp = 10,
			MovePgDown = 11,
		}
		enum VerticalAlignment {
			AlignNormal = 0,
			AlignSuperScript = 1,
			AlignSubScript = 2,
		}
		enum TextInsertionFlags {
			RedoIndentation = 0x0001,
			CheckNewLines = 0x0002,
			RemoveSelected = 0x0004,
			AsIMCompositionText = 0x0008,
			WithIMSelection = 0x0010,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQTextEdit().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQTextEdit().ClassName();
		}
		public QTextEdit(string text, string context, QWidget parent, string name) : this((Type) null) {
			CreateQTextEditProxy();
			NewQTextEdit(text,context,parent,name);
		}
		private void NewQTextEdit(string text, string context, QWidget parent, string name) {
			ProxyQTextEdit().NewQTextEdit(text,context,parent,name);
		}
		public QTextEdit(string text, string context, QWidget parent) : this((Type) null) {
			CreateQTextEditProxy();
			NewQTextEdit(text,context,parent);
		}
		private void NewQTextEdit(string text, string context, QWidget parent) {
			ProxyQTextEdit().NewQTextEdit(text,context,parent);
		}
		public QTextEdit(string text, string context) : this((Type) null) {
			CreateQTextEditProxy();
			NewQTextEdit(text,context);
		}
		private void NewQTextEdit(string text, string context) {
			ProxyQTextEdit().NewQTextEdit(text,context);
		}
		public QTextEdit(string text) : this((Type) null) {
			CreateQTextEditProxy();
			NewQTextEdit(text);
		}
		private void NewQTextEdit(string text) {
			ProxyQTextEdit().NewQTextEdit(text);
		}
		public QTextEdit(QWidget parent, string name) : this((Type) null) {
			CreateQTextEditProxy();
			NewQTextEdit(parent,name);
		}
		private void NewQTextEdit(QWidget parent, string name) {
			ProxyQTextEdit().NewQTextEdit(parent,name);
		}
		public QTextEdit(QWidget parent) : this((Type) null) {
			CreateQTextEditProxy();
			NewQTextEdit(parent);
		}
		private void NewQTextEdit(QWidget parent) {
			ProxyQTextEdit().NewQTextEdit(parent);
		}
		public QTextEdit() : this((Type) null) {
			CreateQTextEditProxy();
			NewQTextEdit();
		}
		private void NewQTextEdit() {
			ProxyQTextEdit().NewQTextEdit();
		}
		public new void SetPalette(QPalette arg1) {
			ProxyQTextEdit().SetPalette(arg1);
		}
		public string Text() {
			return ProxyQTextEdit().Text();
		}
		public string Text(int para) {
			return ProxyQTextEdit().Text(para);
		}
		public int TextFormat() {
			return ProxyQTextEdit().TextFormat();
		}
		public string Context() {
			return ProxyQTextEdit().Context();
		}
		public string DocumentTitle() {
			return ProxyQTextEdit().DocumentTitle();
		}
		public void GetSelection(out int paraFrom, out int indexFrom, out int paraTo, out int indexTo, int selNum) {
			ProxyQTextEdit().GetSelection(out paraFrom,out indexFrom,out paraTo,out indexTo,selNum);
		}
		public void GetSelection(out int paraFrom, out int indexFrom, out int paraTo, out int indexTo) {
			ProxyQTextEdit().GetSelection(out paraFrom,out indexFrom,out paraTo,out indexTo);
		}
		public new virtual bool Find(string expr, bool cs, bool wo, bool forward, out int para, out int index) {
			return ProxyQTextEdit().Find(expr,cs,wo,forward,out para,out index);
		}
		public new virtual bool Find(string expr, bool cs, bool wo, bool forward, out int para) {
			return ProxyQTextEdit().Find(expr,cs,wo,forward,out para);
		}
		public new virtual bool Find(string expr, bool cs, bool wo, bool forward) {
			return ProxyQTextEdit().Find(expr,cs,wo,forward);
		}
		public new virtual bool Find(string expr, bool cs, bool wo) {
			return ProxyQTextEdit().Find(expr,cs,wo);
		}
		public int Paragraphs() {
			return ProxyQTextEdit().Paragraphs();
		}
		public int Lines() {
			return ProxyQTextEdit().Lines();
		}
		public int LinesOfParagraph(int para) {
			return ProxyQTextEdit().LinesOfParagraph(para);
		}
		public int LineOfChar(int para, int chr) {
			return ProxyQTextEdit().LineOfChar(para,chr);
		}
		public int Length() {
			return ProxyQTextEdit().Length();
		}
		public QRect ParagraphRect(int para) {
			return ProxyQTextEdit().ParagraphRect(para);
		}
		public int ParagraphAt(QPoint pos) {
			return ProxyQTextEdit().ParagraphAt(pos);
		}
		public int CharAt(QPoint pos, out int para) {
			return ProxyQTextEdit().CharAt(pos,out para);
		}
		public int ParagraphLength(int para) {
			return ProxyQTextEdit().ParagraphLength(para);
		}
		public QStyleSheet StyleSheet() {
			return ProxyQTextEdit().StyleSheet();
		}
		public QMimeSourceFactory MimeSourceFactory() {
			return ProxyQTextEdit().MimeSourceFactory();
		}
		public QBrush Paper() {
			return ProxyQTextEdit().Paper();
		}
		public bool LinkUnderline() {
			return ProxyQTextEdit().LinkUnderline();
		}
		public new int HeightForWidth(int w) {
			return ProxyQTextEdit().HeightForWidth(w);
		}
		public bool HasSelectedText() {
			return ProxyQTextEdit().HasSelectedText();
		}
		public string SelectedText() {
			return ProxyQTextEdit().SelectedText();
		}
		public bool IsUndoAvailable() {
			return ProxyQTextEdit().IsUndoAvailable();
		}
		public bool IsRedoAvailable() {
			return ProxyQTextEdit().IsRedoAvailable();
		}
		public int WordWrap() {
			return ProxyQTextEdit().WordWrap();
		}
		public int WrapColumnOrWidth() {
			return ProxyQTextEdit().WrapColumnOrWidth();
		}
		public int WrapPolicy() {
			return ProxyQTextEdit().WrapPolicy();
		}
		public int TabStopWidth() {
			return ProxyQTextEdit().TabStopWidth();
		}
		public string AnchorAt(QPoint pos) {
			return ProxyQTextEdit().AnchorAt(pos);
		}
		public string AnchorAt(QPoint pos, int a) {
			return ProxyQTextEdit().AnchorAt(pos,a);
		}
		public new QSize SizeHint() {
			return ProxyQTextEdit().SizeHint();
		}
		public bool IsReadOnly() {
			return ProxyQTextEdit().IsReadOnly();
		}
		public void GetCursorPosition(out int parag, out int index) {
			ProxyQTextEdit().GetCursorPosition(out parag,out index);
		}
		public bool IsModified() {
			return ProxyQTextEdit().IsModified();
		}
		public bool Italic() {
			return ProxyQTextEdit().Italic();
		}
		public bool Bold() {
			return ProxyQTextEdit().Bold();
		}
		public bool Underline() {
			return ProxyQTextEdit().Underline();
		}
		public string Family() {
			return ProxyQTextEdit().Family();
		}
		public int PointSize() {
			return ProxyQTextEdit().PointSize();
		}
		public QColor Color() {
			return ProxyQTextEdit().Color();
		}
		public new QFont Font() {
			return ProxyQTextEdit().Font();
		}
		public QFont CurrentFont() {
			return ProxyQTextEdit().CurrentFont();
		}
		public int Alignment() {
			return ProxyQTextEdit().Alignment();
		}
		public int UndoDepth() {
			return ProxyQTextEdit().UndoDepth();
		}
		public virtual bool GetFormat(int para, int index, QFont font, QColor color, int verticalAlignment) {
			return ProxyQTextEdit().GetFormat(para,index,font,color,verticalAlignment);
		}
		public virtual bool GetParagraphFormat(int para, QFont font, QColor color, int verticalAlignment, out int alignment, int displayMode, int listStyle, out int listDepth) {
			return ProxyQTextEdit().GetParagraphFormat(para,font,color,verticalAlignment,out alignment,displayMode,listStyle,out listDepth);
		}
		public bool IsOverwriteMode() {
			return ProxyQTextEdit().IsOverwriteMode();
		}
		public QColor ParagraphBackgroundColor(int para) {
			return ProxyQTextEdit().ParagraphBackgroundColor(para);
		}
		public bool IsUndoRedoEnabled() {
			return ProxyQTextEdit().IsUndoRedoEnabled();
		}
		public new bool EventFilter(QObject o, QEvent e) {
			return ProxyQTextEdit().EventFilter(o,e);
		}
		public bool TabChangesFocus() {
			return ProxyQTextEdit().TabChangesFocus();
		}
		public void SetAutoFormatting(uint features) {
			ProxyQTextEdit().SetAutoFormatting(features);
		}
		public uint AutoFormatting() {
			return ProxyQTextEdit().AutoFormatting();
		}
		public QSyntaxHighlighter SyntaxHighlighter() {
			return ProxyQTextEdit().SyntaxHighlighter();
		}
		public new void SetEnabled(bool arg1) {
			ProxyQTextEdit().SetEnabled(arg1);
		}
		public virtual void SetMimeSourceFactory(QMimeSourceFactory factory) {
			ProxyQTextEdit().SetMimeSourceFactory(factory);
		}
		public virtual void SetStyleSheet(QStyleSheet styleSheet) {
			ProxyQTextEdit().SetStyleSheet(styleSheet);
		}
		public virtual void ScrollToAnchor(string name) {
			ProxyQTextEdit().ScrollToAnchor(name);
		}
		public virtual void SetPaper(QBrush pap) {
			ProxyQTextEdit().SetPaper(pap);
		}
		public virtual void SetLinkUnderline(bool arg1) {
			ProxyQTextEdit().SetLinkUnderline(arg1);
		}
		public virtual void SetWordWrap(int mode) {
			ProxyQTextEdit().SetWordWrap(mode);
		}
		public virtual void SetWrapColumnOrWidth(int arg1) {
			ProxyQTextEdit().SetWrapColumnOrWidth(arg1);
		}
		public virtual void SetWrapPolicy(int policy) {
			ProxyQTextEdit().SetWrapPolicy(policy);
		}
		public virtual void Copy() {
			ProxyQTextEdit().Copy();
		}
		public virtual void Append(string text) {
			ProxyQTextEdit().Append(text);
		}
		public void SetText(string txt) {
			ProxyQTextEdit().SetText(txt);
		}
		public virtual void SetText(string txt, string context) {
			ProxyQTextEdit().SetText(txt,context);
		}
		public virtual void SetTextFormat(int f) {
			ProxyQTextEdit().SetTextFormat(f);
		}
		public virtual void SelectAll(bool select) {
			ProxyQTextEdit().SelectAll(select);
		}
		public virtual void SelectAll() {
			ProxyQTextEdit().SelectAll();
		}
		public virtual void SetTabStopWidth(int ts) {
			ProxyQTextEdit().SetTabStopWidth(ts);
		}
		public virtual void ZoomIn(int range) {
			ProxyQTextEdit().ZoomIn(range);
		}
		public virtual void ZoomIn() {
			ProxyQTextEdit().ZoomIn();
		}
		public virtual void ZoomOut(int range) {
			ProxyQTextEdit().ZoomOut(range);
		}
		public virtual void ZoomOut() {
			ProxyQTextEdit().ZoomOut();
		}
		public virtual void ZoomTo(int size) {
			ProxyQTextEdit().ZoomTo(size);
		}
		public virtual void Sync() {
			ProxyQTextEdit().Sync();
		}
		public virtual void SetReadOnly(bool b) {
			ProxyQTextEdit().SetReadOnly(b);
		}
		public virtual void Undo() {
			ProxyQTextEdit().Undo();
		}
		public virtual void Redo() {
			ProxyQTextEdit().Redo();
		}
		public virtual void Cut() {
			ProxyQTextEdit().Cut();
		}
		public virtual void Paste() {
			ProxyQTextEdit().Paste();
		}
		public virtual void PasteSubType(string subtype) {
			ProxyQTextEdit().PasteSubType(subtype);
		}
		public virtual void Clear() {
			ProxyQTextEdit().Clear();
		}
		public virtual void Del() {
			ProxyQTextEdit().Del();
		}
		public virtual void Indent() {
			ProxyQTextEdit().Indent();
		}
		public virtual void SetItalic(bool b) {
			ProxyQTextEdit().SetItalic(b);
		}
		public virtual void SetBold(bool b) {
			ProxyQTextEdit().SetBold(b);
		}
		public virtual void SetUnderline(bool b) {
			ProxyQTextEdit().SetUnderline(b);
		}
		public virtual void SetFamily(string f) {
			ProxyQTextEdit().SetFamily(f);
		}
		public virtual void SetPointSize(int s) {
			ProxyQTextEdit().SetPointSize(s);
		}
		public virtual void SetColor(QColor c) {
			ProxyQTextEdit().SetColor(c);
		}
		public new virtual void SetFont(QFont f) {
			ProxyQTextEdit().SetFont(f);
		}
		public virtual void SetVerticalAlignment(int a) {
			ProxyQTextEdit().SetVerticalAlignment(a);
		}
		public virtual void SetAlignment(int a) {
			ProxyQTextEdit().SetAlignment(a);
		}
		public virtual void SetParagType(int dm, int listStyle) {
			ProxyQTextEdit().SetParagType(dm,listStyle);
		}
		public virtual void SetCursorPosition(int parag, int index) {
			ProxyQTextEdit().SetCursorPosition(parag,index);
		}
		public virtual void SetSelection(int parag_from, int index_from, int parag_to, int index_to, int selNum) {
			ProxyQTextEdit().SetSelection(parag_from,index_from,parag_to,index_to,selNum);
		}
		public virtual void SetSelection(int parag_from, int index_from, int parag_to, int index_to) {
			ProxyQTextEdit().SetSelection(parag_from,index_from,parag_to,index_to);
		}
		public virtual void SetSelectionAttributes(int selNum, QColor back, bool invertText) {
			ProxyQTextEdit().SetSelectionAttributes(selNum,back,invertText);
		}
		public virtual void SetModified(bool m) {
			ProxyQTextEdit().SetModified(m);
		}
		public virtual void ResetFormat() {
			ProxyQTextEdit().ResetFormat();
		}
		public virtual void SetUndoDepth(int d) {
			ProxyQTextEdit().SetUndoDepth(d);
		}
		// void setFormat(QTextFormat* arg1,int arg2); >>>> NOT CONVERTED
		public virtual void EnsureCursorVisible() {
			ProxyQTextEdit().EnsureCursorVisible();
		}
		// void placeCursor(const QPoint& arg1,QTextCursor* arg2); >>>> NOT CONVERTED
		public virtual void PlaceCursor(QPoint pos) {
			ProxyQTextEdit().PlaceCursor(pos);
		}
		public virtual void MoveCursor(int action, bool select) {
			ProxyQTextEdit().MoveCursor(action,select);
		}
		public virtual void DoKeyboardAction(int action) {
			ProxyQTextEdit().DoKeyboardAction(action);
		}
		public virtual void RemoveSelectedText(int selNum) {
			ProxyQTextEdit().RemoveSelectedText(selNum);
		}
		public virtual void RemoveSelectedText() {
			ProxyQTextEdit().RemoveSelectedText();
		}
		public virtual void RemoveSelection(int selNum) {
			ProxyQTextEdit().RemoveSelection(selNum);
		}
		public virtual void RemoveSelection() {
			ProxyQTextEdit().RemoveSelection();
		}
		public virtual void SetCurrentFont(QFont f) {
			ProxyQTextEdit().SetCurrentFont(f);
		}
		public virtual void SetOverwriteMode(bool b) {
			ProxyQTextEdit().SetOverwriteMode(b);
		}
		public virtual void ScrollToBottom() {
			ProxyQTextEdit().ScrollToBottom();
		}
		public void Insert(string text, uint insertionFlags) {
			ProxyQTextEdit().Insert(text,insertionFlags);
		}
		public void Insert(string text) {
			ProxyQTextEdit().Insert(text);
		}
		public virtual void Insert(string text, bool arg2, bool arg3, bool arg4) {
			ProxyQTextEdit().Insert(text,arg2,arg3,arg4);
		}
		public virtual void Insert(string text, bool arg2, bool arg3) {
			ProxyQTextEdit().Insert(text,arg2,arg3);
		}
		public virtual void Insert(string text, bool arg2) {
			ProxyQTextEdit().Insert(text,arg2);
		}
		public virtual void InsertAt(string text, int para, int index) {
			ProxyQTextEdit().InsertAt(text,para,index);
		}
		public virtual void RemoveParagraph(int para) {
			ProxyQTextEdit().RemoveParagraph(para);
		}
		public virtual void InsertParagraph(string text, int para) {
			ProxyQTextEdit().InsertParagraph(text,para);
		}
		public virtual void SetParagraphBackgroundColor(int para, QColor bg) {
			ProxyQTextEdit().SetParagraphBackgroundColor(para,bg);
		}
		public virtual void ClearParagraphBackground(int para) {
			ProxyQTextEdit().ClearParagraphBackground(para);
		}
		public virtual void SetUndoRedoEnabled(bool b) {
			ProxyQTextEdit().SetUndoRedoEnabled(b);
		}
		public void SetTabChangesFocus(bool b) {
			ProxyQTextEdit().SetTabChangesFocus(b);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQTextEdit().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQTextEdit().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQTextEdit().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQTextEdit().TrUtf8(arg1);
		}
		protected void RepaintChanged() {
			ProxyQTextEdit().RepaintChanged();
		}
		protected void UpdateStyles() {
			ProxyQTextEdit().UpdateStyles();
		}
		protected new void DrawContents(QPainter p, int cx, int cy, int cw, int ch) {
			ProxyQTextEdit().DrawContents(p,cx,cy,cw,ch);
		}
		public new bool Event(QEvent e) {
			return ProxyQTextEdit().Event(e);
		}
		protected new void KeyPressEvent(QKeyEvent e) {
			ProxyQTextEdit().KeyPressEvent(e);
		}
		protected new void ResizeEvent(QResizeEvent e) {
			ProxyQTextEdit().ResizeEvent(e);
		}
		protected new void ViewportResizeEvent(QResizeEvent arg1) {
			ProxyQTextEdit().ViewportResizeEvent(arg1);
		}
		protected new void ContentsMousePressEvent(QMouseEvent e) {
			ProxyQTextEdit().ContentsMousePressEvent(e);
		}
		protected new void ContentsMouseMoveEvent(QMouseEvent e) {
			ProxyQTextEdit().ContentsMouseMoveEvent(e);
		}
		protected new void ContentsMouseReleaseEvent(QMouseEvent e) {
			ProxyQTextEdit().ContentsMouseReleaseEvent(e);
		}
		protected new void ContentsMouseDoubleClickEvent(QMouseEvent e) {
			ProxyQTextEdit().ContentsMouseDoubleClickEvent(e);
		}
		protected new void ContentsWheelEvent(QWheelEvent e) {
			ProxyQTextEdit().ContentsWheelEvent(e);
		}
		protected new void ImStartEvent(QIMEvent arg1) {
			ProxyQTextEdit().ImStartEvent(arg1);
		}
		protected new void ImComposeEvent(QIMEvent arg1) {
			ProxyQTextEdit().ImComposeEvent(arg1);
		}
		protected new void ImEndEvent(QIMEvent arg1) {
			ProxyQTextEdit().ImEndEvent(arg1);
		}
		protected new void ContentsDragEnterEvent(QDragEnterEvent e) {
			ProxyQTextEdit().ContentsDragEnterEvent(e);
		}
		protected new void ContentsDragMoveEvent(QDragMoveEvent e) {
			ProxyQTextEdit().ContentsDragMoveEvent(e);
		}
		protected new void ContentsDragLeaveEvent(QDragLeaveEvent e) {
			ProxyQTextEdit().ContentsDragLeaveEvent(e);
		}
		protected new void ContentsDropEvent(QDropEvent e) {
			ProxyQTextEdit().ContentsDropEvent(e);
		}
		protected new void ContentsContextMenuEvent(QContextMenuEvent e) {
			ProxyQTextEdit().ContentsContextMenuEvent(e);
		}
		protected bool SendMouseEventToInputContext(QMouseEvent e) {
			return ProxyQTextEdit().SendMouseEventToInputContext(e);
		}
		protected new bool FocusNextPrevChild(bool next) {
			return ProxyQTextEdit().FocusNextPrevChild(next);
		}
		// QTextDocument* document(); >>>> NOT CONVERTED
		// QTextCursor* textCursor(); >>>> NOT CONVERTED
		// void setDocument(QTextDocument* arg1); >>>> NOT CONVERTED
		protected virtual QPopupMenu CreatePopupMenu(QPoint pos) {
			return ProxyQTextEdit().CreatePopupMenu(pos);
		}
		protected virtual QPopupMenu CreatePopupMenu() {
			return ProxyQTextEdit().CreatePopupMenu();
		}
		protected void DrawCursor(bool visible) {
			ProxyQTextEdit().DrawCursor(visible);
		}
		protected new void WindowActivationChange(bool arg1) {
			ProxyQTextEdit().WindowActivationChange(arg1);
		}
		protected virtual void DoChangeInterval() {
			ProxyQTextEdit().DoChangeInterval();
		}
		protected void SliderReleased() {
			ProxyQTextEdit().SliderReleased();
		}
		~QTextEdit() {
			ProxyQTextEdit().Dispose();
		}
		public new void Dispose() {
			ProxyQTextEdit().Dispose();
		}
	}

	public interface IQTextEditSignals {
		void TextChanged();
		void SelectionChanged();
		void CopyAvailable(bool arg1);
		void UndoAvailable(bool yes);
		void RedoAvailable(bool yes);
		void CurrentFontChanged(QFont f);
		void CurrentColorChanged(QColor c);
		void CurrentAlignmentChanged(int a);
		void CurrentVerticalAlignmentChanged(int a);
		// void cursorPositionChanged(QTextCursor* arg1); >>>> NOT CONVERTED
		void CursorPositionChanged(int para, int pos);
		void ReturnPressed();
		void ModificationChanged(bool m);
		void Clicked(int parag, int index);
		void DoubleClicked(int parag, int index);
	}
}
