//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QImageFormatType : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QImageFormatType(Type dummy) {}
		interface IQImageFormatTypeProxy {
		}

		protected void CreateQImageFormatTypeProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QImageFormatType), this);
			_interceptor = (QImageFormatType) realProxy.GetTransparentProxy();
		}
		private QImageFormatType ProxyQImageFormatType() {
			return (QImageFormatType) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QImageFormatType() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQImageFormatTypeProxy), null);
			_staticInterceptor = (IQImageFormatTypeProxy) realProxy.GetTransparentProxy();
		}
		private static IQImageFormatTypeProxy StaticQImageFormatType() {
			return (IQImageFormatTypeProxy) _staticInterceptor;
		}

		public virtual QImageFormat DecoderFor(char[] buffer, int length) {
			return ProxyQImageFormatType().DecoderFor(buffer,length);
		}
		public virtual string FormatName() {
			return ProxyQImageFormatType().FormatName();
		}
	}
}
