//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QCanvasPolygonalItem : QCanvasItem {
 		protected QCanvasPolygonalItem(Type dummy) : base((Type) null) {}
		interface IQCanvasPolygonalItemProxy {
		}

		protected void CreateQCanvasPolygonalItemProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QCanvasPolygonalItem), this);
			_interceptor = (QCanvasPolygonalItem) realProxy.GetTransparentProxy();
		}
		private QCanvasPolygonalItem ProxyQCanvasPolygonalItem() {
			return (QCanvasPolygonalItem) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QCanvasPolygonalItem() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQCanvasPolygonalItemProxy), null);
			_staticInterceptor = (IQCanvasPolygonalItemProxy) realProxy.GetTransparentProxy();
		}
		private static IQCanvasPolygonalItemProxy StaticQCanvasPolygonalItem() {
			return (IQCanvasPolygonalItemProxy) _staticInterceptor;
		}

		public new bool CollidesWith(QCanvasItem arg1) {
			return ProxyQCanvasPolygonalItem().CollidesWith(arg1);
		}
		public virtual void SetPen(QPen p) {
			ProxyQCanvasPolygonalItem().SetPen(p);
		}
		public virtual void SetBrush(QBrush b) {
			ProxyQCanvasPolygonalItem().SetBrush(b);
		}
		public QPen Pen() {
			return ProxyQCanvasPolygonalItem().Pen();
		}
		public QBrush Brush() {
			return ProxyQCanvasPolygonalItem().Brush();
		}
		public virtual QPointArray AreaPoints() {
			return ProxyQCanvasPolygonalItem().AreaPoints();
		}
		public virtual QPointArray AreaPointsAdvanced() {
			return ProxyQCanvasPolygonalItem().AreaPointsAdvanced();
		}
		public new QRect BoundingRect() {
			return ProxyQCanvasPolygonalItem().BoundingRect();
		}
		public new int Rtti() {
			return ProxyQCanvasPolygonalItem().Rtti();
		}
	}
}
