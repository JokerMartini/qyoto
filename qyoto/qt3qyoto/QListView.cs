//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
using System.Collections;
	using System.Text;

	/// See <see cref="IQListViewSignals"></see> for signals emitted by QListView
	public class QListView : QScrollView, IDisposable {
 		protected QListView(Type dummy) : base((Type) null) {}
		interface IQListViewProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQListViewProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QListView), this);
			_interceptor = (QListView) realProxy.GetTransparentProxy();
		}
		private QListView ProxyQListView() {
			return (QListView) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QListView() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQListViewProxy), null);
			_staticInterceptor = (IQListViewProxy) realProxy.GetTransparentProxy();
		}
		private static IQListViewProxy StaticQListView() {
			return (IQListViewProxy) _staticInterceptor;
		}

		enum WidthMode {
			Manual = 0,
			Maximum = 1,
		}
		enum E_SelectionMode {
			Single = 0,
			Multi = 1,
			Extended = 2,
			NoSelection = 3,
		}
		enum E_ResizeMode {
			NoColumn = 0,
			AllColumns = 1,
			LastColumn = 2,
		}
		enum RenameAction {
			Accept = 0,
			Reject = 1,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQListView().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQListView().ClassName();
		}
		public QListView(QWidget parent, string name, int f) : this((Type) null) {
			CreateQListViewProxy();
			NewQListView(parent,name,f);
		}
		private void NewQListView(QWidget parent, string name, int f) {
			ProxyQListView().NewQListView(parent,name,f);
		}
		public QListView(QWidget parent, string name) : this((Type) null) {
			CreateQListViewProxy();
			NewQListView(parent,name);
		}
		private void NewQListView(QWidget parent, string name) {
			ProxyQListView().NewQListView(parent,name);
		}
		public QListView(QWidget parent) : this((Type) null) {
			CreateQListViewProxy();
			NewQListView(parent);
		}
		private void NewQListView(QWidget parent) {
			ProxyQListView().NewQListView(parent);
		}
		public QListView() : this((Type) null) {
			CreateQListViewProxy();
			NewQListView();
		}
		private void NewQListView() {
			ProxyQListView().NewQListView();
		}
		public int TreeStepSize() {
			return ProxyQListView().TreeStepSize();
		}
		public virtual void SetTreeStepSize(int arg1) {
			ProxyQListView().SetTreeStepSize(arg1);
		}
		public virtual void InsertItem(QListViewItem arg1) {
			ProxyQListView().InsertItem(arg1);
		}
		public virtual void TakeItem(QListViewItem arg1) {
			ProxyQListView().TakeItem(arg1);
		}
		public virtual void RemoveItem(QListViewItem item) {
			ProxyQListView().RemoveItem(item);
		}
		public QHeader Header() {
			return ProxyQListView().Header();
		}
		public virtual int AddColumn(string label, int size) {
			return ProxyQListView().AddColumn(label,size);
		}
		public virtual int AddColumn(string label) {
			return ProxyQListView().AddColumn(label);
		}
		public virtual int AddColumn(QIconSet iconset, string label, int size) {
			return ProxyQListView().AddColumn(iconset,label,size);
		}
		public virtual int AddColumn(QIconSet iconset, string label) {
			return ProxyQListView().AddColumn(iconset,label);
		}
		public virtual void RemoveColumn(int index) {
			ProxyQListView().RemoveColumn(index);
		}
		public virtual void SetColumnText(int column, string label) {
			ProxyQListView().SetColumnText(column,label);
		}
		public virtual void SetColumnText(int column, QIconSet iconset, string label) {
			ProxyQListView().SetColumnText(column,iconset,label);
		}
		public string ColumnText(int column) {
			return ProxyQListView().ColumnText(column);
		}
		public virtual void SetColumnWidth(int column, int width) {
			ProxyQListView().SetColumnWidth(column,width);
		}
		public int ColumnWidth(int column) {
			return ProxyQListView().ColumnWidth(column);
		}
		public virtual void SetColumnWidthMode(int column, int arg2) {
			ProxyQListView().SetColumnWidthMode(column,arg2);
		}
		public int ColumnWidthMode(int column) {
			return ProxyQListView().ColumnWidthMode(column);
		}
		public int Columns() {
			return ProxyQListView().Columns();
		}
		public virtual void SetColumnAlignment(int arg1, int arg2) {
			ProxyQListView().SetColumnAlignment(arg1,arg2);
		}
		public int ColumnAlignment(int arg1) {
			return ProxyQListView().ColumnAlignment(arg1);
		}
		public new void Show() {
			ProxyQListView().Show();
		}
		public QListViewItem ItemAt(QPoint screenPos) {
			return ProxyQListView().ItemAt(screenPos);
		}
		public QRect ItemRect(QListViewItem arg1) {
			return ProxyQListView().ItemRect(arg1);
		}
		public int ItemPos(QListViewItem arg1) {
			return ProxyQListView().ItemPos(arg1);
		}
		public void EnsureItemVisible(QListViewItem arg1) {
			ProxyQListView().EnsureItemVisible(arg1);
		}
		public void RepaintItem(QListViewItem arg1) {
			ProxyQListView().RepaintItem(arg1);
		}
		public virtual void SetMultiSelection(bool enable) {
			ProxyQListView().SetMultiSelection(enable);
		}
		public bool IsMultiSelection() {
			return ProxyQListView().IsMultiSelection();
		}
		public void SetSelectionMode(int mode) {
			ProxyQListView().SetSelectionMode(mode);
		}
		public int SelectionMode() {
			return ProxyQListView().SelectionMode();
		}
		public virtual void ClearSelection() {
			ProxyQListView().ClearSelection();
		}
		public virtual void SetSelected(QListViewItem arg1, bool arg2) {
			ProxyQListView().SetSelected(arg1,arg2);
		}
		public void SetSelectionAnchor(QListViewItem arg1) {
			ProxyQListView().SetSelectionAnchor(arg1);
		}
		public bool IsSelected(QListViewItem arg1) {
			return ProxyQListView().IsSelected(arg1);
		}
		public QListViewItem SelectedItem() {
			return ProxyQListView().SelectedItem();
		}
		public virtual void SetOpen(QListViewItem arg1, bool arg2) {
			ProxyQListView().SetOpen(arg1,arg2);
		}
		public bool IsOpen(QListViewItem arg1) {
			return ProxyQListView().IsOpen(arg1);
		}
		public virtual void SetCurrentItem(QListViewItem arg1) {
			ProxyQListView().SetCurrentItem(arg1);
		}
		public QListViewItem CurrentItem() {
			return ProxyQListView().CurrentItem();
		}
		public QListViewItem FirstChild() {
			return ProxyQListView().FirstChild();
		}
		public QListViewItem LastItem() {
			return ProxyQListView().LastItem();
		}
		public int ChildCount() {
			return ProxyQListView().ChildCount();
		}
		public virtual void SetAllColumnsShowFocus(bool arg1) {
			ProxyQListView().SetAllColumnsShowFocus(arg1);
		}
		public bool AllColumnsShowFocus() {
			return ProxyQListView().AllColumnsShowFocus();
		}
		public virtual void SetItemMargin(int arg1) {
			ProxyQListView().SetItemMargin(arg1);
		}
		public int ItemMargin() {
			return ProxyQListView().ItemMargin();
		}
		public virtual void SetRootIsDecorated(bool arg1) {
			ProxyQListView().SetRootIsDecorated(arg1);
		}
		public bool RootIsDecorated() {
			return ProxyQListView().RootIsDecorated();
		}
		public virtual void SetSorting(int column, bool ascending) {
			ProxyQListView().SetSorting(column,ascending);
		}
		public virtual void SetSorting(int column) {
			ProxyQListView().SetSorting(column);
		}
		public int SortColumn() {
			return ProxyQListView().SortColumn();
		}
		public void SetSortColumn(int column) {
			ProxyQListView().SetSortColumn(column);
		}
		public int SortOrder() {
			return ProxyQListView().SortOrder();
		}
		public void SetSortOrder(int order) {
			ProxyQListView().SetSortOrder(order);
		}
		public virtual void Sort() {
			ProxyQListView().Sort();
		}
		public new virtual void SetFont(QFont arg1) {
			ProxyQListView().SetFont(arg1);
		}
		public new virtual void SetPalette(QPalette arg1) {
			ProxyQListView().SetPalette(arg1);
		}
		public new bool EventFilter(QObject o, QEvent arg2) {
			return ProxyQListView().EventFilter(o,arg2);
		}
		public new QSize SizeHint() {
			return ProxyQListView().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQListView().MinimumSizeHint();
		}
		public virtual void SetShowSortIndicator(bool show) {
			ProxyQListView().SetShowSortIndicator(show);
		}
		public bool ShowSortIndicator() {
			return ProxyQListView().ShowSortIndicator();
		}
		public virtual void SetShowToolTips(bool b) {
			ProxyQListView().SetShowToolTips(b);
		}
		public bool ShowToolTips() {
			return ProxyQListView().ShowToolTips();
		}
		public virtual void SetResizeMode(int m) {
			ProxyQListView().SetResizeMode(m);
		}
		public int ResizeMode() {
			return ProxyQListView().ResizeMode();
		}
		public QListViewItem FindItem(string text, int column, uint compare) {
			return ProxyQListView().FindItem(text,column,compare);
		}
		public QListViewItem FindItem(string text, int column) {
			return ProxyQListView().FindItem(text,column);
		}
		public virtual void SetDefaultRenameAction(int a) {
			ProxyQListView().SetDefaultRenameAction(a);
		}
		public int DefaultRenameAction() {
			return ProxyQListView().DefaultRenameAction();
		}
		public bool IsRenaming() {
			return ProxyQListView().IsRenaming();
		}
		public void HideColumn(int column) {
			ProxyQListView().HideColumn(column);
		}
		public virtual void Clear() {
			ProxyQListView().Clear();
		}
		public virtual void InvertSelection() {
			ProxyQListView().InvertSelection();
		}
		public virtual void SelectAll(bool select) {
			ProxyQListView().SelectAll(select);
		}
		public void TriggerUpdate() {
			ProxyQListView().TriggerUpdate();
		}
		public new void SetContentsPos(int x, int y) {
			ProxyQListView().SetContentsPos(x,y);
		}
		public void AdjustColumn(int col) {
			ProxyQListView().AdjustColumn(col);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQListView().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQListView().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQListView().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQListView().TrUtf8(arg1);
		}
		protected new void ContentsMousePressEvent(QMouseEvent e) {
			ProxyQListView().ContentsMousePressEvent(e);
		}
		protected new void ContentsMouseReleaseEvent(QMouseEvent e) {
			ProxyQListView().ContentsMouseReleaseEvent(e);
		}
		protected new void ContentsMouseMoveEvent(QMouseEvent e) {
			ProxyQListView().ContentsMouseMoveEvent(e);
		}
		protected new void ContentsMouseDoubleClickEvent(QMouseEvent e) {
			ProxyQListView().ContentsMouseDoubleClickEvent(e);
		}
		protected new void ContentsContextMenuEvent(QContextMenuEvent e) {
			ProxyQListView().ContentsContextMenuEvent(e);
		}
		protected new void ContentsDragEnterEvent(QDragEnterEvent e) {
			ProxyQListView().ContentsDragEnterEvent(e);
		}
		protected new void ContentsDragMoveEvent(QDragMoveEvent e) {
			ProxyQListView().ContentsDragMoveEvent(e);
		}
		protected new void ContentsDragLeaveEvent(QDragLeaveEvent e) {
			ProxyQListView().ContentsDragLeaveEvent(e);
		}
		protected new void ContentsDropEvent(QDropEvent e) {
			ProxyQListView().ContentsDropEvent(e);
		}
		protected virtual QDragObject DragObject() {
			return ProxyQListView().DragObject();
		}
		protected virtual void StartDrag() {
			ProxyQListView().StartDrag();
		}
		protected new void FocusInEvent(QFocusEvent e) {
			ProxyQListView().FocusInEvent(e);
		}
		protected new void FocusOutEvent(QFocusEvent e) {
			ProxyQListView().FocusOutEvent(e);
		}
		protected new void KeyPressEvent(QKeyEvent e) {
			ProxyQListView().KeyPressEvent(e);
		}
		protected new void ResizeEvent(QResizeEvent e) {
			ProxyQListView().ResizeEvent(e);
		}
		protected new void ViewportResizeEvent(QResizeEvent e) {
			ProxyQListView().ViewportResizeEvent(e);
		}
		public new void ShowEvent(QShowEvent arg1) {
			ProxyQListView().ShowEvent(arg1);
		}
		protected new void DrawContentsOffset(QPainter arg1, int ox, int oy, int cx, int cy, int cw, int ch) {
			ProxyQListView().DrawContentsOffset(arg1,ox,oy,cx,cy,cw,ch);
		}
		protected virtual void PaintEmptyArea(QPainter arg1, QRect arg2) {
			ProxyQListView().PaintEmptyArea(arg1,arg2);
		}
		public new void StyleChange(QStyle arg1) {
			ProxyQListView().StyleChange(arg1);
		}
		protected new void WindowActivationChange(bool arg1) {
			ProxyQListView().WindowActivationChange(arg1);
		}
		public new void UpdateContents() {
			ProxyQListView().UpdateContents();
		}
		protected void DoAutoScroll() {
			ProxyQListView().DoAutoScroll();
		}
		~QListView() {
			ProxyQListView().Dispose();
		}
		public new void Dispose() {
			ProxyQListView().Dispose();
		}

	}

	public interface IQListViewSignals {
		void SelectionChanged();
		void SelectionChanged(QListViewItem arg1);
		void CurrentChanged(QListViewItem arg1);
		void Clicked(QListViewItem arg1);
		void Clicked(QListViewItem arg1, QPoint arg2, int arg3);
		void Pressed(QListViewItem arg1);
		void Pressed(QListViewItem arg1, QPoint arg2, int arg3);
		void DoubleClicked(QListViewItem arg1);
		void DoubleClicked(QListViewItem arg1, QPoint arg2, int arg3);
		void ReturnPressed(QListViewItem arg1);
		void SpacePressed(QListViewItem arg1);
		void RightButtonClicked(QListViewItem arg1, QPoint arg2, int arg3);
		void RightButtonPressed(QListViewItem arg1, QPoint arg2, int arg3);
		void MouseButtonPressed(int arg1, QListViewItem arg2, QPoint arg3, int arg4);
		void MouseButtonClicked(int arg1, QListViewItem arg2, QPoint arg3, int arg4);
		void ContextMenuRequested(QListViewItem arg1, QPoint arg2, int arg3);
		void OnItem(QListViewItem item);
		void OnViewport();
		void Expanded(QListViewItem item);
		void Collapsed(QListViewItem item);
		void Dropped(QDropEvent e);
		void ItemRenamed(QListViewItem item, int col, string arg3);
		void ItemRenamed(QListViewItem item, int col);
	}
}
