//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	/// See <see cref="IQLineEditSignals"></see> for signals emitted by QLineEdit
	public class QLineEdit : QFrame, IDisposable {
 		protected QLineEdit(Type dummy) : base((Type) null) {}
		interface IQLineEditProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQLineEditProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QLineEdit), this);
			_interceptor = (QLineEdit) realProxy.GetTransparentProxy();
		}
		private QLineEdit ProxyQLineEdit() {
			return (QLineEdit) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QLineEdit() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQLineEditProxy), null);
			_staticInterceptor = (IQLineEditProxy) realProxy.GetTransparentProxy();
		}
		private static IQLineEditProxy StaticQLineEdit() {
			return (IQLineEditProxy) _staticInterceptor;
		}

		enum E_EchoMode {
			Normal = 0,
			NoEcho = 1,
			Password = 2,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQLineEdit().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQLineEdit().ClassName();
		}
		public QLineEdit(QWidget parent, string name) : this((Type) null) {
			CreateQLineEditProxy();
			NewQLineEdit(parent,name);
		}
		private void NewQLineEdit(QWidget parent, string name) {
			ProxyQLineEdit().NewQLineEdit(parent,name);
		}
		public QLineEdit(QWidget parent) : this((Type) null) {
			CreateQLineEditProxy();
			NewQLineEdit(parent);
		}
		private void NewQLineEdit(QWidget parent) {
			ProxyQLineEdit().NewQLineEdit(parent);
		}
		public QLineEdit(string arg1, QWidget parent, string name) : this((Type) null) {
			CreateQLineEditProxy();
			NewQLineEdit(arg1,parent,name);
		}
		private void NewQLineEdit(string arg1, QWidget parent, string name) {
			ProxyQLineEdit().NewQLineEdit(arg1,parent,name);
		}
		public QLineEdit(string arg1, QWidget parent) : this((Type) null) {
			CreateQLineEditProxy();
			NewQLineEdit(arg1,parent);
		}
		private void NewQLineEdit(string arg1, QWidget parent) {
			ProxyQLineEdit().NewQLineEdit(arg1,parent);
		}
		public QLineEdit(string arg1, string arg2, QWidget parent, string name) : this((Type) null) {
			CreateQLineEditProxy();
			NewQLineEdit(arg1,arg2,parent,name);
		}
		private void NewQLineEdit(string arg1, string arg2, QWidget parent, string name) {
			ProxyQLineEdit().NewQLineEdit(arg1,arg2,parent,name);
		}
		public QLineEdit(string arg1, string arg2, QWidget parent) : this((Type) null) {
			CreateQLineEditProxy();
			NewQLineEdit(arg1,arg2,parent);
		}
		private void NewQLineEdit(string arg1, string arg2, QWidget parent) {
			ProxyQLineEdit().NewQLineEdit(arg1,arg2,parent);
		}
		public string Text() {
			return ProxyQLineEdit().Text();
		}
		public string DisplayText() {
			return ProxyQLineEdit().DisplayText();
		}
		public int MaxLength() {
			return ProxyQLineEdit().MaxLength();
		}
		public bool Frame() {
			return ProxyQLineEdit().Frame();
		}
		public int EchoMode() {
			return ProxyQLineEdit().EchoMode();
		}
		public bool IsReadOnly() {
			return ProxyQLineEdit().IsReadOnly();
		}
		public QValidator Validator() {
			return ProxyQLineEdit().Validator();
		}
		public new QSize SizeHint() {
			return ProxyQLineEdit().SizeHint();
		}
		public new QSize MinimumSizeHint() {
			return ProxyQLineEdit().MinimumSizeHint();
		}
		public int CursorPosition() {
			return ProxyQLineEdit().CursorPosition();
		}
		public bool ValidateAndSet(string arg1, int arg2, int arg3, int arg4) {
			return ProxyQLineEdit().ValidateAndSet(arg1,arg2,arg3,arg4);
		}
		public int Alignment() {
			return ProxyQLineEdit().Alignment();
		}
		public void CursorLeft(bool mark, int steps) {
			ProxyQLineEdit().CursorLeft(mark,steps);
		}
		public void CursorLeft(bool mark) {
			ProxyQLineEdit().CursorLeft(mark);
		}
		public void CursorRight(bool mark, int steps) {
			ProxyQLineEdit().CursorRight(mark,steps);
		}
		public void CursorRight(bool mark) {
			ProxyQLineEdit().CursorRight(mark);
		}
		public void CursorForward(bool mark, int steps) {
			ProxyQLineEdit().CursorForward(mark,steps);
		}
		public void CursorForward(bool mark) {
			ProxyQLineEdit().CursorForward(mark);
		}
		public void CursorBackward(bool mark, int steps) {
			ProxyQLineEdit().CursorBackward(mark,steps);
		}
		public void CursorBackward(bool mark) {
			ProxyQLineEdit().CursorBackward(mark);
		}
		public void CursorWordForward(bool mark) {
			ProxyQLineEdit().CursorWordForward(mark);
		}
		public void CursorWordBackward(bool mark) {
			ProxyQLineEdit().CursorWordBackward(mark);
		}
		public void Backspace() {
			ProxyQLineEdit().Backspace();
		}
		public void Del() {
			ProxyQLineEdit().Del();
		}
		public void Home(bool mark) {
			ProxyQLineEdit().Home(mark);
		}
		public void End(bool mark) {
			ProxyQLineEdit().End(mark);
		}
		public bool IsModified() {
			return ProxyQLineEdit().IsModified();
		}
		public void ClearModified() {
			ProxyQLineEdit().ClearModified();
		}
		public bool Edited() {
			return ProxyQLineEdit().Edited();
		}
		public void SetEdited(bool arg1) {
			ProxyQLineEdit().SetEdited(arg1);
		}
		public bool HasSelectedText() {
			return ProxyQLineEdit().HasSelectedText();
		}
		public string SelectedText() {
			return ProxyQLineEdit().SelectedText();
		}
		public int SelectionStart() {
			return ProxyQLineEdit().SelectionStart();
		}
		public bool IsUndoAvailable() {
			return ProxyQLineEdit().IsUndoAvailable();
		}
		public bool IsRedoAvailable() {
			return ProxyQLineEdit().IsRedoAvailable();
		}
		public bool HasMarkedText() {
			return ProxyQLineEdit().HasMarkedText();
		}
		public string MarkedText() {
			return ProxyQLineEdit().MarkedText();
		}
		public bool DragEnabled() {
			return ProxyQLineEdit().DragEnabled();
		}
		public string InputMask() {
			return ProxyQLineEdit().InputMask();
		}
		public void SetInputMask(string inputMask) {
			ProxyQLineEdit().SetInputMask(inputMask);
		}
		public bool HasAcceptableInput() {
			return ProxyQLineEdit().HasAcceptableInput();
		}
		public int CharacterAt(int arg1, char arg2) {
			return ProxyQLineEdit().CharacterAt(arg1,arg2);
		}
		public bool GetSelection(out int arg1, out int arg2) {
			return ProxyQLineEdit().GetSelection(out arg1,out arg2);
		}
		public virtual void SetText(string arg1) {
			ProxyQLineEdit().SetText(arg1);
		}
		public virtual void SelectAll() {
			ProxyQLineEdit().SelectAll();
		}
		public virtual void Deselect() {
			ProxyQLineEdit().Deselect();
		}
		public virtual void ClearValidator() {
			ProxyQLineEdit().ClearValidator();
		}
		public virtual void Insert(string arg1) {
			ProxyQLineEdit().Insert(arg1);
		}
		public virtual void Clear() {
			ProxyQLineEdit().Clear();
		}
		public virtual void Undo() {
			ProxyQLineEdit().Undo();
		}
		public virtual void Redo() {
			ProxyQLineEdit().Redo();
		}
		public virtual void SetMaxLength(int arg1) {
			ProxyQLineEdit().SetMaxLength(arg1);
		}
		public virtual void SetFrame(bool arg1) {
			ProxyQLineEdit().SetFrame(arg1);
		}
		public virtual void SetEchoMode(int arg1) {
			ProxyQLineEdit().SetEchoMode(arg1);
		}
		public virtual void SetReadOnly(bool arg1) {
			ProxyQLineEdit().SetReadOnly(arg1);
		}
		public virtual void SetValidator(QValidator arg1) {
			ProxyQLineEdit().SetValidator(arg1);
		}
		public new virtual void SetFont(QFont arg1) {
			ProxyQLineEdit().SetFont(arg1);
		}
		public new virtual void SetPalette(QPalette arg1) {
			ProxyQLineEdit().SetPalette(arg1);
		}
		public virtual void SetSelection(int arg1, int arg2) {
			ProxyQLineEdit().SetSelection(arg1,arg2);
		}
		public virtual void SetCursorPosition(int arg1) {
			ProxyQLineEdit().SetCursorPosition(arg1);
		}
		public virtual void SetAlignment(int flag) {
			ProxyQLineEdit().SetAlignment(flag);
		}
		public virtual void Cut() {
			ProxyQLineEdit().Cut();
		}
		public virtual void Copy() {
			ProxyQLineEdit().Copy();
		}
		public virtual void Paste() {
			ProxyQLineEdit().Paste();
		}
		public virtual void SetDragEnabled(bool b) {
			ProxyQLineEdit().SetDragEnabled(b);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQLineEdit().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQLineEdit().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQLineEdit().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQLineEdit().TrUtf8(arg1);
		}
		public new bool Event(QEvent arg1) {
			return ProxyQLineEdit().Event(arg1);
		}
		protected new void MousePressEvent(QMouseEvent arg1) {
			ProxyQLineEdit().MousePressEvent(arg1);
		}
		protected new void MouseMoveEvent(QMouseEvent arg1) {
			ProxyQLineEdit().MouseMoveEvent(arg1);
		}
		protected new void MouseReleaseEvent(QMouseEvent arg1) {
			ProxyQLineEdit().MouseReleaseEvent(arg1);
		}
		protected new void MouseDoubleClickEvent(QMouseEvent arg1) {
			ProxyQLineEdit().MouseDoubleClickEvent(arg1);
		}
		protected new void KeyPressEvent(QKeyEvent arg1) {
			ProxyQLineEdit().KeyPressEvent(arg1);
		}
		protected new void ImStartEvent(QIMEvent arg1) {
			ProxyQLineEdit().ImStartEvent(arg1);
		}
		protected new void ImComposeEvent(QIMEvent arg1) {
			ProxyQLineEdit().ImComposeEvent(arg1);
		}
		protected new void ImEndEvent(QIMEvent arg1) {
			ProxyQLineEdit().ImEndEvent(arg1);
		}
		protected new void FocusInEvent(QFocusEvent arg1) {
			ProxyQLineEdit().FocusInEvent(arg1);
		}
		protected new void FocusOutEvent(QFocusEvent arg1) {
			ProxyQLineEdit().FocusOutEvent(arg1);
		}
		protected new void ResizeEvent(QResizeEvent arg1) {
			ProxyQLineEdit().ResizeEvent(arg1);
		}
		protected new void DrawContents(QPainter arg1) {
			ProxyQLineEdit().DrawContents(arg1);
		}
		protected new void DragEnterEvent(QDragEnterEvent arg1) {
			ProxyQLineEdit().DragEnterEvent(arg1);
		}
		protected new void DragMoveEvent(QDragMoveEvent e) {
			ProxyQLineEdit().DragMoveEvent(e);
		}
		protected new void DragLeaveEvent(QDragLeaveEvent e) {
			ProxyQLineEdit().DragLeaveEvent(e);
		}
		protected new void DropEvent(QDropEvent arg1) {
			ProxyQLineEdit().DropEvent(arg1);
		}
		protected new void ContextMenuEvent(QContextMenuEvent arg1) {
			ProxyQLineEdit().ContextMenuEvent(arg1);
		}
		protected bool SendMouseEventToInputContext(QMouseEvent e) {
			return ProxyQLineEdit().SendMouseEventToInputContext(e);
		}
		protected virtual QPopupMenu CreatePopupMenu() {
			return ProxyQLineEdit().CreatePopupMenu();
		}
		protected new void WindowActivationChange(bool arg1) {
			ProxyQLineEdit().WindowActivationChange(arg1);
		}
		protected void RepaintArea(int arg1, int arg2) {
			ProxyQLineEdit().RepaintArea(arg1,arg2);
		}
		~QLineEdit() {
			ProxyQLineEdit().Dispose();
		}
		public new void Dispose() {
			ProxyQLineEdit().Dispose();
		}
	}

	public interface IQLineEditSignals {
		void TextChanged(string arg1);
		void ReturnPressed();
		void LostFocus();
		void SelectionChanged();
	}
}
