//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QWidgetIntDictIt : IDisposable {
		protected Object _interceptor = null;
 		protected QWidgetIntDictIt(Type dummy) : base() {}
		interface IQWidgetIntDictItProxy {
		}

		protected void CreateQWidgetIntDictItProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QWidgetIntDictIt), this);
			_interceptor = (QWidgetIntDictIt) realProxy.GetTransparentProxy();
		}
		private QWidgetIntDictIt ProxyQWidgetIntDictIt() {
			return (QWidgetIntDictIt) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QWidgetIntDictIt() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQWidgetIntDictItProxy), null);
			_staticInterceptor = (IQWidgetIntDictItProxy) realProxy.GetTransparentProxy();
		}
		private static IQWidgetIntDictItProxy StaticQWidgetIntDictIt() {
			return (IQWidgetIntDictItProxy) _staticInterceptor;
		}

		public QWidgetIntDictIt(QWidgetIntDict d) : this((Type) null) {
			CreateQWidgetIntDictItProxy();
			NewQWidgetIntDictIt(d);
		}
		private void NewQWidgetIntDictIt(QWidgetIntDict d) {
			ProxyQWidgetIntDictIt().NewQWidgetIntDictIt(d);
		}
		~QWidgetIntDictIt() {
			ProxyQWidgetIntDictIt().Dispose();
		}
		public void Dispose() {
			ProxyQWidgetIntDictIt().Dispose();
		}
	}
}
