//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QWidget : QObject, IQPaintDevice, IDisposable {
 		protected QWidget(Type dummy) : base((Type) null) {}
		interface IQWidgetProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
			void SetTabOrder(QWidget arg1, QWidget arg2);
			QWidget MouseGrabber();
			QWidget KeyboardGrabber();
			QWidget Find(ulong arg1);
		}

		protected void CreateQWidgetProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QWidget), this);
			_interceptor = (QWidget) realProxy.GetTransparentProxy();
		}
		private QWidget ProxyQWidget() {
			return (QWidget) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QWidget() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQWidgetProxy), null);
			_staticInterceptor = (IQWidgetProxy) realProxy.GetTransparentProxy();
		}
		private static IQWidgetProxy StaticQWidget() {
			return (IQWidgetProxy) _staticInterceptor;
		}

		enum E_FocusPolicy {
			NoFocus = 0,
			TabFocus = 0x1,
			ClickFocus = 0x2,
			StrongFocus = TabFocus|ClickFocus|0x8,
			WheelFocus = StrongFocus|0x4,
		}
		enum E_BackgroundOrigin {
			WidgetOrigin = 0,
			ParentOrigin = 1,
			WindowOrigin = 2,
			AncestorOrigin = 3,
		}
		public new virtual QMetaObject MetaObject() {
			return ProxyQWidget().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQWidget().ClassName();
		}
		public QWidget(QWidget parent, string name, int f) : this((Type) null) {
			CreateQWidgetProxy();
			NewQWidget(parent,name,f);
		}
		private void NewQWidget(QWidget parent, string name, int f) {
			ProxyQWidget().NewQWidget(parent,name,f);
		}
		public QWidget(QWidget parent, string name) : this((Type) null) {
			CreateQWidgetProxy();
			NewQWidget(parent,name);
		}
		private void NewQWidget(QWidget parent, string name) {
			ProxyQWidget().NewQWidget(parent,name);
		}
		public QWidget(QWidget parent) : this((Type) null) {
			CreateQWidgetProxy();
			NewQWidget(parent);
		}
		private void NewQWidget(QWidget parent) {
			ProxyQWidget().NewQWidget(parent);
		}
		public QWidget() : this((Type) null) {
			CreateQWidgetProxy();
			NewQWidget();
		}
		private void NewQWidget() {
			ProxyQWidget().NewQWidget();
		}
		public ulong WinId() {
			return ProxyQWidget().WinId();
		}
		public new void SetName(string name) {
			ProxyQWidget().SetName(name);
		}
		public QStyle Style() {
			return ProxyQWidget().Style();
		}
		public void SetStyle(QStyle arg1) {
			ProxyQWidget().SetStyle(arg1);
		}
		public QStyle SetStyle(string arg1) {
			return ProxyQWidget().SetStyle(arg1);
		}
		public bool IsTopLevel() {
			return ProxyQWidget().IsTopLevel();
		}
		public bool IsDialog() {
			return ProxyQWidget().IsDialog();
		}
		public bool IsPopup() {
			return ProxyQWidget().IsPopup();
		}
		public bool IsDesktop() {
			return ProxyQWidget().IsDesktop();
		}
		public bool IsModal() {
			return ProxyQWidget().IsModal();
		}
		public bool IsEnabled() {
			return ProxyQWidget().IsEnabled();
		}
		public bool IsEnabledTo(QWidget arg1) {
			return ProxyQWidget().IsEnabledTo(arg1);
		}
		public bool IsEnabledToTLW() {
			return ProxyQWidget().IsEnabledToTLW();
		}
		public QRect FrameGeometry() {
			return ProxyQWidget().FrameGeometry();
		}
		public QRect Geometry() {
			return ProxyQWidget().Geometry();
		}
		public int X() {
			return ProxyQWidget().X();
		}
		public int Y() {
			return ProxyQWidget().Y();
		}
		public QPoint Pos() {
			return ProxyQWidget().Pos();
		}
		public QSize FrameSize() {
			return ProxyQWidget().FrameSize();
		}
		public QSize Size() {
			return ProxyQWidget().Size();
		}
		public int Width() {
			return ProxyQWidget().Width();
		}
		public int Height() {
			return ProxyQWidget().Height();
		}
		public QRect Rect() {
			return ProxyQWidget().Rect();
		}
		public QRect ChildrenRect() {
			return ProxyQWidget().ChildrenRect();
		}
		public QRegion ChildrenRegion() {
			return ProxyQWidget().ChildrenRegion();
		}
		public QSize MinimumSize() {
			return ProxyQWidget().MinimumSize();
		}
		public QSize MaximumSize() {
			return ProxyQWidget().MaximumSize();
		}
		public int MinimumWidth() {
			return ProxyQWidget().MinimumWidth();
		}
		public int MinimumHeight() {
			return ProxyQWidget().MinimumHeight();
		}
		public int MaximumWidth() {
			return ProxyQWidget().MaximumWidth();
		}
		public int MaximumHeight() {
			return ProxyQWidget().MaximumHeight();
		}
		public void SetMinimumSize(QSize arg1) {
			ProxyQWidget().SetMinimumSize(arg1);
		}
		public virtual void SetMinimumSize(int minw, int minh) {
			ProxyQWidget().SetMinimumSize(minw,minh);
		}
		public void SetMaximumSize(QSize arg1) {
			ProxyQWidget().SetMaximumSize(arg1);
		}
		public virtual void SetMaximumSize(int maxw, int maxh) {
			ProxyQWidget().SetMaximumSize(maxw,maxh);
		}
		public void SetMinimumWidth(int minw) {
			ProxyQWidget().SetMinimumWidth(minw);
		}
		public void SetMinimumHeight(int minh) {
			ProxyQWidget().SetMinimumHeight(minh);
		}
		public void SetMaximumWidth(int maxw) {
			ProxyQWidget().SetMaximumWidth(maxw);
		}
		public void SetMaximumHeight(int maxh) {
			ProxyQWidget().SetMaximumHeight(maxh);
		}
		public QSize SizeIncrement() {
			return ProxyQWidget().SizeIncrement();
		}
		public void SetSizeIncrement(QSize arg1) {
			ProxyQWidget().SetSizeIncrement(arg1);
		}
		public virtual void SetSizeIncrement(int w, int h) {
			ProxyQWidget().SetSizeIncrement(w,h);
		}
		public QSize BaseSize() {
			return ProxyQWidget().BaseSize();
		}
		public void SetBaseSize(QSize arg1) {
			ProxyQWidget().SetBaseSize(arg1);
		}
		public void SetBaseSize(int basew, int baseh) {
			ProxyQWidget().SetBaseSize(basew,baseh);
		}
		public void SetFixedSize(QSize arg1) {
			ProxyQWidget().SetFixedSize(arg1);
		}
		public void SetFixedSize(int w, int h) {
			ProxyQWidget().SetFixedSize(w,h);
		}
		public void SetFixedWidth(int w) {
			ProxyQWidget().SetFixedWidth(w);
		}
		public void SetFixedHeight(int h) {
			ProxyQWidget().SetFixedHeight(h);
		}
		public QPoint MapToGlobal(QPoint arg1) {
			return ProxyQWidget().MapToGlobal(arg1);
		}
		public QPoint MapFromGlobal(QPoint arg1) {
			return ProxyQWidget().MapFromGlobal(arg1);
		}
		public QPoint MapToParent(QPoint arg1) {
			return ProxyQWidget().MapToParent(arg1);
		}
		public QPoint MapFromParent(QPoint arg1) {
			return ProxyQWidget().MapFromParent(arg1);
		}
		public QPoint MapTo(QWidget arg1, QPoint arg2) {
			return ProxyQWidget().MapTo(arg1,arg2);
		}
		public QPoint MapFrom(QWidget arg1, QPoint arg2) {
			return ProxyQWidget().MapFrom(arg1,arg2);
		}
		public QWidget TopLevelWidget() {
			return ProxyQWidget().TopLevelWidget();
		}
		public int BackgroundMode() {
			return ProxyQWidget().BackgroundMode();
		}
		public virtual void SetBackgroundMode(int arg1) {
			ProxyQWidget().SetBackgroundMode(arg1);
		}
		public void SetBackgroundMode(int arg1, int arg2) {
			ProxyQWidget().SetBackgroundMode(arg1,arg2);
		}
		public QColor ForegroundColor() {
			return ProxyQWidget().ForegroundColor();
		}
		public QColor EraseColor() {
			return ProxyQWidget().EraseColor();
		}
		public virtual void SetEraseColor(QColor arg1) {
			ProxyQWidget().SetEraseColor(arg1);
		}
		public QPixmap ErasePixmap() {
			return ProxyQWidget().ErasePixmap();
		}
		public virtual void SetErasePixmap(QPixmap arg1) {
			ProxyQWidget().SetErasePixmap(arg1);
		}
		public QColorGroup ColorGroup() {
			return ProxyQWidget().ColorGroup();
		}
		public QPalette Palette() {
			return ProxyQWidget().Palette();
		}
		public bool OwnPalette() {
			return ProxyQWidget().OwnPalette();
		}
		public virtual void SetPalette(QPalette arg1) {
			ProxyQWidget().SetPalette(arg1);
		}
		public void UnsetPalette() {
			ProxyQWidget().UnsetPalette();
		}
		public QColor PaletteForegroundColor() {
			return ProxyQWidget().PaletteForegroundColor();
		}
		public void SetPaletteForegroundColor(QColor arg1) {
			ProxyQWidget().SetPaletteForegroundColor(arg1);
		}
		public QColor PaletteBackgroundColor() {
			return ProxyQWidget().PaletteBackgroundColor();
		}
		public virtual void SetPaletteBackgroundColor(QColor arg1) {
			ProxyQWidget().SetPaletteBackgroundColor(arg1);
		}
		public QPixmap PaletteBackgroundPixmap() {
			return ProxyQWidget().PaletteBackgroundPixmap();
		}
		public virtual void SetPaletteBackgroundPixmap(QPixmap arg1) {
			ProxyQWidget().SetPaletteBackgroundPixmap(arg1);
		}
		public QBrush BackgroundBrush() {
			return ProxyQWidget().BackgroundBrush();
		}
		public QFont Font() {
			return ProxyQWidget().Font();
		}
		public bool OwnFont() {
			return ProxyQWidget().OwnFont();
		}
		public virtual void SetFont(QFont arg1) {
			ProxyQWidget().SetFont(arg1);
		}
		public void UnsetFont() {
			ProxyQWidget().UnsetFont();
		}
		public QFontMetrics FontMetrics() {
			return ProxyQWidget().FontMetrics();
		}
		public QFontInfo FontInfo() {
			return ProxyQWidget().FontInfo();
		}
		public QCursor Cursor() {
			return ProxyQWidget().Cursor();
		}
		public bool OwnCursor() {
			return ProxyQWidget().OwnCursor();
		}
		public virtual void SetCursor(QCursor arg1) {
			ProxyQWidget().SetCursor(arg1);
		}
		public virtual void UnsetCursor() {
			ProxyQWidget().UnsetCursor();
		}
		public string Caption() {
			return ProxyQWidget().Caption();
		}
		public QPixmap Icon() {
			return ProxyQWidget().Icon();
		}
		public string IconText() {
			return ProxyQWidget().IconText();
		}
		public bool HasMouseTracking() {
			return ProxyQWidget().HasMouseTracking();
		}
		public bool HasMouse() {
			return ProxyQWidget().HasMouse();
		}
		public virtual void SetMask(QBitmap arg1) {
			ProxyQWidget().SetMask(arg1);
		}
		public virtual void SetMask(QRegion arg1) {
			ProxyQWidget().SetMask(arg1);
		}
		public void ClearMask() {
			ProxyQWidget().ClearMask();
		}
		public QColor BackgroundColor() {
			return ProxyQWidget().BackgroundColor();
		}
		public virtual void SetBackgroundColor(QColor arg1) {
			ProxyQWidget().SetBackgroundColor(arg1);
		}
		public QPixmap BackgroundPixmap() {
			return ProxyQWidget().BackgroundPixmap();
		}
		public virtual void SetBackgroundPixmap(QPixmap arg1) {
			ProxyQWidget().SetBackgroundPixmap(arg1);
		}
		public bool IsActiveWindow() {
			return ProxyQWidget().IsActiveWindow();
		}
		public virtual void SetActiveWindow() {
			ProxyQWidget().SetActiveWindow();
		}
		public bool IsFocusEnabled() {
			return ProxyQWidget().IsFocusEnabled();
		}
		public int FocusPolicy() {
			return ProxyQWidget().FocusPolicy();
		}
		public virtual void SetFocusPolicy(int arg1) {
			ProxyQWidget().SetFocusPolicy(arg1);
		}
		public bool HasFocus() {
			return ProxyQWidget().HasFocus();
		}
		public virtual void SetFocusProxy(QWidget arg1) {
			ProxyQWidget().SetFocusProxy(arg1);
		}
		public QWidget FocusProxy() {
			return ProxyQWidget().FocusProxy();
		}
		public void SetInputMethodEnabled(bool b) {
			ProxyQWidget().SetInputMethodEnabled(b);
		}
		public bool IsInputMethodEnabled() {
			return ProxyQWidget().IsInputMethodEnabled();
		}
		public void GrabMouse() {
			ProxyQWidget().GrabMouse();
		}
		public void GrabMouse(QCursor arg1) {
			ProxyQWidget().GrabMouse(arg1);
		}
		public void ReleaseMouse() {
			ProxyQWidget().ReleaseMouse();
		}
		public void GrabKeyboard() {
			ProxyQWidget().GrabKeyboard();
		}
		public void ReleaseKeyboard() {
			ProxyQWidget().ReleaseKeyboard();
		}
		public bool IsUpdatesEnabled() {
			return ProxyQWidget().IsUpdatesEnabled();
		}
		public virtual bool Close(bool alsoDelete) {
			return ProxyQWidget().Close(alsoDelete);
		}
		public bool IsVisible() {
			return ProxyQWidget().IsVisible();
		}
		public bool IsVisibleTo(QWidget arg1) {
			return ProxyQWidget().IsVisibleTo(arg1);
		}
		public bool IsVisibleToTLW() {
			return ProxyQWidget().IsVisibleToTLW();
		}
		public QRect VisibleRect() {
			return ProxyQWidget().VisibleRect();
		}
		public bool IsHidden() {
			return ProxyQWidget().IsHidden();
		}
		public bool IsShown() {
			return ProxyQWidget().IsShown();
		}
		public bool IsMinimized() {
			return ProxyQWidget().IsMinimized();
		}
		public bool IsMaximized() {
			return ProxyQWidget().IsMaximized();
		}
		public bool IsFullScreen() {
			return ProxyQWidget().IsFullScreen();
		}
		public uint WindowState() {
			return ProxyQWidget().WindowState();
		}
		public void SetWindowState(uint windowState) {
			ProxyQWidget().SetWindowState(windowState);
		}
		public virtual QSize SizeHint() {
			return ProxyQWidget().SizeHint();
		}
		public virtual QSize MinimumSizeHint() {
			return ProxyQWidget().MinimumSizeHint();
		}
		public virtual QSizePolicy SizePolicy() {
			return ProxyQWidget().SizePolicy();
		}
		public virtual void SetSizePolicy(QSizePolicy arg1) {
			ProxyQWidget().SetSizePolicy(arg1);
		}
		public void SetSizePolicy(int hor, int ver, bool hfw) {
			ProxyQWidget().SetSizePolicy(hor,ver,hfw);
		}
		public void SetSizePolicy(int hor, int ver) {
			ProxyQWidget().SetSizePolicy(hor,ver);
		}
		public virtual int HeightForWidth(int arg1) {
			return ProxyQWidget().HeightForWidth(arg1);
		}
		public QRegion ClipRegion() {
			return ProxyQWidget().ClipRegion();
		}
		public QLayout Layout() {
			return ProxyQWidget().Layout();
		}
		public void UpdateGeometry() {
			ProxyQWidget().UpdateGeometry();
		}
		public virtual void Reparent(QWidget parent, int arg2, QPoint arg3, bool showIt) {
			ProxyQWidget().Reparent(parent,arg2,arg3,showIt);
		}
		public virtual void Reparent(QWidget parent, int arg2, QPoint arg3) {
			ProxyQWidget().Reparent(parent,arg2,arg3);
		}
		public void Reparent(QWidget parent, QPoint arg2, bool showIt) {
			ProxyQWidget().Reparent(parent,arg2,showIt);
		}
		public void Reparent(QWidget parent, QPoint arg2) {
			ProxyQWidget().Reparent(parent,arg2);
		}
		public void Recreate(QWidget parent, int f, QPoint p, bool showIt) {
			ProxyQWidget().Recreate(parent,f,p,showIt);
		}
		public void Recreate(QWidget parent, int f, QPoint p) {
			ProxyQWidget().Recreate(parent,f,p);
		}
		public void Erase() {
			ProxyQWidget().Erase();
		}
		public void Erase(int x, int y, int w, int h) {
			ProxyQWidget().Erase(x,y,w,h);
		}
		public void Erase(QRect arg1) {
			ProxyQWidget().Erase(arg1);
		}
		public void Erase(QRegion arg1) {
			ProxyQWidget().Erase(arg1);
		}
		public void Scroll(int dx, int dy) {
			ProxyQWidget().Scroll(dx,dy);
		}
		public void Scroll(int dx, int dy, QRect arg3) {
			ProxyQWidget().Scroll(dx,dy,arg3);
		}
		public void DrawText(int x, int y, string arg3) {
			ProxyQWidget().DrawText(x,y,arg3);
		}
		public void DrawText(QPoint arg1, string arg2) {
			ProxyQWidget().DrawText(arg1,arg2);
		}
		public QWidget FocusWidget() {
			return ProxyQWidget().FocusWidget();
		}
		public QRect MicroFocusHint() {
			return ProxyQWidget().MicroFocusHint();
		}
		public bool AcceptDrops() {
			return ProxyQWidget().AcceptDrops();
		}
		public virtual void SetAcceptDrops(bool on) {
			ProxyQWidget().SetAcceptDrops(on);
		}
		public virtual void SetAutoMask(bool arg1) {
			ProxyQWidget().SetAutoMask(arg1);
		}
		public bool AutoMask() {
			return ProxyQWidget().AutoMask();
		}
		public virtual void SetBackgroundOrigin(int arg1) {
			ProxyQWidget().SetBackgroundOrigin(arg1);
		}
		public int BackgroundOrigin() {
			return ProxyQWidget().BackgroundOrigin();
		}
		public QPoint BackgroundOffset() {
			return ProxyQWidget().BackgroundOffset();
		}
		public virtual bool CustomWhatsThis() {
			return ProxyQWidget().CustomWhatsThis();
		}
		public QWidget ParentWidget(bool sameWindow) {
			return ProxyQWidget().ParentWidget(sameWindow);
		}
		public QWidget ParentWidget() {
			return ProxyQWidget().ParentWidget();
		}
		public int TestWState(int s) {
			return ProxyQWidget().TestWState(s);
		}
		public int TestWFlags(int f) {
			return ProxyQWidget().TestWFlags(f);
		}
		public QWidget ChildAt(int x, int y, bool includeThis) {
			return ProxyQWidget().ChildAt(x,y,includeThis);
		}
		public QWidget ChildAt(int x, int y) {
			return ProxyQWidget().ChildAt(x,y);
		}
		public QWidget ChildAt(QPoint arg1, bool includeThis) {
			return ProxyQWidget().ChildAt(arg1,includeThis);
		}
		public QWidget ChildAt(QPoint arg1) {
			return ProxyQWidget().ChildAt(arg1);
		}
		public void SetWindowOpacity(double level) {
			ProxyQWidget().SetWindowOpacity(level);
		}
		public double WindowOpacity() {
			return ProxyQWidget().WindowOpacity();
		}
		public void SetPalette(QPalette p, bool arg2) {
			ProxyQWidget().SetPalette(p,arg2);
		}
		public void SetFont(QFont f, bool arg2) {
			ProxyQWidget().SetFont(f,arg2);
		}
		public virtual void SetEnabled(bool arg1) {
			ProxyQWidget().SetEnabled(arg1);
		}
		public void SetDisabled(bool arg1) {
			ProxyQWidget().SetDisabled(arg1);
		}
		public virtual void SetCaption(string arg1) {
			ProxyQWidget().SetCaption(arg1);
		}
		public virtual void SetIcon(QPixmap arg1) {
			ProxyQWidget().SetIcon(arg1);
		}
		public virtual void SetIconText(string arg1) {
			ProxyQWidget().SetIconText(arg1);
		}
		public virtual void SetMouseTracking(bool enable) {
			ProxyQWidget().SetMouseTracking(enable);
		}
		public virtual void SetFocus() {
			ProxyQWidget().SetFocus();
		}
		public void ClearFocus() {
			ProxyQWidget().ClearFocus();
		}
		public virtual void SetUpdatesEnabled(bool enable) {
			ProxyQWidget().SetUpdatesEnabled(enable);
		}
		public void Update() {
			ProxyQWidget().Update();
		}
		public void Update(int x, int y, int w, int h) {
			ProxyQWidget().Update(x,y,w,h);
		}
		public void Update(QRect arg1) {
			ProxyQWidget().Update(arg1);
		}
		public void Repaint() {
			ProxyQWidget().Repaint();
		}
		public void Repaint(bool erase) {
			ProxyQWidget().Repaint(erase);
		}
		public void Repaint(int x, int y, int w, int h, bool erase) {
			ProxyQWidget().Repaint(x,y,w,h,erase);
		}
		public void Repaint(int x, int y, int w, int h) {
			ProxyQWidget().Repaint(x,y,w,h);
		}
		public void Repaint(QRect arg1, bool erase) {
			ProxyQWidget().Repaint(arg1,erase);
		}
		public void Repaint(QRect arg1) {
			ProxyQWidget().Repaint(arg1);
		}
		public void Repaint(QRegion arg1, bool erase) {
			ProxyQWidget().Repaint(arg1,erase);
		}
		public void Repaint(QRegion arg1) {
			ProxyQWidget().Repaint(arg1);
		}
		public virtual void Show() {
			ProxyQWidget().Show();
		}
		public virtual void Hide() {
			ProxyQWidget().Hide();
		}
		public void SetShown(bool show) {
			ProxyQWidget().SetShown(show);
		}
		public void SetHidden(bool hide) {
			ProxyQWidget().SetHidden(hide);
		}
		public void Iconify() {
			ProxyQWidget().Iconify();
		}
		public virtual void ShowMinimized() {
			ProxyQWidget().ShowMinimized();
		}
		public virtual void ShowMaximized() {
			ProxyQWidget().ShowMaximized();
		}
		public void ShowFullScreen() {
			ProxyQWidget().ShowFullScreen();
		}
		public virtual void ShowNormal() {
			ProxyQWidget().ShowNormal();
		}
		public virtual void Polish() {
			ProxyQWidget().Polish();
		}
		public void ConstPolish() {
			ProxyQWidget().ConstPolish();
		}
		public bool Close() {
			return ProxyQWidget().Close();
		}
		public void Raise() {
			ProxyQWidget().Raise();
		}
		public void Lower() {
			ProxyQWidget().Lower();
		}
		public void StackUnder(QWidget arg1) {
			ProxyQWidget().StackUnder(arg1);
		}
		public virtual void Move(int x, int y) {
			ProxyQWidget().Move(x,y);
		}
		public void Move(QPoint arg1) {
			ProxyQWidget().Move(arg1);
		}
		public virtual void Resize(int w, int h) {
			ProxyQWidget().Resize(w,h);
		}
		public void Resize(QSize arg1) {
			ProxyQWidget().Resize(arg1);
		}
		public virtual void SetGeometry(int x, int y, int w, int h) {
			ProxyQWidget().SetGeometry(x,y,w,h);
		}
		public virtual void SetGeometry(QRect arg1) {
			ProxyQWidget().SetGeometry(arg1);
		}
		public virtual void AdjustSize() {
			ProxyQWidget().AdjustSize();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQWidget().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQWidget().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQWidget().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQWidget().TrUtf8(arg1);
		}
		public static void SetTabOrder(QWidget arg1, QWidget arg2) {
			StaticQWidget().SetTabOrder(arg1,arg2);
		}
		public static QWidget MouseGrabber() {
			return StaticQWidget().MouseGrabber();
		}
		public static QWidget KeyboardGrabber() {
			return StaticQWidget().KeyboardGrabber();
		}
		public static QWidget Find(ulong arg1) {
			return StaticQWidget().Find(arg1);
		}
		// QWidgetMapper* wmapper(); >>>> NOT CONVERTED
		public new bool Event(QEvent arg1) {
			return ProxyQWidget().Event(arg1);
		}
		protected virtual void MousePressEvent(QMouseEvent arg1) {
			ProxyQWidget().MousePressEvent(arg1);
		}
		protected virtual void MouseReleaseEvent(QMouseEvent arg1) {
			ProxyQWidget().MouseReleaseEvent(arg1);
		}
		protected virtual void MouseDoubleClickEvent(QMouseEvent arg1) {
			ProxyQWidget().MouseDoubleClickEvent(arg1);
		}
		protected virtual void MouseMoveEvent(QMouseEvent arg1) {
			ProxyQWidget().MouseMoveEvent(arg1);
		}
		protected virtual void WheelEvent(QWheelEvent arg1) {
			ProxyQWidget().WheelEvent(arg1);
		}
		protected virtual void KeyPressEvent(QKeyEvent arg1) {
			ProxyQWidget().KeyPressEvent(arg1);
		}
		protected virtual void KeyReleaseEvent(QKeyEvent arg1) {
			ProxyQWidget().KeyReleaseEvent(arg1);
		}
		protected virtual void FocusInEvent(QFocusEvent arg1) {
			ProxyQWidget().FocusInEvent(arg1);
		}
		protected virtual void FocusOutEvent(QFocusEvent arg1) {
			ProxyQWidget().FocusOutEvent(arg1);
		}
		protected virtual void EnterEvent(QEvent arg1) {
			ProxyQWidget().EnterEvent(arg1);
		}
		protected virtual void LeaveEvent(QEvent arg1) {
			ProxyQWidget().LeaveEvent(arg1);
		}
		protected virtual void PaintEvent(QPaintEvent arg1) {
			ProxyQWidget().PaintEvent(arg1);
		}
		protected virtual void MoveEvent(QMoveEvent arg1) {
			ProxyQWidget().MoveEvent(arg1);
		}
		protected virtual void ResizeEvent(QResizeEvent arg1) {
			ProxyQWidget().ResizeEvent(arg1);
		}
		protected virtual void CloseEvent(QCloseEvent arg1) {
			ProxyQWidget().CloseEvent(arg1);
		}
		protected virtual void ContextMenuEvent(QContextMenuEvent arg1) {
			ProxyQWidget().ContextMenuEvent(arg1);
		}
		protected virtual void ImStartEvent(QIMEvent arg1) {
			ProxyQWidget().ImStartEvent(arg1);
		}
		protected virtual void ImComposeEvent(QIMEvent arg1) {
			ProxyQWidget().ImComposeEvent(arg1);
		}
		protected virtual void ImEndEvent(QIMEvent arg1) {
			ProxyQWidget().ImEndEvent(arg1);
		}
		protected virtual void TabletEvent(QTabletEvent arg1) {
			ProxyQWidget().TabletEvent(arg1);
		}
		protected virtual void DragEnterEvent(QDragEnterEvent arg1) {
			ProxyQWidget().DragEnterEvent(arg1);
		}
		protected virtual void DragMoveEvent(QDragMoveEvent arg1) {
			ProxyQWidget().DragMoveEvent(arg1);
		}
		protected virtual void DragLeaveEvent(QDragLeaveEvent arg1) {
			ProxyQWidget().DragLeaveEvent(arg1);
		}
		protected virtual void DropEvent(QDropEvent arg1) {
			ProxyQWidget().DropEvent(arg1);
		}
		public virtual void ShowEvent(QShowEvent arg1) {
			ProxyQWidget().ShowEvent(arg1);
		}
		protected virtual void HideEvent(QHideEvent arg1) {
			ProxyQWidget().HideEvent(arg1);
		}
		protected virtual void UpdateMask() {
			ProxyQWidget().UpdateMask();
		}
		public virtual void StyleChange(QStyle arg1) {
			ProxyQWidget().StyleChange(arg1);
		}
		protected virtual void EnabledChange(bool oldEnabled) {
			ProxyQWidget().EnabledChange(oldEnabled);
		}
		protected virtual void PaletteChange(QPalette arg1) {
			ProxyQWidget().PaletteChange(arg1);
		}
		protected virtual void FontChange(QFont arg1) {
			ProxyQWidget().FontChange(arg1);
		}
		protected virtual void WindowActivationChange(bool oldActive) {
			ProxyQWidget().WindowActivationChange(oldActive);
		}
		protected int Metric(int arg1) {
			return ProxyQWidget().Metric(arg1);
		}
		protected void ResetInputContext() {
			ProxyQWidget().ResetInputContext();
		}
		protected virtual void Create(ulong arg1, bool initializeWindow, bool destroyOldWindow) {
			ProxyQWidget().Create(arg1,initializeWindow,destroyOldWindow);
		}
		protected virtual void Create(ulong arg1, bool initializeWindow) {
			ProxyQWidget().Create(arg1,initializeWindow);
		}
		protected virtual void Create(ulong arg1) {
			ProxyQWidget().Create(arg1);
		}
		protected virtual void Create() {
			ProxyQWidget().Create();
		}
		protected virtual void Destroy(bool destroyWindow, bool destroySubWindows) {
			ProxyQWidget().Destroy(destroyWindow,destroySubWindows);
		}
		protected virtual void Destroy(bool destroyWindow) {
			ProxyQWidget().Destroy(destroyWindow);
		}
		protected virtual void Destroy() {
			ProxyQWidget().Destroy();
		}
		protected uint GetWState() {
			return ProxyQWidget().GetWState();
		}
		protected virtual void SetWState(uint arg1) {
			ProxyQWidget().SetWState(arg1);
		}
		protected void ClearWState(uint n) {
			ProxyQWidget().ClearWState(n);
		}
		protected int GetWFlags() {
			return ProxyQWidget().GetWFlags();
		}
		protected virtual void SetWFlags(int arg1) {
			ProxyQWidget().SetWFlags(arg1);
		}
		protected void ClearWFlags(int n) {
			ProxyQWidget().ClearWFlags(n);
		}
		protected virtual bool FocusNextPrevChild(bool next) {
			return ProxyQWidget().FocusNextPrevChild(next);
		}
		// QWExtra* extraData(); >>>> NOT CONVERTED
		// QTLWExtra* topData(); >>>> NOT CONVERTED
		protected QFocusData FocusData() {
			return ProxyQWidget().FocusData();
		}
		protected virtual void SetKeyCompression(bool arg1) {
			ProxyQWidget().SetKeyCompression(arg1);
		}
		protected virtual void SetMicroFocusHint(int x, int y, int w, int h, bool text, QFont f) {
			ProxyQWidget().SetMicroFocusHint(x,y,w,h,text,f);
		}
		protected virtual void SetMicroFocusHint(int x, int y, int w, int h, bool text) {
			ProxyQWidget().SetMicroFocusHint(x,y,w,h,text);
		}
		protected virtual void SetMicroFocusHint(int x, int y, int w, int h) {
			ProxyQWidget().SetMicroFocusHint(x,y,w,h);
		}
		~QWidget() {
			ProxyQWidget().Dispose();
		}
		public new void Dispose() {
			ProxyQWidget().Dispose();
		}
		public int DevType() {
			return ProxyQWidget().DevType();
		}
		public bool IsExtDev() {
			return ProxyQWidget().IsExtDev();
		}
		public bool PaintingActive() {
			return ProxyQWidget().PaintingActive();
		}
		public virtual void SetResolution(int arg1) {
			ProxyQWidget().SetResolution(arg1);
		}
		public virtual int Resolution() {
			return ProxyQWidget().Resolution();
		}
		// bool cmd(int arg1,QPainter* arg2,QPDevCmdParam* arg3); >>>> NOT CONVERTED
		protected virtual int FontMet(QFont arg1, int arg2, string arg3, int arg4) {
			return ProxyQWidget().FontMet(arg1,arg2,arg3,arg4);
		}
		protected virtual int FontMet(QFont arg1, int arg2, string arg3) {
			return ProxyQWidget().FontMet(arg1,arg2,arg3);
		}
		protected virtual int FontMet(QFont arg1, int arg2) {
			return ProxyQWidget().FontMet(arg1,arg2);
		}
		protected virtual int FontInf(QFont arg1, int arg2) {
			return ProxyQWidget().FontInf(arg1,arg2);
		}

	}
}
