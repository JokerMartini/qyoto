//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	[SmokeClass("QGCacheIterator")]
	public class QGCacheIterator : MarshalByRefObject {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QGCacheIterator(Type dummy) {}
		interface IQGCacheIteratorProxy {
		}

		protected void CreateQGCacheIteratorProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QGCacheIterator), this);
			_interceptor = (QGCacheIterator) realProxy.GetTransparentProxy();
		}
		private QGCacheIterator ProxyQGCacheIterator() {
			return (QGCacheIterator) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QGCacheIterator() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQGCacheIteratorProxy), null);
			_staticInterceptor = (IQGCacheIteratorProxy) realProxy.GetTransparentProxy();
		}
		private static IQGCacheIteratorProxy StaticQGCacheIterator() {
			return (IQGCacheIteratorProxy) _staticInterceptor;
		}

		public QGCacheIterator(QGCache arg1) : this((Type) null) {
			CreateQGCacheIteratorProxy();
			NewQGCacheIterator(arg1);
		}
		[SmokeMethod("QGCacheIterator(const QGCache&)")]
		private void NewQGCacheIterator(QGCache arg1) {
			ProxyQGCacheIterator().NewQGCacheIterator(arg1);
		}
		public QGCacheIterator(QGCacheIterator arg1) : this((Type) null) {
			CreateQGCacheIteratorProxy();
			NewQGCacheIterator(arg1);
		}
		[SmokeMethod("QGCacheIterator(const QGCacheIterator&)")]
		private void NewQGCacheIterator(QGCacheIterator arg1) {
			ProxyQGCacheIterator().NewQGCacheIterator(arg1);
		}
		[SmokeMethod("count() const")]
		protected uint Count() {
			return ProxyQGCacheIterator().Count();
		}
		[SmokeMethod("atFirst() const")]
		protected bool AtFirst() {
			return ProxyQGCacheIterator().AtFirst();
		}
		[SmokeMethod("atLast() const")]
		protected bool AtLast() {
			return ProxyQGCacheIterator().AtLast();
		}
		// QPtrCollection::Item toFirst(); >>>> NOT CONVERTED
		// QPtrCollection::Item toLast(); >>>> NOT CONVERTED
		// QPtrCollection::Item get(); >>>> NOT CONVERTED
		[SmokeMethod("getKeyString() const")]
		protected string GetKeyString() {
			return ProxyQGCacheIterator().GetKeyString();
		}
		[SmokeMethod("getKeyAscii() const")]
		protected string GetKeyAscii() {
			return ProxyQGCacheIterator().GetKeyAscii();
		}
		[SmokeMethod("getKeyInt() const")]
		protected long GetKeyInt() {
			return ProxyQGCacheIterator().GetKeyInt();
		}
		// QPtrCollection::Item operator()(); >>>> NOT CONVERTED
		// QPtrCollection::Item operator++(); >>>> NOT CONVERTED
		// QPtrCollection::Item operator--(); >>>> NOT CONVERTED
	}
}
