//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QCheckTableItem : QTableItem, IDisposable {
 		protected QCheckTableItem(Type dummy) : base((Type) null) {}
		interface IQCheckTableItemProxy {
		}

		protected void CreateQCheckTableItemProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QCheckTableItem), this);
			_interceptor = (QCheckTableItem) realProxy.GetTransparentProxy();
		}
		private QCheckTableItem ProxyQCheckTableItem() {
			return (QCheckTableItem) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QCheckTableItem() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQCheckTableItemProxy), null);
			_staticInterceptor = (IQCheckTableItemProxy) realProxy.GetTransparentProxy();
		}
		private static IQCheckTableItemProxy StaticQCheckTableItem() {
			return (IQCheckTableItemProxy) _staticInterceptor;
		}

		public QCheckTableItem(QTable table, string txt) : this((Type) null) {
			CreateQCheckTableItemProxy();
			NewQCheckTableItem(table,txt);
		}
		private void NewQCheckTableItem(QTable table, string txt) {
			ProxyQCheckTableItem().NewQCheckTableItem(table,txt);
		}
		public new void SetText(string t) {
			ProxyQCheckTableItem().SetText(t);
		}
		public new virtual QWidget CreateEditor() {
			return ProxyQCheckTableItem().CreateEditor();
		}
		public new virtual void SetContentFromEditor(QWidget w) {
			ProxyQCheckTableItem().SetContentFromEditor(w);
		}
		public new virtual void Paint(QPainter p, QColorGroup cg, QRect cr, bool selected) {
			ProxyQCheckTableItem().Paint(p,cg,cr,selected);
		}
		public virtual void SetChecked(bool b) {
			ProxyQCheckTableItem().SetChecked(b);
		}
		public bool IsChecked() {
			return ProxyQCheckTableItem().IsChecked();
		}
		public new int Rtti() {
			return ProxyQCheckTableItem().Rtti();
		}
		public new QSize SizeHint() {
			return ProxyQCheckTableItem().SizeHint();
		}
		~QCheckTableItem() {
			ProxyQCheckTableItem().Dispose();
		}
		public new void Dispose() {
			ProxyQCheckTableItem().Dispose();
		}
	}
}
