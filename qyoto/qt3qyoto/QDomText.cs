//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QDomText : QDomCharacterData, IDisposable {
 		protected QDomText(Type dummy) : base((Type) null) {}
		interface IQDomTextProxy {
		}

		protected void CreateQDomTextProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDomText), this);
			_interceptor = (QDomText) realProxy.GetTransparentProxy();
		}
		private QDomText ProxyQDomText() {
			return (QDomText) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDomText() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDomTextProxy), null);
			_staticInterceptor = (IQDomTextProxy) realProxy.GetTransparentProxy();
		}
		private static IQDomTextProxy StaticQDomText() {
			return (IQDomTextProxy) _staticInterceptor;
		}

		public QDomText() : this((Type) null) {
			CreateQDomTextProxy();
			NewQDomText();
		}
		private void NewQDomText() {
			ProxyQDomText().NewQDomText();
		}
		public QDomText(QDomText x) : this((Type) null) {
			CreateQDomTextProxy();
			NewQDomText(x);
		}
		private void NewQDomText(QDomText x) {
			ProxyQDomText().NewQDomText(x);
		}
		public QDomText SplitText(int offset) {
			return ProxyQDomText().SplitText(offset);
		}
		public new int NodeType() {
			return ProxyQDomText().NodeType();
		}
		public new bool IsText() {
			return ProxyQDomText().IsText();
		}
		~QDomText() {
			ProxyQDomText().Dispose();
		}
		public new void Dispose() {
			ProxyQDomText().Dispose();
		}
	}
}
