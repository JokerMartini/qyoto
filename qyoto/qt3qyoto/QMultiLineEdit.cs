//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QMultiLineEdit : QTextEdit, IDisposable {
 		protected QMultiLineEdit(Type dummy) : base((Type) null) {}
		interface IQMultiLineEditProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
		}

		protected void CreateQMultiLineEditProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QMultiLineEdit), this);
			_interceptor = (QMultiLineEdit) realProxy.GetTransparentProxy();
		}
		private QMultiLineEdit ProxyQMultiLineEdit() {
			return (QMultiLineEdit) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QMultiLineEdit() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQMultiLineEditProxy), null);
			_staticInterceptor = (IQMultiLineEditProxy) realProxy.GetTransparentProxy();
		}
		private static IQMultiLineEditProxy StaticQMultiLineEdit() {
			return (IQMultiLineEditProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQMultiLineEdit().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQMultiLineEdit().ClassName();
		}
		public QMultiLineEdit(QWidget parent, string name) : this((Type) null) {
			CreateQMultiLineEditProxy();
			NewQMultiLineEdit(parent,name);
		}
		private void NewQMultiLineEdit(QWidget parent, string name) {
			ProxyQMultiLineEdit().NewQMultiLineEdit(parent,name);
		}
		public QMultiLineEdit(QWidget parent) : this((Type) null) {
			CreateQMultiLineEditProxy();
			NewQMultiLineEdit(parent);
		}
		private void NewQMultiLineEdit(QWidget parent) {
			ProxyQMultiLineEdit().NewQMultiLineEdit(parent);
		}
		public QMultiLineEdit() : this((Type) null) {
			CreateQMultiLineEditProxy();
			NewQMultiLineEdit();
		}
		private void NewQMultiLineEdit() {
			ProxyQMultiLineEdit().NewQMultiLineEdit();
		}
		public string TextLine(int line) {
			return ProxyQMultiLineEdit().TextLine(line);
		}
		public int NumLines() {
			return ProxyQMultiLineEdit().NumLines();
		}
		public virtual void InsertLine(string s, int line) {
			ProxyQMultiLineEdit().InsertLine(s,line);
		}
		public virtual void InsertLine(string s) {
			ProxyQMultiLineEdit().InsertLine(s);
		}
		public new virtual void InsertAt(string s, int line, int col) {
			ProxyQMultiLineEdit().InsertAt(s,line,col);
		}
		public new virtual void InsertAt(string s, int line, int col, bool mark) {
			ProxyQMultiLineEdit().InsertAt(s,line,col,mark);
		}
		public virtual void RemoveLine(int line) {
			ProxyQMultiLineEdit().RemoveLine(line);
		}
		public new virtual void SetCursorPosition(int line, int col) {
			ProxyQMultiLineEdit().SetCursorPosition(line,col);
		}
		public new virtual void SetCursorPosition(int line, int col, bool mark) {
			ProxyQMultiLineEdit().SetCursorPosition(line,col,mark);
		}
		public bool AtBeginning() {
			return ProxyQMultiLineEdit().AtBeginning();
		}
		public bool AtEnd() {
			return ProxyQMultiLineEdit().AtEnd();
		}
		public new void SetAlignment(int flags) {
			ProxyQMultiLineEdit().SetAlignment(flags);
		}
		public new int Alignment() {
			return ProxyQMultiLineEdit().Alignment();
		}
		public void SetEdited(bool arg1) {
			ProxyQMultiLineEdit().SetEdited(arg1);
		}
		public bool Edited() {
			return ProxyQMultiLineEdit().Edited();
		}
		public bool HasMarkedText() {
			return ProxyQMultiLineEdit().HasMarkedText();
		}
		public string MarkedText() {
			return ProxyQMultiLineEdit().MarkedText();
		}
		public void CursorWordForward(bool mark) {
			ProxyQMultiLineEdit().CursorWordForward(mark);
		}
		public void CursorWordBackward(bool mark) {
			ProxyQMultiLineEdit().CursorWordBackward(mark);
		}
		public bool AutoUpdate() {
			return ProxyQMultiLineEdit().AutoUpdate();
		}
		public virtual void SetAutoUpdate(bool arg1) {
			ProxyQMultiLineEdit().SetAutoUpdate(arg1);
		}
		public int TotalWidth() {
			return ProxyQMultiLineEdit().TotalWidth();
		}
		public int TotalHeight() {
			return ProxyQMultiLineEdit().TotalHeight();
		}
		public int MaxLines() {
			return ProxyQMultiLineEdit().MaxLines();
		}
		public void SetMaxLines(int arg1) {
			ProxyQMultiLineEdit().SetMaxLines(arg1);
		}
		public void Deselect() {
			ProxyQMultiLineEdit().Deselect();
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQMultiLineEdit().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQMultiLineEdit().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQMultiLineEdit().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQMultiLineEdit().TrUtf8(arg1);
		}
		protected QPoint CursorPoint() {
			return ProxyQMultiLineEdit().CursorPoint();
		}
		protected virtual void InsertAndMark(string arg1, bool mark) {
			ProxyQMultiLineEdit().InsertAndMark(arg1,mark);
		}
		protected virtual void NewLine() {
			ProxyQMultiLineEdit().NewLine();
		}
		protected virtual void KillLine() {
			ProxyQMultiLineEdit().KillLine();
		}
		protected virtual void PageUp(bool mark) {
			ProxyQMultiLineEdit().PageUp(mark);
		}
		protected virtual void PageUp() {
			ProxyQMultiLineEdit().PageUp();
		}
		protected virtual void PageDown(bool mark) {
			ProxyQMultiLineEdit().PageDown(mark);
		}
		protected virtual void PageDown() {
			ProxyQMultiLineEdit().PageDown();
		}
		protected virtual void CursorLeft(bool mark, bool wrap) {
			ProxyQMultiLineEdit().CursorLeft(mark,wrap);
		}
		protected virtual void CursorLeft(bool mark) {
			ProxyQMultiLineEdit().CursorLeft(mark);
		}
		protected virtual void CursorLeft() {
			ProxyQMultiLineEdit().CursorLeft();
		}
		protected virtual void CursorRight(bool mark, bool wrap) {
			ProxyQMultiLineEdit().CursorRight(mark,wrap);
		}
		protected virtual void CursorRight(bool mark) {
			ProxyQMultiLineEdit().CursorRight(mark);
		}
		protected virtual void CursorRight() {
			ProxyQMultiLineEdit().CursorRight();
		}
		protected virtual void CursorUp(bool mark) {
			ProxyQMultiLineEdit().CursorUp(mark);
		}
		protected virtual void CursorUp() {
			ProxyQMultiLineEdit().CursorUp();
		}
		protected virtual void CursorDown(bool mark) {
			ProxyQMultiLineEdit().CursorDown(mark);
		}
		protected virtual void CursorDown() {
			ProxyQMultiLineEdit().CursorDown();
		}
		protected virtual void Backspace() {
			ProxyQMultiLineEdit().Backspace();
		}
		protected virtual void Home(bool mark) {
			ProxyQMultiLineEdit().Home(mark);
		}
		protected virtual void Home() {
			ProxyQMultiLineEdit().Home();
		}
		protected virtual void End(bool mark) {
			ProxyQMultiLineEdit().End(mark);
		}
		protected virtual void End() {
			ProxyQMultiLineEdit().End();
		}
		protected bool GetMarkedRegion(out int line1, out int col1, out int line2, out int col2) {
			return ProxyQMultiLineEdit().GetMarkedRegion(out line1,out col1,out line2,out col2);
		}
		protected int LineLength(int row) {
			return ProxyQMultiLineEdit().LineLength(row);
		}
		~QMultiLineEdit() {
			ProxyQMultiLineEdit().Dispose();
		}
		public new void Dispose() {
			ProxyQMultiLineEdit().Dispose();
		}
	}
}
