//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QIconDragItem : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QIconDragItem(Type dummy) {}
		interface IQIconDragItemProxy {
			bool op_equals(QIconDragItem lhs, QIconDragItem arg1);
		}

		protected void CreateQIconDragItemProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QIconDragItem), this);
			_interceptor = (QIconDragItem) realProxy.GetTransparentProxy();
		}
		private QIconDragItem ProxyQIconDragItem() {
			return (QIconDragItem) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QIconDragItem() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQIconDragItemProxy), null);
			_staticInterceptor = (IQIconDragItemProxy) realProxy.GetTransparentProxy();
		}
		private static IQIconDragItemProxy StaticQIconDragItem() {
			return (IQIconDragItemProxy) _staticInterceptor;
		}

		public QIconDragItem() : this((Type) null) {
			CreateQIconDragItemProxy();
			NewQIconDragItem();
		}
		private void NewQIconDragItem() {
			ProxyQIconDragItem().NewQIconDragItem();
		}
		public virtual byte[] Data() {
			return ProxyQIconDragItem().Data();
		}
		public virtual void SetData(byte[] d) {
			ProxyQIconDragItem().SetData(d);
		}
		public static bool operator==(QIconDragItem lhs, QIconDragItem arg1) {
			return StaticQIconDragItem().op_equals(lhs,arg1);
		}
		public static bool operator!=(QIconDragItem lhs, QIconDragItem arg1) {
			return !StaticQIconDragItem().op_equals(lhs,arg1);
		}
		public override bool Equals(object o) {
			if (!(o is QIconDragItem)) { return false; }
			return this == (QIconDragItem) o;
		}
		public override int GetHashCode() {
			return ProxyQIconDragItem().GetHashCode();
		}
		~QIconDragItem() {
			ProxyQIconDragItem().Dispose();
		}
		public void Dispose() {
			ProxyQIconDragItem().Dispose();
		}
	}
}
