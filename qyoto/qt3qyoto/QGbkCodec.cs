//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QGbkCodec : QGb18030Codec, IDisposable {
 		protected QGbkCodec(Type dummy) : base((Type) null) {}
		interface IQGbkCodecProxy {
		}

		protected void CreateQGbkCodecProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QGbkCodec), this);
			_interceptor = (QGbkCodec) realProxy.GetTransparentProxy();
		}
		private QGbkCodec ProxyQGbkCodec() {
			return (QGbkCodec) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QGbkCodec() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQGbkCodecProxy), null);
			_staticInterceptor = (IQGbkCodecProxy) realProxy.GetTransparentProxy();
		}
		private static IQGbkCodecProxy StaticQGbkCodec() {
			return (IQGbkCodecProxy) _staticInterceptor;
		}

		public QGbkCodec() : this((Type) null) {
			CreateQGbkCodecProxy();
			NewQGbkCodec();
		}
		private void NewQGbkCodec() {
			ProxyQGbkCodec().NewQGbkCodec();
		}
		public new int MibEnum() {
			return ProxyQGbkCodec().MibEnum();
		}
		public new string Name() {
			return ProxyQGbkCodec().Name();
		}
		public new QTextDecoder MakeDecoder() {
			return ProxyQGbkCodec().MakeDecoder();
		}
		public new string FromUnicode(string uc, out int lenInOut) {
			return ProxyQGbkCodec().FromUnicode(uc,out lenInOut);
		}
		public new string ToUnicode(string chars, int len) {
			return ProxyQGbkCodec().ToUnicode(chars,len);
		}
		public new int HeuristicContentMatch(string chars, int len) {
			return ProxyQGbkCodec().HeuristicContentMatch(chars,len);
		}
		public new int HeuristicNameMatch(string hint) {
			return ProxyQGbkCodec().HeuristicNameMatch(hint);
		}
		~QGbkCodec() {
			ProxyQGbkCodec().Dispose();
		}
		public new void Dispose() {
			ProxyQGbkCodec().Dispose();
		}
	}
}
