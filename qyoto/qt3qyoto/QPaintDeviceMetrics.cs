//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QPaintDeviceMetrics : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
 		protected QPaintDeviceMetrics(Type dummy) {}
		interface IQPaintDeviceMetricsProxy {
		}

		protected void CreateQPaintDeviceMetricsProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QPaintDeviceMetrics), this);
			_interceptor = (QPaintDeviceMetrics) realProxy.GetTransparentProxy();
		}
		private QPaintDeviceMetrics ProxyQPaintDeviceMetrics() {
			return (QPaintDeviceMetrics) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QPaintDeviceMetrics() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQPaintDeviceMetricsProxy), null);
			_staticInterceptor = (IQPaintDeviceMetricsProxy) realProxy.GetTransparentProxy();
		}
		private static IQPaintDeviceMetricsProxy StaticQPaintDeviceMetrics() {
			return (IQPaintDeviceMetricsProxy) _staticInterceptor;
		}

		public const int PdmWidth = 1;
		public const int PdmHeight = 2;
		public const int PdmWidthMM = 3;
		public const int PdmHeightMM = 4;
		public const int PdmNumColors = 5;
		public const int PdmDepth = 6;
		public const int PdmDpiX = 7;
		public const int PdmDpiY = 8;
		public const int PdmPhysicalDpiX = 9;
		public const int PdmPhysicalDpiY = 10;

		public QPaintDeviceMetrics(IQPaintDevice arg1) : this((Type) null) {
			CreateQPaintDeviceMetricsProxy();
			NewQPaintDeviceMetrics(arg1);
		}
		private void NewQPaintDeviceMetrics(IQPaintDevice arg1) {
			ProxyQPaintDeviceMetrics().NewQPaintDeviceMetrics(arg1);
		}
		public int Width() {
			return ProxyQPaintDeviceMetrics().Width();
		}
		public int Height() {
			return ProxyQPaintDeviceMetrics().Height();
		}
		public int WidthMM() {
			return ProxyQPaintDeviceMetrics().WidthMM();
		}
		public int HeightMM() {
			return ProxyQPaintDeviceMetrics().HeightMM();
		}
		public int LogicalDpiX() {
			return ProxyQPaintDeviceMetrics().LogicalDpiX();
		}
		public int LogicalDpiY() {
			return ProxyQPaintDeviceMetrics().LogicalDpiY();
		}
		public int PhysicalDpiX() {
			return ProxyQPaintDeviceMetrics().PhysicalDpiX();
		}
		public int PhysicalDpiY() {
			return ProxyQPaintDeviceMetrics().PhysicalDpiY();
		}
		public int NumColors() {
			return ProxyQPaintDeviceMetrics().NumColors();
		}
		public int Depth() {
			return ProxyQPaintDeviceMetrics().Depth();
		}
		~QPaintDeviceMetrics() {
			ProxyQPaintDeviceMetrics().Dispose();
		}
		public void Dispose() {
			ProxyQPaintDeviceMetrics().Dispose();
		}
	}
}
