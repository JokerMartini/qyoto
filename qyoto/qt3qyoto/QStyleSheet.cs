//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;
	using System.Text;

	public class QStyleSheet : QObject, IDisposable {
 		protected QStyleSheet(Type dummy) : base((Type) null) {}
		interface IQStyleSheetProxy {
			string Tr(string arg1, string arg2);
			string Tr(string arg1);
			string TrUtf8(string arg1, string arg2);
			string TrUtf8(string arg1);
			QStyleSheet DefaultSheet();
			void SetDefaultSheet(QStyleSheet arg1);
			string Escape(string arg1);
			string ConvertFromPlainText(string arg1, int mode);
			string ConvertFromPlainText(string arg1);
			bool MightBeRichText(string arg1);
		}

		protected void CreateQStyleSheetProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleSheet), this);
			_interceptor = (QStyleSheet) realProxy.GetTransparentProxy();
		}
		private QStyleSheet ProxyQStyleSheet() {
			return (QStyleSheet) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleSheet() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleSheetProxy), null);
			_staticInterceptor = (IQStyleSheetProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleSheetProxy StaticQStyleSheet() {
			return (IQStyleSheetProxy) _staticInterceptor;
		}

		public new virtual QMetaObject MetaObject() {
			return ProxyQStyleSheet().MetaObject();
		}
		public new virtual string ClassName() {
			return ProxyQStyleSheet().ClassName();
		}
		public QStyleSheet(QObject parent, string name) : this((Type) null) {
			CreateQStyleSheetProxy();
			NewQStyleSheet(parent,name);
		}
		private void NewQStyleSheet(QObject parent, string name) {
			ProxyQStyleSheet().NewQStyleSheet(parent,name);
		}
		public QStyleSheet(QObject parent) : this((Type) null) {
			CreateQStyleSheetProxy();
			NewQStyleSheet(parent);
		}
		private void NewQStyleSheet(QObject parent) {
			ProxyQStyleSheet().NewQStyleSheet(parent);
		}
		public QStyleSheet() : this((Type) null) {
			CreateQStyleSheetProxy();
			NewQStyleSheet();
		}
		private void NewQStyleSheet() {
			ProxyQStyleSheet().NewQStyleSheet();
		}
		public QStyleSheetItem Item(string name) {
			return ProxyQStyleSheet().Item(name);
		}
		public void Insert(QStyleSheetItem item) {
			ProxyQStyleSheet().Insert(item);
		}
		// QTextCustomItem* tag(const QString& arg1,const QMap<QString, QString>& arg2,const QString& arg3,const QMimeSourceFactory& arg4,bool arg5,QTextDocument* arg6); >>>> NOT CONVERTED
		public virtual void ScaleFont(QFont font, int logicalSize) {
			ProxyQStyleSheet().ScaleFont(font,logicalSize);
		}
		public virtual void Error(string arg1) {
			ProxyQStyleSheet().Error(arg1);
		}
		public static new string Tr(string arg1, string arg2) {
			return StaticQStyleSheet().Tr(arg1,arg2);
		}
		public static new string Tr(string arg1) {
			return StaticQStyleSheet().Tr(arg1);
		}
		public static new string TrUtf8(string arg1, string arg2) {
			return StaticQStyleSheet().TrUtf8(arg1,arg2);
		}
		public static new string TrUtf8(string arg1) {
			return StaticQStyleSheet().TrUtf8(arg1);
		}
		public static QStyleSheet DefaultSheet() {
			return StaticQStyleSheet().DefaultSheet();
		}
		public static void SetDefaultSheet(QStyleSheet arg1) {
			StaticQStyleSheet().SetDefaultSheet(arg1);
		}
		public static string Escape(string arg1) {
			return StaticQStyleSheet().Escape(arg1);
		}
		public static string ConvertFromPlainText(string arg1, int mode) {
			return StaticQStyleSheet().ConvertFromPlainText(arg1,mode);
		}
		public static string ConvertFromPlainText(string arg1) {
			return StaticQStyleSheet().ConvertFromPlainText(arg1);
		}
		public static bool MightBeRichText(string arg1) {
			return StaticQStyleSheet().MightBeRichText(arg1);
		}
		~QStyleSheet() {
			ProxyQStyleSheet().Dispose();
		}
		public new void Dispose() {
			ProxyQStyleSheet().Dispose();
		}
	}
}
