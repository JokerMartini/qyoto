//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qt {

	using System;

	public class QSignalVec : IDisposable {
		protected Object _interceptor = null;
 		protected QSignalVec(Type dummy) : base() {}
		interface IQSignalVecProxy {
		}

		protected void CreateQSignalVecProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QSignalVec), this);
			_interceptor = (QSignalVec) realProxy.GetTransparentProxy();
		}
		private QSignalVec ProxyQSignalVec() {
			return (QSignalVec) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QSignalVec() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQSignalVecProxy), null);
			_staticInterceptor = (IQSignalVecProxy) realProxy.GetTransparentProxy();
		}
		private static IQSignalVecProxy StaticQSignalVec() {
			return (IQSignalVecProxy) _staticInterceptor;
		}

		public QSignalVec(int size) : this((Type) null) {
			CreateQSignalVecProxy();
			NewQSignalVec(size);
		}
		private void NewQSignalVec(int size) {
			ProxyQSignalVec().NewQSignalVec(size);
		}
		public QSignalVec() : this((Type) null) {
			CreateQSignalVecProxy();
			NewQSignalVec();
		}
		private void NewQSignalVec() {
			ProxyQSignalVec().NewQSignalVec();
		}
		public QSignalVec(QSignalVec dict) : this((Type) null) {
			CreateQSignalVecProxy();
			NewQSignalVec(dict);
		}
		private void NewQSignalVec(QSignalVec dict) {
			ProxyQSignalVec().NewQSignalVec(dict);
		}
		// QConnectionList* at(uint arg1); >>>> NOT CONVERTED
		// bool insert(uint arg1,const QConnectionList* arg2); >>>> NOT CONVERTED
		~QSignalVec() {
			ProxyQSignalVec().Dispose();
		}
		public void Dispose() {
			ProxyQSignalVec().Dispose();
		}
	}
}
