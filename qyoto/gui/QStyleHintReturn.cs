//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleHintReturn")]
	public class QStyleHintReturn : MarshalByRefObject, IDisposable {
		protected QStyleHintReturn interceptor = null;
		private IntPtr smokeObject;
		protected QStyleHintReturn(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleHintReturn), this);
			interceptor = (QStyleHintReturn) realProxy.GetTransparentProxy();
		}
		public enum HintReturnType {
			SH_Default = 0xf000,
			SH_Mask = 0,
		}
		public enum StyleOptionType {
			Type = QStyleHintReturn.HintReturnType.SH_Default,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleHintReturn(int version, int type) : this((Type) null) {
			CreateProxy();
			NewQStyleHintReturn(version,type);
		}
		[SmokeMethod("QStyleHintReturn", "(int, int)", "$$")]
		private void NewQStyleHintReturn(int version, int type) {
			((QStyleHintReturn) interceptor).NewQStyleHintReturn(version,type);
		}
		public QStyleHintReturn(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleHintReturn(version);
		}
		[SmokeMethod("QStyleHintReturn", "(int)", "$")]
		private void NewQStyleHintReturn(int version) {
			((QStyleHintReturn) interceptor).NewQStyleHintReturn(version);
		}
		public QStyleHintReturn() : this((Type) null) {
			CreateProxy();
			NewQStyleHintReturn();
		}
		[SmokeMethod("QStyleHintReturn", "()", "")]
		private void NewQStyleHintReturn() {
			((QStyleHintReturn) interceptor).NewQStyleHintReturn();
		}
		~QStyleHintReturn() {
			DisposeQStyleHintReturn();
		}
		public void Dispose() {
			DisposeQStyleHintReturn();
		}
		[SmokeMethod("~QStyleHintReturn", "()", "")]
		private void DisposeQStyleHintReturn() {
			((QStyleHintReturn) interceptor).DisposeQStyleHintReturn();
		}
	}
}
