//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionTitleBar")]
	public class QStyleOptionTitleBar : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionTitleBar(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QStyleOptionTitleBar), this);
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_TitleBar,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionTitleBar() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionTitleBar", "QStyleOptionTitleBar()", typeof(void));
		}
		public QStyleOptionTitleBar(QStyleOptionTitleBar other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionTitleBar#", "QStyleOptionTitleBar(const QStyleOptionTitleBar&)", typeof(void), typeof(QStyleOptionTitleBar), other);
		}
		public QStyleOptionTitleBar(int version) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionTitleBar$", "QStyleOptionTitleBar(int)", typeof(void), typeof(int), version);
		}
		~QStyleOptionTitleBar() {
			interceptor.Invoke("~QStyleOptionTitleBar", "~QStyleOptionTitleBar()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~QStyleOptionTitleBar", "~QStyleOptionTitleBar()", typeof(void));
		}
	}
}
