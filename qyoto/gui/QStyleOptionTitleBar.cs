//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionTitleBar")]
	public class QStyleOptionTitleBar : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionTitleBar(Type dummy) : base((Type) null) {}
		interface IQStyleOptionTitleBarProxy {
		}

		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionTitleBar), this);
			_interceptor = (QStyleOptionTitleBar) realProxy.GetTransparentProxy();
		}
		private QStyleOptionTitleBar ProxyQStyleOptionTitleBar() {
			return (QStyleOptionTitleBar) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleOptionTitleBar() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleOptionTitleBarProxy), null);
			_staticInterceptor = (IQStyleOptionTitleBarProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleOptionTitleBarProxy StaticQStyleOptionTitleBar() {
			return (IQStyleOptionTitleBarProxy) _staticInterceptor;
		}

		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_TitleBar,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionTitleBar() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionTitleBar();
		}
		[SmokeMethod("QStyleOptionTitleBar", "()", "")]
		private void NewQStyleOptionTitleBar() {
			ProxyQStyleOptionTitleBar().NewQStyleOptionTitleBar();
		}
		public QStyleOptionTitleBar(QStyleOptionTitleBar other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionTitleBar(other);
		}
		[SmokeMethod("QStyleOptionTitleBar", "(const QStyleOptionTitleBar&)", "#")]
		private void NewQStyleOptionTitleBar(QStyleOptionTitleBar other) {
			ProxyQStyleOptionTitleBar().NewQStyleOptionTitleBar(other);
		}
		public QStyleOptionTitleBar(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionTitleBar(version);
		}
		[SmokeMethod("QStyleOptionTitleBar", "(int)", "$")]
		private void NewQStyleOptionTitleBar(int version) {
			ProxyQStyleOptionTitleBar().NewQStyleOptionTitleBar(version);
		}
		~QStyleOptionTitleBar() {
			DisposeQStyleOptionTitleBar();
		}
		public void Dispose() {
			DisposeQStyleOptionTitleBar();
		}
		[SmokeMethod("~QStyleOptionTitleBar", "()", "")]
		private void DisposeQStyleOptionTitleBar() {
			ProxyQStyleOptionTitleBar().DisposeQStyleOptionTitleBar();
		}
	}
}
