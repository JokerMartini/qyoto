//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QWhatsThis")]
	public class QWhatsThis : MarshalByRefObject {
		protected QWhatsThis interceptor = null;
		private IntPtr smokeObject;
		protected QWhatsThis(Type dummy) {}
		[SmokeClass("QWhatsThis")]
		interface IQWhatsThisProxy {
			[SmokeMethod("enterWhatsThisMode", "()", "")]
			void EnterWhatsThisMode();
			[SmokeMethod("inWhatsThisMode", "()", "")]
			bool InWhatsThisMode();
			[SmokeMethod("leaveWhatsThisMode", "()", "")]
			void LeaveWhatsThisMode();
			[SmokeMethod("showText", "(const QPoint&, const QString&, QWidget*)", "#$#")]
			void ShowText(QPoint pos, string text, QWidget w);
			[SmokeMethod("showText", "(const QPoint&, const QString&)", "#$")]
			void ShowText(QPoint pos, string text);
			[SmokeMethod("hideText", "()", "")]
			void HideText();
			[SmokeMethod("createAction", "(QObject*)", "#")]
			QAction CreateAction(QObject parent);
			[SmokeMethod("createAction", "()", "")]
			QAction CreateAction();
		}
		private static IQWhatsThisProxy staticInterceptor = null;
		static QWhatsThis() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQWhatsThisProxy), null);
			staticInterceptor = (IQWhatsThisProxy) realProxy.GetTransparentProxy();
		}
		public static void EnterWhatsThisMode() {
			staticInterceptor.EnterWhatsThisMode();
		}
		public static bool InWhatsThisMode() {
			return staticInterceptor.InWhatsThisMode();
		}
		public static void LeaveWhatsThisMode() {
			staticInterceptor.LeaveWhatsThisMode();
		}
		public static void ShowText(QPoint pos, string text, QWidget w) {
			staticInterceptor.ShowText(pos,text,w);
		}
		public static void ShowText(QPoint pos, string text) {
			staticInterceptor.ShowText(pos,text);
		}
		public static void HideText() {
			staticInterceptor.HideText();
		}
		public static QAction CreateAction(QObject parent) {
			return staticInterceptor.CreateAction(parent);
		}
		public static QAction CreateAction() {
			return staticInterceptor.CreateAction();
		}
	}
}
