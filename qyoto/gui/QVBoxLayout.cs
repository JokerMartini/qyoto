//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QVBoxLayout")]
	public class QVBoxLayout : QBoxLayout, IDisposable {
 		protected QVBoxLayout(Type dummy) : base((Type) null) {}
		[SmokeClass("QVBoxLayout")]
		interface IQVBoxLayoutProxy {
			[SmokeMethod("tr", "(const char*, const char*)", "$$")]
			string Tr(string s, string c);
			[SmokeMethod("tr", "(const char*)", "$")]
			string Tr(string s);
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QVBoxLayout), this);
			interceptor = (QVBoxLayout) realProxy.GetTransparentProxy();
		}
		private static IQVBoxLayoutProxy staticInterceptor = null;
		static QVBoxLayout() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQVBoxLayoutProxy), null);
			staticInterceptor = (IQVBoxLayoutProxy) realProxy.GetTransparentProxy();
		}
		public QVBoxLayout() : this((Type) null) {
			CreateProxy();
			NewQVBoxLayout();
		}
		[SmokeMethod("QVBoxLayout", "()", "")]
		private void NewQVBoxLayout() {
			((QVBoxLayout) interceptor).NewQVBoxLayout();
		}
		public QVBoxLayout(QWidget parent) : this((Type) null) {
			CreateProxy();
			NewQVBoxLayout(parent);
		}
		[SmokeMethod("QVBoxLayout", "(QWidget*)", "#")]
		private void NewQVBoxLayout(QWidget parent) {
			((QVBoxLayout) interceptor).NewQVBoxLayout(parent);
		}
		~QVBoxLayout() {
			DisposeQVBoxLayout();
		}
		public new void Dispose() {
			DisposeQVBoxLayout();
		}
		[SmokeMethod("~QVBoxLayout", "()", "")]
		private void DisposeQVBoxLayout() {
			((QVBoxLayout) interceptor).DisposeQVBoxLayout();
		}
		public static string Tr(string s, string c) {
			return staticInterceptor.Tr(s,c);
		}
		public static string Tr(string s) {
			return staticInterceptor.Tr(s);
		}
		protected new IQVBoxLayoutSignals Emit {
			get { return (IQVBoxLayoutSignals) Q_EMIT; }
		}
	}

	public interface IQVBoxLayoutSignals : IQBoxLayoutSignals {
	}
}
