//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QTreeWidgetItemIterator")]
	public class QTreeWidgetItemIterator : MarshalByRefObject, IDisposable {
		protected QTreeWidgetItemIterator interceptor = null;
		private IntPtr smokeObject;
		protected QTreeWidgetItemIterator(Type dummy) {}
		[SmokeClass("QTreeWidgetItemIterator")]
		interface IQTreeWidgetItemIteratorProxy {
			[SmokeMethod("operator++", "()", "")]
			QTreeWidgetItemIterator op_incr(QTreeWidgetItemIterator lhs);
			[SmokeMethod("operator--", "()", "")]
			QTreeWidgetItemIterator op_decr(QTreeWidgetItemIterator lhs);
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTreeWidgetItemIterator), this);
			interceptor = (QTreeWidgetItemIterator) realProxy.GetTransparentProxy();
		}
		private static IQTreeWidgetItemIteratorProxy staticInterceptor = null;
		static QTreeWidgetItemIterator() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTreeWidgetItemIteratorProxy), null);
			staticInterceptor = (IQTreeWidgetItemIteratorProxy) realProxy.GetTransparentProxy();
		}
		public enum IteratorFlag {
			All = 0x00000000,
			Hidden = 0x00000001,
			NotHidden = 0x00000002,
			Selected = 0x00000004,
			Unselected = 0x00000008,
			Selectable = 0x00000010,
			NotSelectable = 0x00000020,
			DragEnabled = 0x00000040,
			DragDisabled = 0x00000080,
			DropEnabled = 0x00000100,
			DropDisabled = 0x00000200,
			HasChildren = 0x00000400,
			NoChildren = 0x00000800,
			Checked = 0x00001000,
			NotChecked = 0x00002000,
			Enabled = 0x00004000,
			Disabled = 0x00008000,
			Editable = 0x00010000,
			NotEditable = 0x00020000,
			UserFlag = 0x01000000,
		}
		public QTreeWidgetItemIterator(QTreeWidgetItemIterator it) : this((Type) null) {
			CreateProxy();
			NewQTreeWidgetItemIterator(it);
		}
		[SmokeMethod("QTreeWidgetItemIterator", "(const QTreeWidgetItemIterator&)", "#")]
		private void NewQTreeWidgetItemIterator(QTreeWidgetItemIterator it) {
			((QTreeWidgetItemIterator) interceptor).NewQTreeWidgetItemIterator(it);
		}
		public QTreeWidgetItemIterator(QTreeWidget widget, int flags) : this((Type) null) {
			CreateProxy();
			NewQTreeWidgetItemIterator(widget,flags);
		}
		[SmokeMethod("QTreeWidgetItemIterator", "(QTreeWidget*, IteratorFlags)", "#$")]
		private void NewQTreeWidgetItemIterator(QTreeWidget widget, int flags) {
			((QTreeWidgetItemIterator) interceptor).NewQTreeWidgetItemIterator(widget,flags);
		}
		public QTreeWidgetItemIterator(QTreeWidget widget) : this((Type) null) {
			CreateProxy();
			NewQTreeWidgetItemIterator(widget);
		}
		[SmokeMethod("QTreeWidgetItemIterator", "(QTreeWidget*)", "#")]
		private void NewQTreeWidgetItemIterator(QTreeWidget widget) {
			((QTreeWidgetItemIterator) interceptor).NewQTreeWidgetItemIterator(widget);
		}
		public QTreeWidgetItemIterator(QTreeWidgetItem item, int flags) : this((Type) null) {
			CreateProxy();
			NewQTreeWidgetItemIterator(item,flags);
		}
		[SmokeMethod("QTreeWidgetItemIterator", "(QTreeWidgetItem*, IteratorFlags)", "#$")]
		private void NewQTreeWidgetItemIterator(QTreeWidgetItem item, int flags) {
			((QTreeWidgetItemIterator) interceptor).NewQTreeWidgetItemIterator(item,flags);
		}
		public QTreeWidgetItemIterator(QTreeWidgetItem item) : this((Type) null) {
			CreateProxy();
			NewQTreeWidgetItemIterator(item);
		}
		[SmokeMethod("QTreeWidgetItemIterator", "(QTreeWidgetItem*)", "#")]
		private void NewQTreeWidgetItemIterator(QTreeWidgetItem item) {
			((QTreeWidgetItemIterator) interceptor).NewQTreeWidgetItemIterator(item);
		}
		~QTreeWidgetItemIterator() {
			DisposeQTreeWidgetItemIterator();
		}
		public void Dispose() {
			DisposeQTreeWidgetItemIterator();
		}
		[SmokeMethod("~QTreeWidgetItemIterator", "()", "")]
		private void DisposeQTreeWidgetItemIterator() {
			((QTreeWidgetItemIterator) interceptor).DisposeQTreeWidgetItemIterator();
		}
		public static QTreeWidgetItemIterator operator++(QTreeWidgetItemIterator lhs) {
			return staticInterceptor.op_incr(lhs);
		}
		public static QTreeWidgetItemIterator operator--(QTreeWidgetItemIterator lhs) {
			return staticInterceptor.op_decr(lhs);
		}
	}
}
