//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QListWidgetItem")]
	public class QListWidgetItem : MarshalByRefObject, IDisposable {
		protected QListWidgetItem interceptor = null;
		private IntPtr smokeObject;
		protected QListWidgetItem(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QListWidgetItem), this);
			interceptor = (QListWidgetItem) realProxy.GetTransparentProxy();
		}
		public enum ItemType {
			Type = 0,
			UserType = 1000,
		}
		public QListWidgetItem(QListWidget view, int type) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(view,type);
		}
		[SmokeMethod("QListWidgetItem", "(QListWidget*, int)", "#$")]
		private void NewQListWidgetItem(QListWidget view, int type) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(view,type);
		}
		public QListWidgetItem(QListWidget view) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(view);
		}
		[SmokeMethod("QListWidgetItem", "(QListWidget*)", "#")]
		private void NewQListWidgetItem(QListWidget view) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(view);
		}
		public QListWidgetItem() : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem();
		}
		[SmokeMethod("QListWidgetItem", "()", "")]
		private void NewQListWidgetItem() {
			((QListWidgetItem) interceptor).NewQListWidgetItem();
		}
		public QListWidgetItem(string text, QListWidget view, int type) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(text,view,type);
		}
		[SmokeMethod("QListWidgetItem", "(const QString&, QListWidget*, int)", "$#$")]
		private void NewQListWidgetItem(string text, QListWidget view, int type) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(text,view,type);
		}
		public QListWidgetItem(string text, QListWidget view) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(text,view);
		}
		[SmokeMethod("QListWidgetItem", "(const QString&, QListWidget*)", "$#")]
		private void NewQListWidgetItem(string text, QListWidget view) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(text,view);
		}
		public QListWidgetItem(string text) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(text);
		}
		[SmokeMethod("QListWidgetItem", "(const QString&)", "$")]
		private void NewQListWidgetItem(string text) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(text);
		}
		public QListWidgetItem(QIcon icon, string text, QListWidget view, int type) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(icon,text,view,type);
		}
		[SmokeMethod("QListWidgetItem", "(const QIcon&, const QString&, QListWidget*, int)", "#$#$")]
		private void NewQListWidgetItem(QIcon icon, string text, QListWidget view, int type) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(icon,text,view,type);
		}
		public QListWidgetItem(QIcon icon, string text, QListWidget view) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(icon,text,view);
		}
		[SmokeMethod("QListWidgetItem", "(const QIcon&, const QString&, QListWidget*)", "#$#")]
		private void NewQListWidgetItem(QIcon icon, string text, QListWidget view) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(icon,text,view);
		}
		public QListWidgetItem(QIcon icon, string text) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(icon,text);
		}
		[SmokeMethod("QListWidgetItem", "(const QIcon&, const QString&)", "#$")]
		private void NewQListWidgetItem(QIcon icon, string text) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(icon,text);
		}
		public QListWidgetItem(QListWidgetItem other) : this((Type) null) {
			CreateProxy();
			NewQListWidgetItem(other);
		}
		[SmokeMethod("QListWidgetItem", "(const QListWidgetItem&)", "#")]
		private void NewQListWidgetItem(QListWidgetItem other) {
			((QListWidgetItem) interceptor).NewQListWidgetItem(other);
		}
		[SmokeMethod("clone", "() const", "")]
		public virtual QListWidgetItem Clone() {
			return ((QListWidgetItem) interceptor).Clone();
		}
		[SmokeMethod("listWidget", "() const", "")]
		public QListWidget ListWidget() {
			return ((QListWidgetItem) interceptor).ListWidget();
		}
		[SmokeMethod("setSelected", "(bool)", "$")]
		public void SetSelected(bool select) {
			((QListWidgetItem) interceptor).SetSelected(select);
		}
		[SmokeMethod("isSelected", "() const", "")]
		public bool IsSelected() {
			return ((QListWidgetItem) interceptor).IsSelected();
		}
		[SmokeMethod("setHidden", "(bool)", "$")]
		public void SetHidden(bool hide) {
			((QListWidgetItem) interceptor).SetHidden(hide);
		}
		[SmokeMethod("isHidden", "() const", "")]
		public bool IsHidden() {
			return ((QListWidgetItem) interceptor).IsHidden();
		}
		[SmokeMethod("flags", "() const", "")]
		public int Flags() {
			return ((QListWidgetItem) interceptor).Flags();
		}
		[SmokeMethod("setFlags", "(Qt::ItemFlags)", "$")]
		public void SetFlags(int flags) {
			((QListWidgetItem) interceptor).SetFlags(flags);
		}
		[SmokeMethod("text", "() const", "")]
		public string Text() {
			return ((QListWidgetItem) interceptor).Text();
		}
		[SmokeMethod("setText", "(const QString&)", "$")]
		public void SetText(string text) {
			((QListWidgetItem) interceptor).SetText(text);
		}
		[SmokeMethod("icon", "() const", "")]
		public QIcon Icon() {
			return ((QListWidgetItem) interceptor).Icon();
		}
		[SmokeMethod("setIcon", "(const QIcon&)", "#")]
		public void SetIcon(QIcon icon) {
			((QListWidgetItem) interceptor).SetIcon(icon);
		}
		[SmokeMethod("statusTip", "() const", "")]
		public string StatusTip() {
			return ((QListWidgetItem) interceptor).StatusTip();
		}
		[SmokeMethod("setStatusTip", "(const QString&)", "$")]
		public void SetStatusTip(string statusTip) {
			((QListWidgetItem) interceptor).SetStatusTip(statusTip);
		}
		[SmokeMethod("toolTip", "() const", "")]
		public string ToolTip() {
			return ((QListWidgetItem) interceptor).ToolTip();
		}
		[SmokeMethod("setToolTip", "(const QString&)", "$")]
		public void SetToolTip(string toolTip) {
			((QListWidgetItem) interceptor).SetToolTip(toolTip);
		}
		[SmokeMethod("whatsThis", "() const", "")]
		public string WhatsThis() {
			return ((QListWidgetItem) interceptor).WhatsThis();
		}
		[SmokeMethod("setWhatsThis", "(const QString&)", "$")]
		public void SetWhatsThis(string whatsThis) {
			((QListWidgetItem) interceptor).SetWhatsThis(whatsThis);
		}
		[SmokeMethod("font", "() const", "")]
		public QFont Font() {
			return ((QListWidgetItem) interceptor).Font();
		}
		[SmokeMethod("setFont", "(const QFont&)", "#")]
		public void SetFont(QFont font) {
			((QListWidgetItem) interceptor).SetFont(font);
		}
		[SmokeMethod("textAlignment", "() const", "")]
		public int TextAlignment() {
			return ((QListWidgetItem) interceptor).TextAlignment();
		}
		[SmokeMethod("setTextAlignment", "(int)", "$")]
		public void SetTextAlignment(int alignment) {
			((QListWidgetItem) interceptor).SetTextAlignment(alignment);
		}
		[SmokeMethod("backgroundColor", "() const", "")]
		public QColor BackgroundColor() {
			return ((QListWidgetItem) interceptor).BackgroundColor();
		}
		[SmokeMethod("setBackgroundColor", "(const QColor&)", "#")]
		public virtual void SetBackgroundColor(QColor color) {
			((QListWidgetItem) interceptor).SetBackgroundColor(color);
		}
		[SmokeMethod("background", "() const", "")]
		public QBrush Background() {
			return ((QListWidgetItem) interceptor).Background();
		}
		[SmokeMethod("setBackground", "(const QBrush&)", "#")]
		public void SetBackground(QBrush brush) {
			((QListWidgetItem) interceptor).SetBackground(brush);
		}
		[SmokeMethod("textColor", "() const", "")]
		public QColor TextColor() {
			return ((QListWidgetItem) interceptor).TextColor();
		}
		[SmokeMethod("setTextColor", "(const QColor&)", "#")]
		public void SetTextColor(QColor color) {
			((QListWidgetItem) interceptor).SetTextColor(color);
		}
		[SmokeMethod("foreground", "() const", "")]
		public QBrush Foreground() {
			return ((QListWidgetItem) interceptor).Foreground();
		}
		[SmokeMethod("setForeground", "(const QBrush&)", "#")]
		public void SetForeground(QBrush brush) {
			((QListWidgetItem) interceptor).SetForeground(brush);
		}
		[SmokeMethod("checkState", "() const", "")]
		public Qt.CheckState CheckState() {
			return ((QListWidgetItem) interceptor).CheckState();
		}
		[SmokeMethod("setCheckState", "(Qt::CheckState)", "$")]
		public void SetCheckState(Qt.CheckState state) {
			((QListWidgetItem) interceptor).SetCheckState(state);
		}
		[SmokeMethod("sizeHint", "() const", "")]
		public QSize SizeHint() {
			return ((QListWidgetItem) interceptor).SizeHint();
		}
		[SmokeMethod("setSizeHint", "(const QSize&)", "#")]
		public void SetSizeHint(QSize size) {
			((QListWidgetItem) interceptor).SetSizeHint(size);
		}
		[SmokeMethod("data", "(int) const", "$")]
		public virtual QVariant Data(int role) {
			return ((QListWidgetItem) interceptor).Data(role);
		}
		[SmokeMethod("setData", "(int, const QVariant&)", "$#")]
		public virtual void SetData(int role, QVariant value) {
			((QListWidgetItem) interceptor).SetData(role,value);
		}
		[SmokeMethod("read", "(QDataStream&)", "#")]
		public virtual void Read(QDataStream arg1) {
			((QListWidgetItem) interceptor).Read(arg1);
		}
		[SmokeMethod("write", "(QDataStream&) const", "#")]
		public virtual void Write(QDataStream arg1) {
			((QListWidgetItem) interceptor).Write(arg1);
		}
		[SmokeMethod("type", "() const", "")]
		public int type() {
			return ((QListWidgetItem) interceptor).type();
		}
		~QListWidgetItem() {
			DisposeQListWidgetItem();
		}
		public void Dispose() {
			DisposeQListWidgetItem();
		}
		[SmokeMethod("~QListWidgetItem", "()", "")]
		private void DisposeQListWidgetItem() {
			((QListWidgetItem) interceptor).DisposeQListWidgetItem();
		}
	}
}
