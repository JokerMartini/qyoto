//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionGroupBox")]
	public class QStyleOptionGroupBox : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionGroupBox(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionGroupBox), this);
			interceptor = (QStyleOptionGroupBox) realProxy.GetTransparentProxy();
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_GroupBox,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionGroupBox() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionGroupBox();
		}
		[SmokeMethod("QStyleOptionGroupBox", "()", "")]
		private void NewQStyleOptionGroupBox() {
			((QStyleOptionGroupBox) interceptor).NewQStyleOptionGroupBox();
		}
		public QStyleOptionGroupBox(QStyleOptionGroupBox other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionGroupBox(other);
		}
		[SmokeMethod("QStyleOptionGroupBox", "(const QStyleOptionGroupBox&)", "#")]
		private void NewQStyleOptionGroupBox(QStyleOptionGroupBox other) {
			((QStyleOptionGroupBox) interceptor).NewQStyleOptionGroupBox(other);
		}
		public QStyleOptionGroupBox(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionGroupBox(version);
		}
		[SmokeMethod("QStyleOptionGroupBox", "(int)", "$")]
		private void NewQStyleOptionGroupBox(int version) {
			((QStyleOptionGroupBox) interceptor).NewQStyleOptionGroupBox(version);
		}
		~QStyleOptionGroupBox() {
			DisposeQStyleOptionGroupBox();
		}
		public void Dispose() {
			DisposeQStyleOptionGroupBox();
		}
		[SmokeMethod("~QStyleOptionGroupBox", "()", "")]
		private void DisposeQStyleOptionGroupBox() {
			((QStyleOptionGroupBox) interceptor).DisposeQStyleOptionGroupBox();
		}
	}
}
