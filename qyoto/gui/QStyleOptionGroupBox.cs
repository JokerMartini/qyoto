//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionGroupBox")]
	public class QStyleOptionGroupBox : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionGroupBox(Type dummy) : base((Type) null) {}
		[SmokeClass("QStyleOptionGroupBox")]
		interface IQStyleOptionGroupBoxProxy {
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionGroupBox), this);
			_interceptor = (QStyleOptionGroupBox) realProxy.GetTransparentProxy();
		}
		private QStyleOptionGroupBox ProxyQStyleOptionGroupBox() {
			return (QStyleOptionGroupBox) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleOptionGroupBox() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleOptionGroupBoxProxy), null);
			_staticInterceptor = (IQStyleOptionGroupBoxProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleOptionGroupBoxProxy StaticQStyleOptionGroupBox() {
			return (IQStyleOptionGroupBoxProxy) _staticInterceptor;
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_GroupBox,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionGroupBox() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionGroupBox();
		}
		[SmokeMethod("QStyleOptionGroupBox", "()", "")]
		private void NewQStyleOptionGroupBox() {
			ProxyQStyleOptionGroupBox().NewQStyleOptionGroupBox();
		}
		public QStyleOptionGroupBox(QStyleOptionGroupBox other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionGroupBox(other);
		}
		[SmokeMethod("QStyleOptionGroupBox", "(const QStyleOptionGroupBox&)", "#")]
		private void NewQStyleOptionGroupBox(QStyleOptionGroupBox other) {
			ProxyQStyleOptionGroupBox().NewQStyleOptionGroupBox(other);
		}
		public QStyleOptionGroupBox(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionGroupBox(version);
		}
		[SmokeMethod("QStyleOptionGroupBox", "(int)", "$")]
		private void NewQStyleOptionGroupBox(int version) {
			ProxyQStyleOptionGroupBox().NewQStyleOptionGroupBox(version);
		}
		~QStyleOptionGroupBox() {
			DisposeQStyleOptionGroupBox();
		}
		public void Dispose() {
			DisposeQStyleOptionGroupBox();
		}
		[SmokeMethod("~QStyleOptionGroupBox", "()", "")]
		private void DisposeQStyleOptionGroupBox() {
			ProxyQStyleOptionGroupBox().DisposeQStyleOptionGroupBox();
		}
	}
}
