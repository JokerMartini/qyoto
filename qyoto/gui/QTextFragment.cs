//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QTextFragment")]
	public class QTextFragment : MarshalByRefObject, IDisposable {
		protected QTextFragment interceptor = null;
		private IntPtr smokeObject;
		protected QTextFragment(Type dummy) {}
		[SmokeClass("QTextFragment")]
		interface IQTextFragmentProxy {
			[SmokeMethod("operator==", "(const QTextFragment&) const", "#")]
			bool op_equals(QTextFragment lhs, QTextFragment o);
			[SmokeMethod("operator<", "(const QTextFragment&) const", "#")]
			bool op_lt(QTextFragment lhs, QTextFragment o);
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextFragment), this);
			interceptor = (QTextFragment) realProxy.GetTransparentProxy();
		}
		private static IQTextFragmentProxy staticInterceptor = null;
		static QTextFragment() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQTextFragmentProxy), null);
			staticInterceptor = (IQTextFragmentProxy) realProxy.GetTransparentProxy();
		}
		public QTextFragment() : this((Type) null) {
			CreateProxy();
			NewQTextFragment();
		}
		[SmokeMethod("QTextFragment", "()", "")]
		private void NewQTextFragment() {
			((QTextFragment) interceptor).NewQTextFragment();
		}
		public QTextFragment(QTextFragment o) : this((Type) null) {
			CreateProxy();
			NewQTextFragment(o);
		}
		[SmokeMethod("QTextFragment", "(const QTextFragment&)", "#")]
		private void NewQTextFragment(QTextFragment o) {
			((QTextFragment) interceptor).NewQTextFragment(o);
		}
		[SmokeMethod("isValid", "() const", "")]
		public bool IsValid() {
			return ((QTextFragment) interceptor).IsValid();
		}
		public override bool Equals(object o) {
			if (!(o is QTextFragment)) { return false; }
			return this == (QTextFragment) o;
		}
		public override int GetHashCode() {
			return ((QTextFragment) interceptor).GetHashCode();
		}
		[SmokeMethod("position", "() const", "")]
		public int Position() {
			return ((QTextFragment) interceptor).Position();
		}
		[SmokeMethod("length", "() const", "")]
		public int Length() {
			return ((QTextFragment) interceptor).Length();
		}
		[SmokeMethod("contains", "(int) const", "$")]
		public bool Contains(int position) {
			return ((QTextFragment) interceptor).Contains(position);
		}
		[SmokeMethod("charFormat", "() const", "")]
		public QTextCharFormat CharFormat() {
			return ((QTextFragment) interceptor).CharFormat();
		}
		[SmokeMethod("charFormatIndex", "() const", "")]
		public int CharFormatIndex() {
			return ((QTextFragment) interceptor).CharFormatIndex();
		}
		[SmokeMethod("text", "() const", "")]
		public string Text() {
			return ((QTextFragment) interceptor).Text();
		}
		~QTextFragment() {
			DisposeQTextFragment();
		}
		public void Dispose() {
			DisposeQTextFragment();
		}
		[SmokeMethod("~QTextFragment", "()", "")]
		private void DisposeQTextFragment() {
			((QTextFragment) interceptor).DisposeQTextFragment();
		}
		public static bool operator==(QTextFragment lhs, QTextFragment o) {
			return staticInterceptor.op_equals(lhs,o);
		}
		public static bool operator!=(QTextFragment lhs, QTextFragment o) {
			return !staticInterceptor.op_equals(lhs,o);
		}
		public static bool operator<(QTextFragment lhs, QTextFragment o) {
			return staticInterceptor.op_lt(lhs,o);
		}
		public static bool operator>(QTextFragment lhs, QTextFragment o) {
			return !staticInterceptor.op_lt(lhs,o)
						&& !staticInterceptor.op_equals(lhs,o);
		}
	}
}
