//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QHBoxLayout")]
	public class QHBoxLayout : QBoxLayout, IDisposable {
 		protected QHBoxLayout(Type dummy) : base((Type) null) {}
		[SmokeClass("QHBoxLayout")]
		interface IQHBoxLayoutProxy {
			[SmokeMethod("tr", "(const char*, const char*)", "$$")]
			string Tr(string s, string c);
			[SmokeMethod("tr", "(const char*)", "$")]
			string Tr(string s);
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QHBoxLayout), this);
			_interceptor = (QHBoxLayout) realProxy.GetTransparentProxy();
		}
		private QHBoxLayout ProxyQHBoxLayout() {
			return (QHBoxLayout) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QHBoxLayout() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQHBoxLayoutProxy), null);
			_staticInterceptor = (IQHBoxLayoutProxy) realProxy.GetTransparentProxy();
		}
		private static IQHBoxLayoutProxy StaticQHBoxLayout() {
			return (IQHBoxLayoutProxy) _staticInterceptor;
		}
		public QHBoxLayout() : this((Type) null) {
			CreateProxy();
			NewQHBoxLayout();
		}
		[SmokeMethod("QHBoxLayout", "()", "")]
		private void NewQHBoxLayout() {
			ProxyQHBoxLayout().NewQHBoxLayout();
		}
		public QHBoxLayout(QWidget parent) : this((Type) null) {
			CreateProxy();
			NewQHBoxLayout(parent);
		}
		[SmokeMethod("QHBoxLayout", "(QWidget*)", "#")]
		private void NewQHBoxLayout(QWidget parent) {
			ProxyQHBoxLayout().NewQHBoxLayout(parent);
		}
		~QHBoxLayout() {
			DisposeQHBoxLayout();
		}
		public new void Dispose() {
			DisposeQHBoxLayout();
		}
		[SmokeMethod("~QHBoxLayout", "()", "")]
		private void DisposeQHBoxLayout() {
			ProxyQHBoxLayout().DisposeQHBoxLayout();
		}
		public static string Tr(string s, string c) {
			return StaticQHBoxLayout().Tr(s,c);
		}
		public static string Tr(string s) {
			return StaticQHBoxLayout().Tr(s);
		}
		protected new IQHBoxLayoutSignals Emit {
			get { return (IQHBoxLayoutSignals) Q_EMIT; }
		}
	}

	public interface IQHBoxLayoutSignals : IQBoxLayoutSignals {
	}
}
