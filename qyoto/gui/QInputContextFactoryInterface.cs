//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;
	using System.Collections.Generic;

	[SmokeClass("QInputContextFactoryInterface")]
	public abstract class QInputContextFactoryInterface : QFactoryInterface {
 		protected QInputContextFactoryInterface(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QInputContextFactoryInterface), this);
			_interceptor = (QInputContextFactoryInterface) realProxy.GetTransparentProxy();
		}
		private QInputContextFactoryInterface ProxyQInputContextFactoryInterface() {
			return (QInputContextFactoryInterface) _interceptor;
		}
		public abstract QInputContext Create(string key);
		public abstract List<string> Languages(string key);
		public abstract string DisplayName(string key);
		public abstract string Description(string key);
		public QInputContextFactoryInterface() : this((Type) null) {
			CreateProxy();
			NewQInputContextFactoryInterface();
		}
		[SmokeMethod("QInputContextFactoryInterface", "()", "")]
		private void NewQInputContextFactoryInterface() {
			ProxyQInputContextFactoryInterface().NewQInputContextFactoryInterface();
		}
	}
}
