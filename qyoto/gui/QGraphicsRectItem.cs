//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QGraphicsRectItem")]
	public class QGraphicsRectItem : QAbstractGraphicsShapeItem, IDisposable {
 		protected QGraphicsRectItem(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QGraphicsRectItem), this);
			interceptor = (QGraphicsRectItem) realProxy.GetTransparentProxy();
		}
		public const int Type = 3;

		public QGraphicsRectItem(QGraphicsItem parent, QGraphicsScene scene) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(parent,scene);
		}
		[SmokeMethod("QGraphicsRectItem", "(QGraphicsItem*, QGraphicsScene*)", "##")]
		private void NewQGraphicsRectItem(QGraphicsItem parent, QGraphicsScene scene) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(parent,scene);
		}
		public QGraphicsRectItem(QGraphicsItem parent) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(parent);
		}
		[SmokeMethod("QGraphicsRectItem", "(QGraphicsItem*)", "#")]
		private void NewQGraphicsRectItem(QGraphicsItem parent) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(parent);
		}
		public QGraphicsRectItem() : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem();
		}
		[SmokeMethod("QGraphicsRectItem", "()", "")]
		private void NewQGraphicsRectItem() {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem();
		}
		public QGraphicsRectItem(QRectF rect, QGraphicsItem parent, QGraphicsScene scene) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(rect,parent,scene);
		}
		[SmokeMethod("QGraphicsRectItem", "(const QRectF&, QGraphicsItem*, QGraphicsScene*)", "###")]
		private void NewQGraphicsRectItem(QRectF rect, QGraphicsItem parent, QGraphicsScene scene) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(rect,parent,scene);
		}
		public QGraphicsRectItem(QRectF rect, QGraphicsItem parent) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(rect,parent);
		}
		[SmokeMethod("QGraphicsRectItem", "(const QRectF&, QGraphicsItem*)", "##")]
		private void NewQGraphicsRectItem(QRectF rect, QGraphicsItem parent) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(rect,parent);
		}
		public QGraphicsRectItem(QRectF rect) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(rect);
		}
		[SmokeMethod("QGraphicsRectItem", "(const QRectF&)", "#")]
		private void NewQGraphicsRectItem(QRectF rect) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(rect);
		}
		public QGraphicsRectItem(double x, double y, double w, double h, QGraphicsItem parent, QGraphicsScene scene) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(x,y,w,h,parent,scene);
		}
		[SmokeMethod("QGraphicsRectItem", "(qreal, qreal, qreal, qreal, QGraphicsItem*, QGraphicsScene*)", "$$$$##")]
		private void NewQGraphicsRectItem(double x, double y, double w, double h, QGraphicsItem parent, QGraphicsScene scene) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(x,y,w,h,parent,scene);
		}
		public QGraphicsRectItem(double x, double y, double w, double h, QGraphicsItem parent) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(x,y,w,h,parent);
		}
		[SmokeMethod("QGraphicsRectItem", "(qreal, qreal, qreal, qreal, QGraphicsItem*)", "$$$$#")]
		private void NewQGraphicsRectItem(double x, double y, double w, double h, QGraphicsItem parent) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(x,y,w,h,parent);
		}
		public QGraphicsRectItem(double x, double y, double w, double h) : this((Type) null) {
			CreateProxy();
			NewQGraphicsRectItem(x,y,w,h);
		}
		[SmokeMethod("QGraphicsRectItem", "(qreal, qreal, qreal, qreal)", "$$$$")]
		private void NewQGraphicsRectItem(double x, double y, double w, double h) {
			((QGraphicsRectItem) interceptor).NewQGraphicsRectItem(x,y,w,h);
		}
		[SmokeMethod("rect", "() const", "")]
		public QRectF Rect() {
			return ((QGraphicsRectItem) interceptor).Rect();
		}
		[SmokeMethod("setRect", "(const QRectF&)", "#")]
		public void SetRect(QRectF rect) {
			((QGraphicsRectItem) interceptor).SetRect(rect);
		}
		[SmokeMethod("setRect", "(qreal, qreal, qreal, qreal)", "$$$$")]
		public void SetRect(double x, double y, double w, double h) {
			((QGraphicsRectItem) interceptor).SetRect(x,y,w,h);
		}
		[SmokeMethod("boundingRect", "() const", "")]
		public override QRectF BoundingRect() {
			return ((QGraphicsRectItem) interceptor).BoundingRect();
		}
		[SmokeMethod("shape", "() const", "")]
		public override QPainterPath Shape() {
			return ((QGraphicsRectItem) interceptor).Shape();
		}
		[SmokeMethod("contains", "(const QPointF&) const", "#")]
		public override bool Contains(QPointF point) {
			return ((QGraphicsRectItem) interceptor).Contains(point);
		}
		[SmokeMethod("paint", "(QPainter*, const QStyleOptionGraphicsItem*, QWidget*)", "###")]
		public override void Paint(QPainter painter, QStyleOptionGraphicsItem option, QWidget widget) {
			((QGraphicsRectItem) interceptor).Paint(painter,option,widget);
		}
		[SmokeMethod("paint", "(QPainter*, const QStyleOptionGraphicsItem*)", "##")]
		public virtual void Paint(QPainter painter, QStyleOptionGraphicsItem option) {
			((QGraphicsRectItem) interceptor).Paint(painter,option);
		}
		[SmokeMethod("isObscuredBy", "(const QGraphicsItem*) const", "#")]
		public override bool IsObscuredBy(QGraphicsItem item) {
			return ((QGraphicsRectItem) interceptor).IsObscuredBy(item);
		}
		[SmokeMethod("opaqueArea", "() const", "")]
		public override QPainterPath OpaqueArea() {
			return ((QGraphicsRectItem) interceptor).OpaqueArea();
		}
		[SmokeMethod("type", "() const", "")]
		public override int type() {
			return ((QGraphicsRectItem) interceptor).type();
		}
		[SmokeMethod("supportsExtension", "(QGraphicsItem::Extension) const", "$")]
		protected override bool SupportsExtension(QGraphicsItem.Extension extension) {
			return ((QGraphicsRectItem) interceptor).SupportsExtension(extension);
		}
		[SmokeMethod("setExtension", "(QGraphicsItem::Extension, const QVariant&)", "$#")]
		protected override void SetExtension(QGraphicsItem.Extension extension, QVariant variant) {
			((QGraphicsRectItem) interceptor).SetExtension(extension,variant);
		}
		[SmokeMethod("extension", "(const QVariant&) const", "#")]
		protected override QVariant extension(QVariant variant) {
			return ((QGraphicsRectItem) interceptor).extension(variant);
		}
		~QGraphicsRectItem() {
			DisposeQGraphicsRectItem();
		}
		public void Dispose() {
			DisposeQGraphicsRectItem();
		}
		[SmokeMethod("~QGraphicsRectItem", "()", "")]
		private void DisposeQGraphicsRectItem() {
			((QGraphicsRectItem) interceptor).DisposeQGraphicsRectItem();
		}
	}
}
