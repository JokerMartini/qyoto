//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionToolBox")]
	public class QStyleOptionToolBox : QStyleOption, IDisposable {
 		protected QStyleOptionToolBox(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionToolBox), this);
			interceptor = (QStyleOptionToolBox) realProxy.GetTransparentProxy();
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_ToolBox,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionToolBox() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionToolBox();
		}
		[SmokeMethod("QStyleOptionToolBox", "()", "")]
		private void NewQStyleOptionToolBox() {
			((QStyleOptionToolBox) interceptor).NewQStyleOptionToolBox();
		}
		public QStyleOptionToolBox(QStyleOptionToolBox other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionToolBox(other);
		}
		[SmokeMethod("QStyleOptionToolBox", "(const QStyleOptionToolBox&)", "#")]
		private void NewQStyleOptionToolBox(QStyleOptionToolBox other) {
			((QStyleOptionToolBox) interceptor).NewQStyleOptionToolBox(other);
		}
		public QStyleOptionToolBox(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionToolBox(version);
		}
		[SmokeMethod("QStyleOptionToolBox", "(int)", "$")]
		private void NewQStyleOptionToolBox(int version) {
			((QStyleOptionToolBox) interceptor).NewQStyleOptionToolBox(version);
		}
		~QStyleOptionToolBox() {
			DisposeQStyleOptionToolBox();
		}
		public void Dispose() {
			DisposeQStyleOptionToolBox();
		}
		[SmokeMethod("~QStyleOptionToolBox", "()", "")]
		private void DisposeQStyleOptionToolBox() {
			((QStyleOptionToolBox) interceptor).DisposeQStyleOptionToolBox();
		}
	}
}
