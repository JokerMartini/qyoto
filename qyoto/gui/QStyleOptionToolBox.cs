//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionToolBox")]
	public class QStyleOptionToolBox : QStyleOption, IDisposable {
 		protected QStyleOptionToolBox(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QStyleOptionToolBox), "QStyleOptionToolBox", this);
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_ToolBox,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionToolBox() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionToolBox", "QStyleOptionToolBox()", typeof(void));
		}
		public QStyleOptionToolBox(QStyleOptionToolBox other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionToolBox#", "QStyleOptionToolBox(const QStyleOptionToolBox&)", typeof(void), typeof(QStyleOptionToolBox), other);
		}
		public QStyleOptionToolBox(int version) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionToolBox$", "QStyleOptionToolBox(int)", typeof(void), typeof(int), version);
		}
		~QStyleOptionToolBox() {
			interceptor.Invoke("~QStyleOptionToolBox", "~QStyleOptionToolBox()", typeof(void));
		}
		public void Dispose() {
			interceptor.Invoke("~QStyleOptionToolBox", "~QStyleOptionToolBox()", typeof(void));
		}
	}
}
