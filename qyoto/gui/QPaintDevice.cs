//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	public interface IQPaintDevice {
		int DevType();
		bool PaintingActive();
		QPaintEngine PaintEngine();
		int Width();
		int Height();
		int WidthMM();
		int HeightMM();
		int LogicalDpiX();
		int LogicalDpiY();
		int PhysicalDpiX();
		int PhysicalDpiY();
		int NumColors();
		int Depth();
	}

	[SmokeClass("QPaintDevice")]
	public abstract class QPaintDevice : MarshalByRefObject, IQPaintDevice {
		protected QPaintDevice interceptor = null;
		private IntPtr smokeObject;
		protected QPaintDevice(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QPaintDevice), this);
			interceptor = (QPaintDevice) realProxy.GetTransparentProxy();
		}
		public enum PaintDeviceMetric {
			PdmWidth = 1,
			PdmHeight = 2,
			PdmWidthMM = 3,
			PdmHeightMM = 4,
			PdmNumColors = 5,
			PdmDepth = 6,
			PdmDpiX = 7,
			PdmDpiY = 8,
			PdmPhysicalDpiX = 9,
			PdmPhysicalDpiY = 10,
		}
		[SmokeMethod("devType", "() const", "")]
		public virtual int DevType() {
			return ((QPaintDevice) interceptor).DevType();
		}
		[SmokeMethod("paintingActive", "() const", "")]
		public bool PaintingActive() {
			return ((QPaintDevice) interceptor).PaintingActive();
		}
		[SmokeMethod("paintEngine", "() const", "")]
		public abstract QPaintEngine PaintEngine();
		[SmokeMethod("width", "() const", "")]
		public int Width() {
			return ((QPaintDevice) interceptor).Width();
		}
		[SmokeMethod("height", "() const", "")]
		public int Height() {
			return ((QPaintDevice) interceptor).Height();
		}
		[SmokeMethod("widthMM", "() const", "")]
		public int WidthMM() {
			return ((QPaintDevice) interceptor).WidthMM();
		}
		[SmokeMethod("heightMM", "() const", "")]
		public int HeightMM() {
			return ((QPaintDevice) interceptor).HeightMM();
		}
		[SmokeMethod("logicalDpiX", "() const", "")]
		public int LogicalDpiX() {
			return ((QPaintDevice) interceptor).LogicalDpiX();
		}
		[SmokeMethod("logicalDpiY", "() const", "")]
		public int LogicalDpiY() {
			return ((QPaintDevice) interceptor).LogicalDpiY();
		}
		[SmokeMethod("physicalDpiX", "() const", "")]
		public int PhysicalDpiX() {
			return ((QPaintDevice) interceptor).PhysicalDpiX();
		}
		[SmokeMethod("physicalDpiY", "() const", "")]
		public int PhysicalDpiY() {
			return ((QPaintDevice) interceptor).PhysicalDpiY();
		}
		[SmokeMethod("numColors", "() const", "")]
		public int NumColors() {
			return ((QPaintDevice) interceptor).NumColors();
		}
		[SmokeMethod("depth", "() const", "")]
		public int Depth() {
			return ((QPaintDevice) interceptor).Depth();
		}
		public QPaintDevice() : this((Type) null) {
			CreateProxy();
			NewQPaintDevice();
		}
		[SmokeMethod("QPaintDevice", "()", "")]
		private void NewQPaintDevice() {
			((QPaintDevice) interceptor).NewQPaintDevice();
		}
		[SmokeMethod("metric", "(QPaintDevice::PaintDeviceMetric) const", "$")]
		protected virtual int Metric(IQPaintDevice metric) {
			return ((QPaintDevice) interceptor).Metric(metric);
		}
	}
}
