//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionSpinBox")]
	public class QStyleOptionSpinBox : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionSpinBox(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QStyleOptionSpinBox), "QStyleOptionSpinBox", this);
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_SpinBox,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionSpinBox() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionSpinBox", "QStyleOptionSpinBox()", typeof(void));
		}
		public QStyleOptionSpinBox(QStyleOptionSpinBox other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionSpinBox#", "QStyleOptionSpinBox(const QStyleOptionSpinBox&)", typeof(void), typeof(QStyleOptionSpinBox), other);
		}
		public QStyleOptionSpinBox(int version) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionSpinBox$", "QStyleOptionSpinBox(int)", typeof(void), typeof(int), version);
		}
		~QStyleOptionSpinBox() {
			interceptor.Invoke("~QStyleOptionSpinBox", "~QStyleOptionSpinBox()", typeof(void));
		}
		public void Dispose() {
			interceptor.Invoke("~QStyleOptionSpinBox", "~QStyleOptionSpinBox()", typeof(void));
		}
	}
}
