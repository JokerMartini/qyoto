//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QDragEnterEvent")]
	public class QDragEnterEvent : QDragMoveEvent, IDisposable {
 		protected QDragEnterEvent(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QDragEnterEvent), "QDragEnterEvent", this);
		}
		public QDragEnterEvent(QPoint pos, int actions, QMimeData data, int buttons, int modifiers) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QDragEnterEvent#$#$$", "QDragEnterEvent(const QPoint&, Qt::DropActions, const QMimeData*, Qt::MouseButtons, Qt::KeyboardModifiers)", typeof(void), typeof(QPoint), pos, typeof(int), actions, typeof(QMimeData), data, typeof(int), buttons, typeof(int), modifiers);
		}
		~QDragEnterEvent() {
			interceptor.Invoke("~QDragEnterEvent", "~QDragEnterEvent()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~QDragEnterEvent", "~QDragEnterEvent()", typeof(void));
		}
	}
}
