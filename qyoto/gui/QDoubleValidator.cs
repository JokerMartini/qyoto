//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;
	using System.Text;

	[SmokeClass("QDoubleValidator")]
	public class QDoubleValidator : QValidator, IDisposable {
 		protected QDoubleValidator(Type dummy) : base((Type) null) {}
		[SmokeClass("QDoubleValidator")]
		interface IQDoubleValidatorProxy {
			[SmokeMethod("tr", "(const char*, const char*)", "$$")]
			string Tr(string s, string c);
			[SmokeMethod("tr", "(const char*)", "$")]
			string Tr(string s);
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDoubleValidator), this);
			interceptor = (QDoubleValidator) realProxy.GetTransparentProxy();
		}
		private static IQDoubleValidatorProxy staticInterceptor = null;
		static QDoubleValidator() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDoubleValidatorProxy), null);
			staticInterceptor = (IQDoubleValidatorProxy) realProxy.GetTransparentProxy();
		}
		[Q_PROPERTY("double", "bottom")]
		public double Bottom {
			[SmokeMethod("bottom", "()", "")]
			get { return ((QDoubleValidator) interceptor).Bottom; }
			[SmokeMethod("setBottom", "(double)", "$")]
			set { ((QDoubleValidator) interceptor).Bottom = value; }
		}
		[Q_PROPERTY("double", "top")]
		public double Top {
			[SmokeMethod("top", "()", "")]
			get { return ((QDoubleValidator) interceptor).Top; }
			[SmokeMethod("setTop", "(double)", "$")]
			set { ((QDoubleValidator) interceptor).Top = value; }
		}
		[Q_PROPERTY("int", "decimals")]
		public int Decimals {
			[SmokeMethod("decimals", "()", "")]
			get { return ((QDoubleValidator) interceptor).Decimals; }
			[SmokeMethod("setDecimals", "(int)", "$")]
			set { ((QDoubleValidator) interceptor).Decimals = value; }
		}
		public QDoubleValidator(QObject parent) : this((Type) null) {
			CreateProxy();
			NewQDoubleValidator(parent);
		}
		[SmokeMethod("QDoubleValidator", "(QObject*)", "#")]
		private void NewQDoubleValidator(QObject parent) {
			((QDoubleValidator) interceptor).NewQDoubleValidator(parent);
		}
		public QDoubleValidator(double bottom, double top, int decimals, QObject parent) : this((Type) null) {
			CreateProxy();
			NewQDoubleValidator(bottom,top,decimals,parent);
		}
		[SmokeMethod("QDoubleValidator", "(double, double, int, QObject*)", "$$$#")]
		private void NewQDoubleValidator(double bottom, double top, int decimals, QObject parent) {
			((QDoubleValidator) interceptor).NewQDoubleValidator(bottom,top,decimals,parent);
		}
		[SmokeMethod("validate", "(QString&, int&) const", "$$")]
		public override int Validate(StringBuilder arg1, out int arg2) {
			return ((QDoubleValidator) interceptor).Validate(arg1,out arg2);
		}
		[SmokeMethod("setRange", "(double, double, int)", "$$$")]
		public virtual void SetRange(double bottom, double top, int decimals) {
			((QDoubleValidator) interceptor).SetRange(bottom,top,decimals);
		}
		[SmokeMethod("setRange", "(double, double)", "$$")]
		public virtual void SetRange(double bottom, double top) {
			((QDoubleValidator) interceptor).SetRange(bottom,top);
		}
		~QDoubleValidator() {
			DisposeQDoubleValidator();
		}
		public new void Dispose() {
			DisposeQDoubleValidator();
		}
		[SmokeMethod("~QDoubleValidator", "()", "")]
		private void DisposeQDoubleValidator() {
			((QDoubleValidator) interceptor).DisposeQDoubleValidator();
		}
		public static string Tr(string s, string c) {
			return staticInterceptor.Tr(s,c);
		}
		public static string Tr(string s) {
			return staticInterceptor.Tr(s);
		}
		protected new IQDoubleValidatorSignals Emit {
			get { return (IQDoubleValidatorSignals) Q_EMIT; }
		}
	}

	public interface IQDoubleValidatorSignals : IQValidatorSignals {
	}
}
