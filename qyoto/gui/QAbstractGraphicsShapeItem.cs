//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QAbstractGraphicsShapeItem")]
	public abstract class QAbstractGraphicsShapeItem : QGraphicsItem, IDisposable {
 		protected QAbstractGraphicsShapeItem(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QAbstractGraphicsShapeItem), this);
			interceptor = (QAbstractGraphicsShapeItem) realProxy.GetTransparentProxy();
		}
		public QAbstractGraphicsShapeItem(QGraphicsItem parent, QGraphicsScene scene) : this((Type) null) {
			CreateProxy();
			NewQAbstractGraphicsShapeItem(parent,scene);
		}
		[SmokeMethod("QAbstractGraphicsShapeItem", "(QGraphicsItem*, QGraphicsScene*)", "##")]
		private void NewQAbstractGraphicsShapeItem(QGraphicsItem parent, QGraphicsScene scene) {
			((QAbstractGraphicsShapeItem) interceptor).NewQAbstractGraphicsShapeItem(parent,scene);
		}
		public QAbstractGraphicsShapeItem(QGraphicsItem parent) : this((Type) null) {
			CreateProxy();
			NewQAbstractGraphicsShapeItem(parent);
		}
		[SmokeMethod("QAbstractGraphicsShapeItem", "(QGraphicsItem*)", "#")]
		private void NewQAbstractGraphicsShapeItem(QGraphicsItem parent) {
			((QAbstractGraphicsShapeItem) interceptor).NewQAbstractGraphicsShapeItem(parent);
		}
		public QAbstractGraphicsShapeItem() : this((Type) null) {
			CreateProxy();
			NewQAbstractGraphicsShapeItem();
		}
		[SmokeMethod("QAbstractGraphicsShapeItem", "()", "")]
		private void NewQAbstractGraphicsShapeItem() {
			((QAbstractGraphicsShapeItem) interceptor).NewQAbstractGraphicsShapeItem();
		}
		[SmokeMethod("pen", "() const", "")]
		public QPen Pen() {
			return ((QAbstractGraphicsShapeItem) interceptor).Pen();
		}
		[SmokeMethod("setPen", "(const QPen&)", "#")]
		public void SetPen(QPen pen) {
			((QAbstractGraphicsShapeItem) interceptor).SetPen(pen);
		}
		[SmokeMethod("brush", "() const", "")]
		public QBrush Brush() {
			return ((QAbstractGraphicsShapeItem) interceptor).Brush();
		}
		[SmokeMethod("setBrush", "(const QBrush&)", "#")]
		public void SetBrush(QBrush brush) {
			((QAbstractGraphicsShapeItem) interceptor).SetBrush(brush);
		}
		[SmokeMethod("isObscuredBy", "(const QGraphicsItem*) const", "#")]
		public override bool IsObscuredBy(QGraphicsItem item) {
			return ((QAbstractGraphicsShapeItem) interceptor).IsObscuredBy(item);
		}
		[SmokeMethod("opaqueArea", "() const", "")]
		public override QPainterPath OpaqueArea() {
			return ((QAbstractGraphicsShapeItem) interceptor).OpaqueArea();
		}
		~QAbstractGraphicsShapeItem() {
			DisposeQAbstractGraphicsShapeItem();
		}
		public void Dispose() {
			DisposeQAbstractGraphicsShapeItem();
		}
		[SmokeMethod("~QAbstractGraphicsShapeItem", "()", "")]
		private void DisposeQAbstractGraphicsShapeItem() {
			((QAbstractGraphicsShapeItem) interceptor).DisposeQAbstractGraphicsShapeItem();
		}
	}
}
