//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QGraphicsSceneWheelEvent")]
	public class QGraphicsSceneWheelEvent : QGraphicsSceneEvent, IDisposable {
 		protected QGraphicsSceneWheelEvent(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QGraphicsSceneWheelEvent), "QGraphicsSceneWheelEvent", this);
		}
		public QGraphicsSceneWheelEvent(QEvent.TypeOf type) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QGraphicsSceneWheelEvent$", "QGraphicsSceneWheelEvent(QEvent::Type)", typeof(void), typeof(QEvent.TypeOf), type);
		}
		public QGraphicsSceneWheelEvent() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QGraphicsSceneWheelEvent", "QGraphicsSceneWheelEvent()", typeof(void));
		}
		public QPointF Pos() {
			return (QPointF) interceptor.Invoke("pos", "pos() const", typeof(QPointF));
		}
		public void SetPos(QPointF pos) {
			interceptor.Invoke("setPos#", "setPos(const QPointF&)", typeof(void), typeof(QPointF), pos);
		}
		public QPointF ScenePos() {
			return (QPointF) interceptor.Invoke("scenePos", "scenePos() const", typeof(QPointF));
		}
		public void SetScenePos(QPointF pos) {
			interceptor.Invoke("setScenePos#", "setScenePos(const QPointF&)", typeof(void), typeof(QPointF), pos);
		}
		public QPoint ScreenPos() {
			return (QPoint) interceptor.Invoke("screenPos", "screenPos() const", typeof(QPoint));
		}
		public void SetScreenPos(QPoint pos) {
			interceptor.Invoke("setScreenPos#", "setScreenPos(const QPoint&)", typeof(void), typeof(QPoint), pos);
		}
		public int Buttons() {
			return (int) interceptor.Invoke("buttons", "buttons() const", typeof(int));
		}
		public void SetButtons(int buttons) {
			interceptor.Invoke("setButtons$", "setButtons(Qt::MouseButtons)", typeof(void), typeof(int), buttons);
		}
		public int Modifiers() {
			return (int) interceptor.Invoke("modifiers", "modifiers() const", typeof(int));
		}
		public void SetModifiers(int modifiers) {
			interceptor.Invoke("setModifiers$", "setModifiers(Qt::KeyboardModifiers)", typeof(void), typeof(int), modifiers);
		}
		public int Delta() {
			return (int) interceptor.Invoke("delta", "delta() const", typeof(int));
		}
		public void SetDelta(int delta) {
			interceptor.Invoke("setDelta$", "setDelta(int)", typeof(void), typeof(int), delta);
		}
		~QGraphicsSceneWheelEvent() {
			interceptor.Invoke("~QGraphicsSceneWheelEvent", "~QGraphicsSceneWheelEvent()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~QGraphicsSceneWheelEvent", "~QGraphicsSceneWheelEvent()", typeof(void));
		}
	}
}
