//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QIconDragEvent")]
	public class QIconDragEvent : QEvent, IDisposable {
 		protected QIconDragEvent(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QIconDragEvent), this);
			interceptor = (QIconDragEvent) realProxy.GetTransparentProxy();
		}
		public QIconDragEvent() : this((Type) null) {
			CreateProxy();
			NewQIconDragEvent();
		}
		[SmokeMethod("QIconDragEvent", "()", "")]
		private void NewQIconDragEvent() {
			((QIconDragEvent) interceptor).NewQIconDragEvent();
		}
		~QIconDragEvent() {
			DisposeQIconDragEvent();
		}
		public new void Dispose() {
			DisposeQIconDragEvent();
		}
		[SmokeMethod("~QIconDragEvent", "()", "")]
		private void DisposeQIconDragEvent() {
			((QIconDragEvent) interceptor).DisposeQIconDragEvent();
		}
	}
}
