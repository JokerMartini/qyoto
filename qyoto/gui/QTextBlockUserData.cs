//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QTextBlockUserData")]
	public class QTextBlockUserData : MarshalByRefObject, IDisposable {
		protected QTextBlockUserData interceptor = null;
		private IntPtr smokeObject;
		protected QTextBlockUserData(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextBlockUserData), this);
			interceptor = (QTextBlockUserData) realProxy.GetTransparentProxy();
		}
		public QTextBlockUserData() : this((Type) null) {
			CreateProxy();
			NewQTextBlockUserData();
		}
		[SmokeMethod("QTextBlockUserData", "()", "")]
		private void NewQTextBlockUserData() {
			((QTextBlockUserData) interceptor).NewQTextBlockUserData();
		}
		~QTextBlockUserData() {
			DisposeQTextBlockUserData();
		}
		public void Dispose() {
			DisposeQTextBlockUserData();
		}
		[SmokeMethod("~QTextBlockUserData", "()", "")]
		private void DisposeQTextBlockUserData() {
			((QTextBlockUserData) interceptor).DisposeQTextBlockUserData();
		}
	}
}
