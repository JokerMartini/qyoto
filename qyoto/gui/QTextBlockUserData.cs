//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QTextBlockUserData")]
	public class QTextBlockUserData : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
		private IntPtr _smokeObject;
		protected QTextBlockUserData(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextBlockUserData), this);
			_interceptor = (QTextBlockUserData) realProxy.GetTransparentProxy();
		}
		private QTextBlockUserData ProxyQTextBlockUserData() {
			return (QTextBlockUserData) _interceptor;
		}
		public QTextBlockUserData() : this((Type) null) {
			CreateProxy();
			NewQTextBlockUserData();
		}
		[SmokeMethod("QTextBlockUserData", "()", "")]
		private void NewQTextBlockUserData() {
			ProxyQTextBlockUserData().NewQTextBlockUserData();
		}
		~QTextBlockUserData() {
			DisposeQTextBlockUserData();
		}
		public void Dispose() {
			DisposeQTextBlockUserData();
		}
		[SmokeMethod("~QTextBlockUserData", "()", "")]
		private void DisposeQTextBlockUserData() {
			ProxyQTextBlockUserData().DisposeQTextBlockUserData();
		}
	}
}
