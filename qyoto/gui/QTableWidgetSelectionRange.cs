//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QTableWidgetSelectionRange")]
	public class QTableWidgetSelectionRange : MarshalByRefObject, IDisposable {
		protected QTableWidgetSelectionRange interceptor = null;
		private IntPtr smokeObject;
		protected QTableWidgetSelectionRange(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTableWidgetSelectionRange), this);
			interceptor = (QTableWidgetSelectionRange) realProxy.GetTransparentProxy();
		}
		public QTableWidgetSelectionRange() : this((Type) null) {
			CreateProxy();
			NewQTableWidgetSelectionRange();
		}
		[SmokeMethod("QTableWidgetSelectionRange", "()", "")]
		private void NewQTableWidgetSelectionRange() {
			((QTableWidgetSelectionRange) interceptor).NewQTableWidgetSelectionRange();
		}
		public QTableWidgetSelectionRange(int top, int left, int bottom, int right) : this((Type) null) {
			CreateProxy();
			NewQTableWidgetSelectionRange(top,left,bottom,right);
		}
		[SmokeMethod("QTableWidgetSelectionRange", "(int, int, int, int)", "$$$$")]
		private void NewQTableWidgetSelectionRange(int top, int left, int bottom, int right) {
			((QTableWidgetSelectionRange) interceptor).NewQTableWidgetSelectionRange(top,left,bottom,right);
		}
		public QTableWidgetSelectionRange(QTableWidgetSelectionRange other) : this((Type) null) {
			CreateProxy();
			NewQTableWidgetSelectionRange(other);
		}
		[SmokeMethod("QTableWidgetSelectionRange", "(const QTableWidgetSelectionRange&)", "#")]
		private void NewQTableWidgetSelectionRange(QTableWidgetSelectionRange other) {
			((QTableWidgetSelectionRange) interceptor).NewQTableWidgetSelectionRange(other);
		}
		[SmokeMethod("topRow", "() const", "")]
		public int TopRow() {
			return ((QTableWidgetSelectionRange) interceptor).TopRow();
		}
		[SmokeMethod("bottomRow", "() const", "")]
		public int BottomRow() {
			return ((QTableWidgetSelectionRange) interceptor).BottomRow();
		}
		[SmokeMethod("leftColumn", "() const", "")]
		public int LeftColumn() {
			return ((QTableWidgetSelectionRange) interceptor).LeftColumn();
		}
		[SmokeMethod("rightColumn", "() const", "")]
		public int RightColumn() {
			return ((QTableWidgetSelectionRange) interceptor).RightColumn();
		}
		[SmokeMethod("rowCount", "() const", "")]
		public int RowCount() {
			return ((QTableWidgetSelectionRange) interceptor).RowCount();
		}
		[SmokeMethod("columnCount", "() const", "")]
		public int ColumnCount() {
			return ((QTableWidgetSelectionRange) interceptor).ColumnCount();
		}
		~QTableWidgetSelectionRange() {
			DisposeQTableWidgetSelectionRange();
		}
		public void Dispose() {
			DisposeQTableWidgetSelectionRange();
		}
		[SmokeMethod("~QTableWidgetSelectionRange", "()", "")]
		private void DisposeQTableWidgetSelectionRange() {
			((QTableWidgetSelectionRange) interceptor).DisposeQTableWidgetSelectionRange();
		}
	}
}
