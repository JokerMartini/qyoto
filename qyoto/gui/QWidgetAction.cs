//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;
	using System.Text;

	[SmokeClass("QWidgetAction")]
	public class QWidgetAction : QAction, IDisposable {
 		protected QWidgetAction(Type dummy) : base((Type) null) {}
		interface IQWidgetActionProxy {
			string Tr(string s, string c);
			string Tr(string s);
		}

		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QWidgetAction), this);
			_interceptor = (QWidgetAction) realProxy.GetTransparentProxy();
		}
		private QWidgetAction ProxyQWidgetAction() {
			return (QWidgetAction) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QWidgetAction() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQWidgetActionProxy), null);
			_staticInterceptor = (IQWidgetActionProxy) realProxy.GetTransparentProxy();
		}
		private static IQWidgetActionProxy StaticQWidgetAction() {
			return (IQWidgetActionProxy) _staticInterceptor;
		}

		// int qt_metacall(QMetaObject::Call arg1,int arg2,void** arg3); >>>> NOT CONVERTED
		public QWidgetAction(QObject parent) : this((Type) null) {
			CreateProxy();
			NewQWidgetAction(parent);
		}
		[SmokeMethod("QWidgetAction(QObject*)")]
		private void NewQWidgetAction(QObject parent) {
			ProxyQWidgetAction().NewQWidgetAction(parent);
		}
		[SmokeMethod("setDefaultWidget(QWidget*)")]
		public void SetDefaultWidget(QWidget w) {
			ProxyQWidgetAction().SetDefaultWidget(w);
		}
		[SmokeMethod("defaultWidget() const")]
		public QWidget DefaultWidget() {
			return ProxyQWidgetAction().DefaultWidget();
		}
		[SmokeMethod("requestWidget(QWidget*)")]
		public QWidget RequestWidget(QWidget parent) {
			return ProxyQWidgetAction().RequestWidget(parent);
		}
		[SmokeMethod("releaseWidget(QWidget*)")]
		public void ReleaseWidget(QWidget widget) {
			ProxyQWidgetAction().ReleaseWidget(widget);
		}
		[SmokeMethod("tr(const char*, const char*)")]
		public static new string Tr(string s, string c) {
			return StaticQWidgetAction().Tr(s,c);
		}
		[SmokeMethod("tr(const char*)")]
		public static new string Tr(string s) {
			return StaticQWidgetAction().Tr(s);
		}
		[SmokeMethod("event(QEvent*)")]
		public new virtual bool Event(QEvent arg1) {
			return ProxyQWidgetAction().Event(arg1);
		}
		[SmokeMethod("createWidget(QWidget*)")]
		protected virtual QWidget CreateWidget(QWidget parent) {
			return ProxyQWidgetAction().CreateWidget(parent);
		}
		[SmokeMethod("deleteWidget(QWidget*)")]
		protected virtual void DeleteWidget(QWidget widget) {
			ProxyQWidgetAction().DeleteWidget(widget);
		}
		// QList<QWidget*> createdWidgets(); >>>> NOT CONVERTED
		~QWidgetAction() {
			DisposeQWidgetAction();
		}
		public new void Dispose() {
			DisposeQWidgetAction();
		}
		[SmokeMethod("~QWidgetAction()")]
		private void DisposeQWidgetAction() {
			ProxyQWidgetAction().DisposeQWidgetAction();
		}
		protected new IQWidgetActionSignals Emit() {
			return (IQWidgetActionSignals) Q_EMIT;
		}
	}

	public interface IQWidgetActionSignals : IQActionSignals {
	}
}
