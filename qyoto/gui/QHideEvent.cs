//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QHideEvent")]
	public class QHideEvent : QEvent, IDisposable {
 		protected QHideEvent(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QHideEvent), this);
			interceptor = (QHideEvent) realProxy.GetTransparentProxy();
		}
		public QHideEvent() : this((Type) null) {
			CreateProxy();
			NewQHideEvent();
		}
		[SmokeMethod("QHideEvent", "()", "")]
		private void NewQHideEvent() {
			((QHideEvent) interceptor).NewQHideEvent();
		}
		~QHideEvent() {
			DisposeQHideEvent();
		}
		public new void Dispose() {
			DisposeQHideEvent();
		}
		[SmokeMethod("~QHideEvent", "()", "")]
		private void DisposeQHideEvent() {
			((QHideEvent) interceptor).DisposeQHideEvent();
		}
	}
}
