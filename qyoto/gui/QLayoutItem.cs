//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	public interface IQLayoutItem {
			QSize SizeHint();
			QSize MinimumSize();
			QSize MaximumSize();
			int ExpandingDirections();
			void SetGeometry(QRect arg1);
			QRect Geometry();
			bool IsEmpty();
			bool HasHeightForWidth();
			int HeightForWidth(int arg1);
			int MinimumHeightForWidth(int arg1);
			void Invalidate();
			QWidget Widget();
			QLayout Layout();
			QSpacerItem SpacerItem();
			int Alignment();
			void SetAlignment(int a);
	}

	[SmokeClass("QLayoutItem")]
	public abstract class QLayoutItem : MarshalByRefObject, IQLayoutItem {
		protected Object _interceptor = null;
		private IntPtr _smokeObject;
		protected QLayoutItem(Type dummy) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QLayoutItem), this);
			_interceptor = (QLayoutItem) realProxy.GetTransparentProxy();
		}
		private QLayoutItem ProxyQLayoutItem() {
			return (QLayoutItem) _interceptor;
		}
		public QLayoutItem(int alignment) : this((Type) null) {
			CreateProxy();
			NewQLayoutItem(alignment);
		}
		[SmokeMethod("QLayoutItem", "(Qt::Alignment)", "$")]
		private void NewQLayoutItem(int alignment) {
			ProxyQLayoutItem().NewQLayoutItem(alignment);
		}
		public QLayoutItem() : this((Type) null) {
			CreateProxy();
			NewQLayoutItem();
		}
		[SmokeMethod("QLayoutItem", "()", "")]
		private void NewQLayoutItem() {
			ProxyQLayoutItem().NewQLayoutItem();
		}
		public abstract QSize SizeHint();
		public abstract QSize MinimumSize();
		public abstract QSize MaximumSize();
		public abstract int ExpandingDirections();
		public abstract void SetGeometry(QRect arg1);
		public abstract QRect Geometry();
		public abstract bool IsEmpty();
		[SmokeMethod("hasHeightForWidth", "() const", "")]
		public virtual bool HasHeightForWidth() {
			return ProxyQLayoutItem().HasHeightForWidth();
		}
		[SmokeMethod("heightForWidth", "(int) const", "$")]
		public virtual int HeightForWidth(int arg1) {
			return ProxyQLayoutItem().HeightForWidth(arg1);
		}
		[SmokeMethod("minimumHeightForWidth", "(int) const", "$")]
		public virtual int MinimumHeightForWidth(int arg1) {
			return ProxyQLayoutItem().MinimumHeightForWidth(arg1);
		}
		[SmokeMethod("invalidate", "()", "")]
		public virtual void Invalidate() {
			ProxyQLayoutItem().Invalidate();
		}
		[SmokeMethod("widget", "()", "")]
		public virtual QWidget Widget() {
			return ProxyQLayoutItem().Widget();
		}
		[SmokeMethod("layout", "()", "")]
		public virtual QLayout Layout() {
			return ProxyQLayoutItem().Layout();
		}
		[SmokeMethod("spacerItem", "()", "")]
		public virtual QSpacerItem SpacerItem() {
			return ProxyQLayoutItem().SpacerItem();
		}
		[SmokeMethod("alignment", "() const", "")]
		public int Alignment() {
			return ProxyQLayoutItem().Alignment();
		}
		[SmokeMethod("setAlignment", "(Qt::Alignment)", "$")]
		public void SetAlignment(int a) {
			ProxyQLayoutItem().SetAlignment(a);
		}
	}
}
