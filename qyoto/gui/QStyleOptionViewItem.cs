//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionViewItem")]
	public class QStyleOptionViewItem : QStyleOption, IDisposable {
 		protected QStyleOptionViewItem(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QStyleOptionViewItem), this);
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_ViewItem,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public enum Position {
			Left = 0,
			Right = 1,
			Top = 2,
			Bottom = 3,
		}
		public QStyleOptionViewItem() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionViewItem", "QStyleOptionViewItem()", typeof(void));
		}
		public QStyleOptionViewItem(QStyleOptionViewItem other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionViewItem#", "QStyleOptionViewItem(const QStyleOptionViewItem&)", typeof(void), typeof(QStyleOptionViewItem), other);
		}
		public QStyleOptionViewItem(int version) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionViewItem$", "QStyleOptionViewItem(int)", typeof(void), typeof(int), version);
		}
		~QStyleOptionViewItem() {
			interceptor.Invoke("~QStyleOptionViewItem", "~QStyleOptionViewItem()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~QStyleOptionViewItem", "~QStyleOptionViewItem()", typeof(void));
		}
	}
}
