//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionViewItem")]
	public class QStyleOptionViewItem : QStyleOption, IDisposable {
 		protected QStyleOptionViewItem(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionViewItem), this);
			interceptor = (QStyleOptionViewItem) realProxy.GetTransparentProxy();
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_ViewItem,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public enum Position {
			Left = 0,
			Right = 1,
			Top = 2,
			Bottom = 3,
		}
		public QStyleOptionViewItem() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionViewItem();
		}
		[SmokeMethod("QStyleOptionViewItem", "()", "")]
		private void NewQStyleOptionViewItem() {
			((QStyleOptionViewItem) interceptor).NewQStyleOptionViewItem();
		}
		public QStyleOptionViewItem(QStyleOptionViewItem other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionViewItem(other);
		}
		[SmokeMethod("QStyleOptionViewItem", "(const QStyleOptionViewItem&)", "#")]
		private void NewQStyleOptionViewItem(QStyleOptionViewItem other) {
			((QStyleOptionViewItem) interceptor).NewQStyleOptionViewItem(other);
		}
		public QStyleOptionViewItem(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionViewItem(version);
		}
		[SmokeMethod("QStyleOptionViewItem", "(int)", "$")]
		private void NewQStyleOptionViewItem(int version) {
			((QStyleOptionViewItem) interceptor).NewQStyleOptionViewItem(version);
		}
		~QStyleOptionViewItem() {
			DisposeQStyleOptionViewItem();
		}
		public void Dispose() {
			DisposeQStyleOptionViewItem();
		}
		[SmokeMethod("~QStyleOptionViewItem", "()", "")]
		private void DisposeQStyleOptionViewItem() {
			((QStyleOptionViewItem) interceptor).DisposeQStyleOptionViewItem();
		}
	}
}
