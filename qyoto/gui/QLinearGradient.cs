//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QLinearGradient")]
	public class QLinearGradient : QGradient, IDisposable {
 		protected QLinearGradient(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QLinearGradient), this);
			interceptor = (QLinearGradient) realProxy.GetTransparentProxy();
		}
		public QLinearGradient() : this((Type) null) {
			CreateProxy();
			NewQLinearGradient();
		}
		[SmokeMethod("QLinearGradient", "()", "")]
		private void NewQLinearGradient() {
			((QLinearGradient) interceptor).NewQLinearGradient();
		}
		public QLinearGradient(QPointF start, QPointF finalStop) : this((Type) null) {
			CreateProxy();
			NewQLinearGradient(start,finalStop);
		}
		[SmokeMethod("QLinearGradient", "(const QPointF&, const QPointF&)", "##")]
		private void NewQLinearGradient(QPointF start, QPointF finalStop) {
			((QLinearGradient) interceptor).NewQLinearGradient(start,finalStop);
		}
		public QLinearGradient(double xStart, double yStart, double xFinalStop, double yFinalStop) : this((Type) null) {
			CreateProxy();
			NewQLinearGradient(xStart,yStart,xFinalStop,yFinalStop);
		}
		[SmokeMethod("QLinearGradient", "(qreal, qreal, qreal, qreal)", "$$$$")]
		private void NewQLinearGradient(double xStart, double yStart, double xFinalStop, double yFinalStop) {
			((QLinearGradient) interceptor).NewQLinearGradient(xStart,yStart,xFinalStop,yFinalStop);
		}
		[SmokeMethod("start", "() const", "")]
		public QPointF Start() {
			return ((QLinearGradient) interceptor).Start();
		}
		[SmokeMethod("setStart", "(const QPointF&)", "#")]
		public void SetStart(QPointF start) {
			((QLinearGradient) interceptor).SetStart(start);
		}
		[SmokeMethod("setStart", "(qreal, qreal)", "$$")]
		public void SetStart(double x, double y) {
			((QLinearGradient) interceptor).SetStart(x,y);
		}
		[SmokeMethod("finalStop", "() const", "")]
		public QPointF FinalStop() {
			return ((QLinearGradient) interceptor).FinalStop();
		}
		[SmokeMethod("setFinalStop", "(const QPointF&)", "#")]
		public void SetFinalStop(QPointF stop) {
			((QLinearGradient) interceptor).SetFinalStop(stop);
		}
		[SmokeMethod("setFinalStop", "(qreal, qreal)", "$$")]
		public void SetFinalStop(double x, double y) {
			((QLinearGradient) interceptor).SetFinalStop(x,y);
		}
		~QLinearGradient() {
			DisposeQLinearGradient();
		}
		public void Dispose() {
			DisposeQLinearGradient();
		}
		[SmokeMethod("~QLinearGradient", "()", "")]
		private void DisposeQLinearGradient() {
			((QLinearGradient) interceptor).DisposeQLinearGradient();
		}
	}
}
