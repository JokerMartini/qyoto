//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionToolBar")]
	public class QStyleOptionToolBar : QStyleOption, IDisposable {
 		protected QStyleOptionToolBar(Type dummy) : base((Type) null) {}
		[SmokeClass("QStyleOptionToolBar")]
		interface IQStyleOptionToolBarProxy {
		}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionToolBar), this);
			_interceptor = (QStyleOptionToolBar) realProxy.GetTransparentProxy();
		}
		private QStyleOptionToolBar ProxyQStyleOptionToolBar() {
			return (QStyleOptionToolBar) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QStyleOptionToolBar() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQStyleOptionToolBarProxy), null);
			_staticInterceptor = (IQStyleOptionToolBarProxy) realProxy.GetTransparentProxy();
		}
		private static IQStyleOptionToolBarProxy StaticQStyleOptionToolBar() {
			return (IQStyleOptionToolBarProxy) _staticInterceptor;
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_ToolBar,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public enum ToolBarPosition {
			Beginning = 0,
			Middle = 1,
			End = 2,
			OnlyOne = 3,
		}
		public enum ToolBarFeature {
			None = 0x0,
			Movable = 0x1,
		}
		public QStyleOptionToolBar() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionToolBar();
		}
		[SmokeMethod("QStyleOptionToolBar", "()", "")]
		private void NewQStyleOptionToolBar() {
			ProxyQStyleOptionToolBar().NewQStyleOptionToolBar();
		}
		public QStyleOptionToolBar(QStyleOptionToolBar other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionToolBar(other);
		}
		[SmokeMethod("QStyleOptionToolBar", "(const QStyleOptionToolBar&)", "#")]
		private void NewQStyleOptionToolBar(QStyleOptionToolBar other) {
			ProxyQStyleOptionToolBar().NewQStyleOptionToolBar(other);
		}
		public QStyleOptionToolBar(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionToolBar(version);
		}
		[SmokeMethod("QStyleOptionToolBar", "(int)", "$")]
		private void NewQStyleOptionToolBar(int version) {
			ProxyQStyleOptionToolBar().NewQStyleOptionToolBar(version);
		}
		~QStyleOptionToolBar() {
			DisposeQStyleOptionToolBar();
		}
		public void Dispose() {
			DisposeQStyleOptionToolBar();
		}
		[SmokeMethod("~QStyleOptionToolBar", "()", "")]
		private void DisposeQStyleOptionToolBar() {
			ProxyQStyleOptionToolBar().DisposeQStyleOptionToolBar();
		}
	}
}
