//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionSlider")]
	public class QStyleOptionSlider : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionSlider(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionSlider), this);
			interceptor = (QStyleOptionSlider) realProxy.GetTransparentProxy();
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_Slider,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionSlider() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionSlider();
		}
		[SmokeMethod("QStyleOptionSlider", "()", "")]
		private void NewQStyleOptionSlider() {
			((QStyleOptionSlider) interceptor).NewQStyleOptionSlider();
		}
		public QStyleOptionSlider(QStyleOptionSlider other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionSlider(other);
		}
		[SmokeMethod("QStyleOptionSlider", "(const QStyleOptionSlider&)", "#")]
		private void NewQStyleOptionSlider(QStyleOptionSlider other) {
			((QStyleOptionSlider) interceptor).NewQStyleOptionSlider(other);
		}
		public QStyleOptionSlider(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionSlider(version);
		}
		[SmokeMethod("QStyleOptionSlider", "(int)", "$")]
		private void NewQStyleOptionSlider(int version) {
			((QStyleOptionSlider) interceptor).NewQStyleOptionSlider(version);
		}
		~QStyleOptionSlider() {
			DisposeQStyleOptionSlider();
		}
		public void Dispose() {
			DisposeQStyleOptionSlider();
		}
		[SmokeMethod("~QStyleOptionSlider", "()", "")]
		private void DisposeQStyleOptionSlider() {
			((QStyleOptionSlider) interceptor).DisposeQStyleOptionSlider();
		}
	}
}
