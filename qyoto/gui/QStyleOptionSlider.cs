//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionSlider")]
	public class QStyleOptionSlider : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionSlider(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QStyleOptionSlider), this);
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_Slider,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionSlider() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionSlider", "QStyleOptionSlider()", typeof(void));
		}
		public QStyleOptionSlider(QStyleOptionSlider other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionSlider#", "QStyleOptionSlider(const QStyleOptionSlider&)", typeof(void), typeof(QStyleOptionSlider), other);
		}
		public QStyleOptionSlider(int version) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionSlider$", "QStyleOptionSlider(int)", typeof(void), typeof(int), version);
		}
		~QStyleOptionSlider() {
			interceptor.Invoke("~QStyleOptionSlider", "~QStyleOptionSlider()", typeof(void));
		}
		public void Dispose() {
			interceptor.Invoke("~QStyleOptionSlider", "~QStyleOptionSlider()", typeof(void));
		}
	}
}
