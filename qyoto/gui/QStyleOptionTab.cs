//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QStyleOptionTab")]
    public class QStyleOptionTab : QStyleOption, IDisposable {
        protected QStyleOptionTab(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QStyleOptionTab), this);
        }
        public enum StyleOptionType {
            Type = QStyleOption.OptionType.SO_Tab,
        }
        public enum StyleOptionVersion {
            Version = 1,
        }
        public enum TabPosition {
            Beginning = 0,
            Middle = 1,
            End = 2,
            OnlyOneTab = 3,
        }
        public enum SelectedPosition {
            NotAdjacent = 0,
            NextIsSelected = 1,
            PreviousIsSelected = 2,
        }
        public enum CornerWidget {
            NoCornerWidgets = 0x00,
            LeftCornerWidget = 0x01,
            RightCornerWidget = 0x02,
        }
        public QStyleOptionTab() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionTab", "QStyleOptionTab()", typeof(void));
        }
        public QStyleOptionTab(QStyleOptionTab other) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionTab#", "QStyleOptionTab(const QStyleOptionTab&)", typeof(void), typeof(QStyleOptionTab), other);
        }
        public QStyleOptionTab(int version) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionTab$", "QStyleOptionTab(int)", typeof(void), typeof(int), version);
        }
        ~QStyleOptionTab() {
            interceptor.Invoke("~QStyleOptionTab", "~QStyleOptionTab()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QStyleOptionTab", "~QStyleOptionTab()", typeof(void));
        }
    }
}
