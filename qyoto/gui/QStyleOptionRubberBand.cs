//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
	using System;
	[SmokeClass("QStyleOptionRubberBand")]
	public class QStyleOptionRubberBand : QStyleOption, IDisposable {
 		protected QStyleOptionRubberBand(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QStyleOptionRubberBand), this);
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_RubberBand,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionRubberBand() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionRubberBand", "QStyleOptionRubberBand()", typeof(void));
		}
		public QStyleOptionRubberBand(QStyleOptionRubberBand other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionRubberBand#", "QStyleOptionRubberBand(const QStyleOptionRubberBand&)", typeof(void), typeof(QStyleOptionRubberBand), other);
		}
		public QStyleOptionRubberBand(int version) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QStyleOptionRubberBand$", "QStyleOptionRubberBand(int)", typeof(void), typeof(int), version);
		}
		~QStyleOptionRubberBand() {
			interceptor.Invoke("~QStyleOptionRubberBand", "~QStyleOptionRubberBand()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~QStyleOptionRubberBand", "~QStyleOptionRubberBand()", typeof(void));
		}
	}
}
