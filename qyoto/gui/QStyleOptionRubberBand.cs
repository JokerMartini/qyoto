//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionRubberBand")]
	public class QStyleOptionRubberBand : QStyleOption, IDisposable {
 		protected QStyleOptionRubberBand(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionRubberBand), this);
			interceptor = (QStyleOptionRubberBand) realProxy.GetTransparentProxy();
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_RubberBand,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionRubberBand() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionRubberBand();
		}
		[SmokeMethod("QStyleOptionRubberBand", "()", "")]
		private void NewQStyleOptionRubberBand() {
			((QStyleOptionRubberBand) interceptor).NewQStyleOptionRubberBand();
		}
		public QStyleOptionRubberBand(QStyleOptionRubberBand other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionRubberBand(other);
		}
		[SmokeMethod("QStyleOptionRubberBand", "(const QStyleOptionRubberBand&)", "#")]
		private void NewQStyleOptionRubberBand(QStyleOptionRubberBand other) {
			((QStyleOptionRubberBand) interceptor).NewQStyleOptionRubberBand(other);
		}
		public QStyleOptionRubberBand(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionRubberBand(version);
		}
		[SmokeMethod("QStyleOptionRubberBand", "(int)", "$")]
		private void NewQStyleOptionRubberBand(int version) {
			((QStyleOptionRubberBand) interceptor).NewQStyleOptionRubberBand(version);
		}
		~QStyleOptionRubberBand() {
			DisposeQStyleOptionRubberBand();
		}
		public void Dispose() {
			DisposeQStyleOptionRubberBand();
		}
		[SmokeMethod("~QStyleOptionRubberBand", "()", "")]
		private void DisposeQStyleOptionRubberBand() {
			((QStyleOptionRubberBand) interceptor).DisposeQStyleOptionRubberBand();
		}
	}
}
