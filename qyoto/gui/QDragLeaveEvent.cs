//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QDragLeaveEvent")]
	public class QDragLeaveEvent : QEvent, IDisposable {
 		protected QDragLeaveEvent(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDragLeaveEvent), this);
			_interceptor = (QDragLeaveEvent) realProxy.GetTransparentProxy();
		}
		private QDragLeaveEvent ProxyQDragLeaveEvent() {
			return (QDragLeaveEvent) _interceptor;
		}
		public QDragLeaveEvent() : this((Type) null) {
			CreateProxy();
			NewQDragLeaveEvent();
		}
		[SmokeMethod("QDragLeaveEvent", "()", "")]
		private void NewQDragLeaveEvent() {
			ProxyQDragLeaveEvent().NewQDragLeaveEvent();
		}
		~QDragLeaveEvent() {
			DisposeQDragLeaveEvent();
		}
		public new void Dispose() {
			DisposeQDragLeaveEvent();
		}
		[SmokeMethod("~QDragLeaveEvent", "()", "")]
		private void DisposeQDragLeaveEvent() {
			ProxyQDragLeaveEvent().DisposeQDragLeaveEvent();
		}
	}
}
