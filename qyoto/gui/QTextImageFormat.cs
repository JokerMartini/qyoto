//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QTextImageFormat")]
	public class QTextImageFormat : QTextCharFormat, IDisposable {
 		protected QTextImageFormat(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QTextImageFormat), this);
			interceptor = (QTextImageFormat) realProxy.GetTransparentProxy();
		}
		public QTextImageFormat() : this((Type) null) {
			CreateProxy();
			NewQTextImageFormat();
		}
		[SmokeMethod("QTextImageFormat", "()", "")]
		private void NewQTextImageFormat() {
			((QTextImageFormat) interceptor).NewQTextImageFormat();
		}
		[SmokeMethod("isValid", "() const", "")]
		public bool IsValid() {
			return ((QTextImageFormat) interceptor).IsValid();
		}
		[SmokeMethod("setName", "(const QString&)", "$")]
		public void SetName(string name) {
			((QTextImageFormat) interceptor).SetName(name);
		}
		[SmokeMethod("name", "() const", "")]
		public string Name() {
			return ((QTextImageFormat) interceptor).Name();
		}
		[SmokeMethod("setWidth", "(qreal)", "$")]
		public void SetWidth(double width) {
			((QTextImageFormat) interceptor).SetWidth(width);
		}
		[SmokeMethod("width", "() const", "")]
		public double Width() {
			return ((QTextImageFormat) interceptor).Width();
		}
		[SmokeMethod("setHeight", "(qreal)", "$")]
		public void SetHeight(double height) {
			((QTextImageFormat) interceptor).SetHeight(height);
		}
		[SmokeMethod("height", "() const", "")]
		public double Height() {
			return ((QTextImageFormat) interceptor).Height();
		}
		~QTextImageFormat() {
			DisposeQTextImageFormat();
		}
		public void Dispose() {
			DisposeQTextImageFormat();
		}
		[SmokeMethod("~QTextImageFormat", "()", "")]
		private void DisposeQTextImageFormat() {
			((QTextImageFormat) interceptor).DisposeQTextImageFormat();
		}
	}
}
