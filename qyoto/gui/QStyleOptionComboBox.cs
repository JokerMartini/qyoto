//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;

	[SmokeClass("QStyleOptionComboBox")]
	public class QStyleOptionComboBox : QStyleOptionComplex, IDisposable {
 		protected QStyleOptionComboBox(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QStyleOptionComboBox), this);
			_interceptor = (QStyleOptionComboBox) realProxy.GetTransparentProxy();
		}
		private QStyleOptionComboBox ProxyQStyleOptionComboBox() {
			return (QStyleOptionComboBox) _interceptor;
		}
		public enum StyleOptionType {
			Type = QStyleOption.OptionType.SO_ComboBox,
		}
		public enum StyleOptionVersion {
			Version = 1,
		}
		public QStyleOptionComboBox() : this((Type) null) {
			CreateProxy();
			NewQStyleOptionComboBox();
		}
		[SmokeMethod("QStyleOptionComboBox", "()", "")]
		private void NewQStyleOptionComboBox() {
			ProxyQStyleOptionComboBox().NewQStyleOptionComboBox();
		}
		public QStyleOptionComboBox(QStyleOptionComboBox other) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionComboBox(other);
		}
		[SmokeMethod("QStyleOptionComboBox", "(const QStyleOptionComboBox&)", "#")]
		private void NewQStyleOptionComboBox(QStyleOptionComboBox other) {
			ProxyQStyleOptionComboBox().NewQStyleOptionComboBox(other);
		}
		public QStyleOptionComboBox(int version) : this((Type) null) {
			CreateProxy();
			NewQStyleOptionComboBox(version);
		}
		[SmokeMethod("QStyleOptionComboBox", "(int)", "$")]
		private void NewQStyleOptionComboBox(int version) {
			ProxyQStyleOptionComboBox().NewQStyleOptionComboBox(version);
		}
		~QStyleOptionComboBox() {
			DisposeQStyleOptionComboBox();
		}
		public void Dispose() {
			DisposeQStyleOptionComboBox();
		}
		[SmokeMethod("~QStyleOptionComboBox", "()", "")]
		private void DisposeQStyleOptionComboBox() {
			ProxyQStyleOptionComboBox().DisposeQStyleOptionComboBox();
		}
	}
}
