//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;
	using System.Text;

	[SmokeClass("QDBusInterfacePtr")]
	public class QDBusInterfacePtr : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
		protected QDBusInterfacePtr(Type dummy) {}
		interface IQDBusInterfacePtrProxy {
			QDBusInterface Interface(QDBusInterfacePtr lhs);
		}

		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDBusInterfacePtr), this);
			_interceptor = (QDBusInterfacePtr) realProxy.GetTransparentProxy();
		}
		private QDBusInterfacePtr ProxyQDBusInterfacePtr() {
			return (QDBusInterfacePtr) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDBusInterfacePtr() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDBusInterfacePtrProxy), null);
			_staticInterceptor = (IQDBusInterfacePtrProxy) realProxy.GetTransparentProxy();
		}
		private static IQDBusInterfacePtrProxy StaticQDBusInterfacePtr() {
			return (IQDBusInterfacePtrProxy) _staticInterceptor;
		}

		public QDBusInterfacePtr(QDBusInterface iface) : this((Type) null) {
			CreateProxy();
			NewQDBusInterfacePtr(iface);
		}
		[SmokeMethod("QDBusInterfacePtr(QDBusInterface*)")]
		private void NewQDBusInterfacePtr(QDBusInterface iface) {
			ProxyQDBusInterfacePtr().NewQDBusInterfacePtr(iface);
		}
		public QDBusInterfacePtr(QDBusConnection conn, string service, string path, string arg4) : this((Type) null) {
			CreateProxy();
			NewQDBusInterfacePtr(conn,service,path,arg4);
		}
		[SmokeMethod("QDBusInterfacePtr(QDBusConnection&, const QString&, const QString&, const QString&)")]
		private void NewQDBusInterfacePtr(QDBusConnection conn, string service, string path, string arg4) {
			ProxyQDBusInterfacePtr().NewQDBusInterfacePtr(conn,service,path,arg4);
		}
		public QDBusInterfacePtr(QDBusConnection conn, string service, string path) : this((Type) null) {
			CreateProxy();
			NewQDBusInterfacePtr(conn,service,path);
		}
		[SmokeMethod("QDBusInterfacePtr(QDBusConnection&, const QString&, const QString&)")]
		private void NewQDBusInterfacePtr(QDBusConnection conn, string service, string path) {
			ProxyQDBusInterfacePtr().NewQDBusInterfacePtr(conn,service,path);
		}
		public QDBusInterfacePtr(string service, string path, string arg3) : this((Type) null) {
			CreateProxy();
			NewQDBusInterfacePtr(service,path,arg3);
		}
		[SmokeMethod("QDBusInterfacePtr(const QString&, const QString&, const QString&)")]
		private void NewQDBusInterfacePtr(string service, string path, string arg3) {
			ProxyQDBusInterfacePtr().NewQDBusInterfacePtr(service,path,arg3);
		}
		public QDBusInterfacePtr(string service, string path) : this((Type) null) {
			CreateProxy();
			NewQDBusInterfacePtr(service,path);
		}
		[SmokeMethod("QDBusInterfacePtr(const QString&, const QString&)")]
		private void NewQDBusInterfacePtr(string service, string path) {
			ProxyQDBusInterfacePtr().NewQDBusInterfacePtr(service,path);
		}
		[SmokeMethod("interface()")]
		public QDBusInterface Interface() {
			return ProxyQDBusInterfacePtr().Interface();
		}
//		[SmokeMethod("operator->()")]
//		public static QDBusInterface operator->(QDBusInterfacePtr lhs) {
//			return StaticQDBusInterfacePtr().(lhs);
//		}
		~QDBusInterfacePtr() {
			DisposeQDBusInterfacePtr();
		}
		public void Dispose() {
			DisposeQDBusInterfacePtr();
		}
		private void DisposeQDBusInterfacePtr() {
			ProxyQDBusInterfacePtr().DisposeQDBusInterfacePtr();
		}
	}
}
