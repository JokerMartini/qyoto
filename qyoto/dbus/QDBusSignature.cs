//Auto-generated by ../../kalyptus/kalyptus. DO NOT EDIT.
namespace Qyoto {

	using System;
	using System.Text;

	[SmokeClass("QDBusSignature")]
	public class QDBusSignature : MarshalByRefObject, IDisposable {
		protected Object _interceptor = null;
 
		private IntPtr _smokeObject;
		protected QDBusSignature(Type dummy) {}
		interface IQDBusSignatureProxy {
		}

		protected new void CreateProxy() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(QDBusSignature), this);
			_interceptor = (QDBusSignature) realProxy.GetTransparentProxy();
		}
		private QDBusSignature ProxyQDBusSignature() {
			return (QDBusSignature) _interceptor;
		}
		private static Object _staticInterceptor = null;
		static QDBusSignature() {
			SmokeInvocation realProxy = new SmokeInvocation(typeof(IQDBusSignatureProxy), null);
			_staticInterceptor = (IQDBusSignatureProxy) realProxy.GetTransparentProxy();
		}
		private static IQDBusSignatureProxy StaticQDBusSignature() {
			return (IQDBusSignatureProxy) _staticInterceptor;
		}

		public QDBusSignature() : this((Type) null) {
			CreateProxy();
			NewQDBusSignature();
		}
		[SmokeMethod("QDBusSignature()")]
		private void NewQDBusSignature() {
			ProxyQDBusSignature().NewQDBusSignature();
		}
		public QDBusSignature(string signature) : this((Type) null) {
			CreateProxy();
			NewQDBusSignature(signature);
		}
		[SmokeMethod("QDBusSignature(const char*)")]
		private void NewQDBusSignature(string signature) {
			ProxyQDBusSignature().NewQDBusSignature(signature);
		}
		// QDBusSignature* QDBusSignature(const QLatin1String& arg1); >>>> NOT CONVERTED
		~QDBusSignature() {
			DisposeQDBusSignature();
		}
		public void Dispose() {
			DisposeQDBusSignature();
		}
		[SmokeMethod("~QDBusSignature()")]
		private void DisposeQDBusSignature() {
			ProxyQDBusSignature().DisposeQDBusSignature();
		}
	}
}
