//Auto-generated by kalyptus. DO NOT EDIT.
namespace Nepomuk.Search {
    using Kimono;
    using System;
    using Qyoto;
    [SmokeClass("Nepomuk::Search")]
    public class Global {
        private static SmokeInvocation staticInterceptor = null;
        static Global() {
            staticInterceptor = new SmokeInvocation(typeof(Global), null);
        }
        public static uint QHash(Nepomuk.Search.Term arg1) {
            return (uint) staticInterceptor.Invoke("qHash#", "qHash(const Nepomuk::Search::Term&)", typeof(uint), typeof(Nepomuk.Search.Term), arg1);
        }
        public static uint QHash(Nepomuk.Search.Query arg1) {
            return (uint) staticInterceptor.Invoke("qHash#", "qHash(const Nepomuk::Search::Query&)", typeof(uint), typeof(Nepomuk.Search.Query), arg1);
        }
    }
}
